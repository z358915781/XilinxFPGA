// -------------------------------------------------------------
// 
// File Name: Work_CabinetHeatOV_V10\CabinetHeatOV_V10\CabinetHeatOV_V10.v
// Created: 2017-06-08 17:01:05
// 
// Generated by MATLAB 8.6 and HDL Coder 3.7
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 4e-08
// Target subsystem base rate: 4e-08
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: CabinetHeatOV_V10
// Source Path: CabinetHeatOV_V10/CabinetHeatOV_V10
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module CabinetHeatOV_V10
          (
           g_clk,
           Rst_n,
           P_b16,
           Pdc_b16,
           Pdc2ac_co_b16,
           CabnetHeatOV_Ref,
           Delay,
           Pulse_4096Hz,
           Monitor_Reset,
           Out
          );


  input   g_clk;
  input   Rst_n;
  input   signed [15:0] P_b16;  // int16
  input   signed [15:0] Pdc_b16;  // int16
  input   signed [15:0] Pdc2ac_co_b16;  // int16
  input   signed [15:0] CabnetHeatOV_Ref;  // int16
  input   signed [15:0] Delay;  // int16
  input   Pulse_4096Hz;
  input   Monitor_Reset;
  output  Out;


  reg [2:0] Unit_Delay43_out1;  // ufix3
  wire [2:0] Add1_out1;  // ufix3
  wire CT41_out1;
  wire CT1_out1;
  reg  Unit_Delay4_out1;
  wire Switch4_out1;
  wire Switch1_out1;
  wire Or2_out1;
  wire Switch5_out1;
  reg  Unit_Delay6_out1;
  wire CT207_out1;
  reg  Unit_Delay121_out1;
  wire Switch308_out1;
  wire Switch307_out1;
  wire Or1_out1;
  wire Switch309_out1;
  reg  Unit_Delay122_out1;
  wire signed [31:0] Product_out1;  // int32
  wire [24:0] Bit_Slice4_out1;  // ufix25
  wire signed [24:0] Data_Type_Conversion1_out1;  // sfix25
  wire RO8_relop1;
  wire signed [24:0] Switch18_out1;  // sfix25
  wire RO9_relop1;
  wire signed [24:0] Switch17_out1;  // sfix25
  wire signed [15:0] Data_Type_Conversion3_out1;  // int16
  wire signed [16:0] Add2_1;  // sfix17
  wire signed [16:0] Add2_2;  // sfix17
  wire signed [16:0] Add2_out1;  // sfix17
  wire RO1_relop1;
  wire signed [16:0] Switch7_out1;  // sfix17
  wire RO2_relop1;
  wire signed [16:0] Switch6_out1;  // sfix17
  wire signed [15:0] Data_Type_Conversion2_out1;  // int16
  wire signed [16:0] Abs_y;  // sfix17
  wire signed [15:0] Abs_out1;  // int16
  wire signed [15:0] signal1;  // int16
  wire signed [15:0] signal1_1;  // int16
  wire signed [15:0] signal1_2;  // int16
  wire signed [15:0] signal2;  // int16
  wire signed [15:0] signal2_1;  // int16
  wire signed [15:0] signal2_2;  // int16
  wire Dy1_relop1;
  wire signed [15:0] Switch11_out1;  // int16
  wire signed [15:0] Switch3_out1;  // int16
  wire signed [15:0] signal3;  // int16
  wire signed [15:0] signal3_1;  // int16
  wire signed [15:0] signal3_2;  // int16
  wire CT10_out1;
  wire signed [15:0] Switch2_out1;  // int16
  wire signed [15:0] Switch28_out1;  // int16
  wire Dy2_relop1;
  wire signed [15:0] Switch27_out1;  // int16
  reg signed [15:0] Unit_Delay22_out1;  // int16
  wire signed [15:0] Switch46_out1;  // int16
  wire signed [15:0] signal4;  // int16
  wire signed [15:0] signal4_1;  // int16
  wire signed [15:0] signal4_2;  // int16
  wire signed [15:0] Add3_out1;  // int16
  reg  Unit_Delay23_out1;
  wire signal5;
  wire signal5_1;
  wire signal5_2;
  wire Switch29_out1;
  wire Switch30_out1;
  wire Switch47_out1;


  assign Add1_out1 = 3'b001 + Unit_Delay43_out1;



  always @(posedge g_clk)
    begin : Unit_Delay43_process
      if (Rst_n == 1'b0) begin
        Unit_Delay43_out1 <= 3'b000;
      end
      else begin
        Unit_Delay43_out1 <= Add1_out1;
      end
    end



  assign CT41_out1 = Unit_Delay43_out1 == 3'b000;



  assign CT1_out1 = Unit_Delay43_out1 == 3'b000;



  assign Switch4_out1 = (Monitor_Reset == 1'b0 ? Unit_Delay4_out1 :
              1'b1);



  assign Switch1_out1 = (CT1_out1 == 1'b0 ? Switch4_out1 :
              1'b0);



  always @(posedge g_clk)
    begin : Unit_Delay4_process
      if (Rst_n == 1'b0) begin
        Unit_Delay4_out1 <= 1'b0;
      end
      else begin
        Unit_Delay4_out1 <= Switch1_out1;
      end
    end



  assign Or2_out1 = Monitor_Reset | Unit_Delay4_out1;



  always @(posedge g_clk)
    begin : Unit_Delay6_process
      if (Rst_n == 1'b0) begin
        Unit_Delay6_out1 <= 1'b0;
      end
      else begin
        Unit_Delay6_out1 <= Switch5_out1;
      end
    end



  assign Switch5_out1 = (CT1_out1 == 1'b0 ? Unit_Delay6_out1 :
              Or2_out1);



  assign CT207_out1 = Unit_Delay43_out1 == 3'b000;



  assign Switch308_out1 = (Pulse_4096Hz == 1'b0 ? Unit_Delay121_out1 :
              1'b1);



  assign Switch307_out1 = (CT207_out1 == 1'b0 ? Switch308_out1 :
              1'b0);



  always @(posedge g_clk)
    begin : Unit_Delay121_process
      if (Rst_n == 1'b0) begin
        Unit_Delay121_out1 <= 1'b0;
      end
      else begin
        Unit_Delay121_out1 <= Switch307_out1;
      end
    end



  assign Or1_out1 = Pulse_4096Hz | Unit_Delay121_out1;



  always @(posedge g_clk)
    begin : Unit_Delay122_process
      if (Rst_n == 1'b0) begin
        Unit_Delay122_out1 <= 1'b0;
      end
      else begin
        Unit_Delay122_out1 <= Switch309_out1;
      end
    end



  assign Switch309_out1 = (CT207_out1 == 1'b0 ? Unit_Delay122_out1 :
              Or1_out1);



  assign Product_out1 = Pdc_b16 * Pdc2ac_co_b16;



  assign Bit_Slice4_out1 = Product_out1[31:7];



  assign Data_Type_Conversion1_out1 = Bit_Slice4_out1;



  assign RO8_relop1 = Data_Type_Conversion1_out1 > 25'sb0000000000111111111111111;



  assign Switch18_out1 = (RO8_relop1 == 1'b0 ? Data_Type_Conversion1_out1 :
              25'sb0000000000111111111111111);



  assign RO9_relop1 = Switch18_out1 < 25'sb1111111111000000000000001;



  assign Switch17_out1 = (RO9_relop1 == 1'b0 ? Switch18_out1 :
              25'sb1111111111000000000000001);



  assign Data_Type_Conversion3_out1 = Switch17_out1[15:0];



  assign Add2_1 = {Data_Type_Conversion3_out1[15], Data_Type_Conversion3_out1};
  assign Add2_2 = {P_b16[15], P_b16};
  assign Add2_out1 = Add2_1 - Add2_2;



  assign RO1_relop1 = Add2_out1 > 17'sb00111111111111111;



  assign Switch7_out1 = (RO1_relop1 == 1'b0 ? Add2_out1 :
              17'sb00111111111111111);



  assign RO2_relop1 = Switch7_out1 < 17'sb11000000000000001;



  assign Switch6_out1 = (RO2_relop1 == 1'b0 ? Switch7_out1 :
              17'sb11000000000000001);



  assign Data_Type_Conversion2_out1 = Switch6_out1[15:0];



  assign Abs_y = (Data_Type_Conversion2_out1 < 16'sb0000000000000000 ?  - ({Data_Type_Conversion2_out1[15], Data_Type_Conversion2_out1}) :
              {Data_Type_Conversion2_out1[15], Data_Type_Conversion2_out1});
  assign Abs_out1 = Abs_y[15:0];



  assign signal1 = (CT41_out1 == 1'b0 ? Abs_out1 :
              Abs_out1);



  assign signal1_1 = signal1;

  assign signal1_2 = signal1_1;

  assign signal2 = (CT41_out1 == 1'b0 ? CabnetHeatOV_Ref :
              CabnetHeatOV_Ref);



  assign signal2_1 = signal2;

  assign signal2_2 = signal2_1;

  assign Dy1_relop1 = signal1_2 > signal2_2;



  assign Switch11_out1 = (Dy1_relop1 == 1'b0 ? 16'sb1111111111111111 :
              16'sb0000000000000001);



  assign Switch3_out1 = (Switch309_out1 == 1'b0 ? 16'sb0000000000000000 :
              Switch11_out1);



  assign signal3 = (CT41_out1 == 1'b0 ? Delay :
              Delay);



  assign signal3_1 = signal3;

  assign signal3_2 = signal3_1;

  assign Switch28_out1 = (CT10_out1 == 1'b0 ? Switch2_out1 :
              16'sb0000000000000000);



  assign Dy2_relop1 = Switch28_out1 >= signal3_2;



  assign Switch27_out1 = (Dy2_relop1 == 1'b0 ? Switch28_out1 :
              signal3_2);



  assign Switch46_out1 = (CT41_out1 == 1'b0 ? Unit_Delay22_out1 :
              Switch27_out1);



  always @(posedge g_clk)
    begin : Unit_Delay22_process
      if (Rst_n == 1'b0) begin
        Unit_Delay22_out1 <= 16'sb0000000000000000;
      end
      else begin
        Unit_Delay22_out1 <= Switch46_out1;
      end
    end



  assign signal4 = (CT41_out1 == 1'b0 ? Unit_Delay22_out1 :
              Unit_Delay22_out1);



  assign signal4_1 = signal4;

  assign signal4_2 = signal4_1;

  assign Add3_out1 = Switch3_out1 + signal4_2;



  assign Switch2_out1 = (Switch5_out1 == 1'b0 ? Add3_out1 :
              16'sb1111111111111111);



  assign CT10_out1 = Switch2_out1 <= 16'sb0000000000000000;



  assign signal5 = (CT41_out1 == 1'b0 ? Unit_Delay23_out1 :
              Unit_Delay23_out1);



  assign signal5_1 = signal5;

  assign signal5_2 = signal5_1;

  assign Switch29_out1 = (Dy2_relop1 == 1'b0 ? signal5_2 :
              1'b1);



  assign Switch30_out1 = (CT10_out1 == 1'b0 ? Switch29_out1 :
              1'b0);



  assign Switch47_out1 = (CT41_out1 == 1'b0 ? Unit_Delay23_out1 :
              Switch30_out1);



  always @(posedge g_clk)
    begin : Unit_Delay23_process
      if (Rst_n == 1'b0) begin
        Unit_Delay23_out1 <= 1'b0;
      end
      else begin
        Unit_Delay23_out1 <= Switch47_out1;
      end
    end



  assign Out = Unit_Delay23_out1;



endmodule  // CabinetHeatOV_V10

