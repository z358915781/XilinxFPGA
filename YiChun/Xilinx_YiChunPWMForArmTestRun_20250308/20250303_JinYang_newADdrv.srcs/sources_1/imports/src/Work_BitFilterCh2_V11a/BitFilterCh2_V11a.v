// -------------------------------------------------------------
// 
// File Name: Work_BitFilterCh2_V11a\BitFilterCH2_V11a\BitFilterCh2_V11a.v
// Created: 2018-02-23 10:59:40
// 
// Generated by MATLAB 9.1 and HDL Coder 3.9
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 4e-08
// Target subsystem base rate: 4e-08
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: BitFilterCh2_V11a
// Source Path: BitFilterCH2_V11a/BitFilterCh2_V11a
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module BitFilterCh2_V11a
          (
           g_clk,
           Rst_n,
           Pulse_4096Hz,
           In0,
           In1,
           BitFltedOut0,
           BitFltedOut1
          );



  input   g_clk;
  input   Rst_n;
  input   Pulse_4096Hz;
  input   In0;
  input   In1;
  output  BitFltedOut0;
  output  BitFltedOut1;

  reg  Unit_Delay43_out1;  // ufix1
  wire [8:0] Add1_add_temp;  // ufix9
  wire Add1_out1;  // ufix1
  wire CT41_out1;
  wire CT207_out1;
  reg  Unit_Delay121_out1;
  wire Switch308_out1;
  wire Switch307_out1;
  wire Or1_out1;
  wire Switch309_out1;
  reg  Unit_Delay122_out1;
  wire CT2_out1;
  wire signal1;
  wire s;
  wire signal1_1;
  wire signal1_2;
  wire signal1_3;
  wire signed [7:0] Switch58_out1;  // int8
  wire signed [7:0] Switch3_out1;  // int8
  reg signed [15:0] Unit_Delay22_out1;  // int16
  wire signed [15:0] Switch27_out1;  // int16
  wire signed [15:0] Switch46_out1;  // int16
  wire CT10_out1;
  wire signed [15:0] Add3_out1;  // int16
  wire signed [15:0] Switch28_out1;  // int16
  wire Dy2_relop1;
  reg signed [15:0] Unit_Delay1_out1;  // int16
  wire signed [15:0] Switch7_out1;  // int16
  wire signed [15:0] signal2;  // int16
  wire signed [15:0] s_1;  // int16
  wire signed [15:0] signal2_1;  // int16
  wire signed [15:0] signal2_2;  // int16
  wire signed [15:0] signal2_3;  // int16
  wire signed [16:0] Add3_add_temp;  // sfix17
  wire signed [16:0] Add3_1;  // sfix17
  wire signed [16:0] Add3_2;  // sfix17
  reg  Unit_Delay2_out1;
  wire Data_Type_Conversion_out1;
  wire Switch8_out1;
  wire signal3;
  wire s_2;
  reg  Unit_Delay23_out1;
  wire signal3_1;
  wire signal3_2;
  wire signal3_3;
  wire Switch29_out1;
  wire Switch30_out1;
  wire Switch47_out1;


  assign Add1_add_temp = 9'b000000001 + ({8'b0, Unit_Delay43_out1});
  assign Add1_out1 = Add1_add_temp[0];



  always @(posedge g_clk)
    begin : Unit_Delay43_process
      if (Rst_n == 1'b0) begin
        Unit_Delay43_out1 <= 1'b0;
      end
      else begin
        Unit_Delay43_out1 <= Add1_out1;
      end
    end



  assign CT41_out1 = Unit_Delay43_out1 == 1'b0;



  assign CT207_out1 = Unit_Delay43_out1 == 1'b0;



  assign Switch308_out1 = (Pulse_4096Hz == 1'b0 ? Unit_Delay121_out1 :
              1'b1);



  assign Switch307_out1 = (CT207_out1 == 1'b0 ? Switch308_out1 :
              1'b0);



  always @(posedge g_clk)
    begin : Unit_Delay121_process
      if (Rst_n == 1'b0) begin
        Unit_Delay121_out1 <= 1'b0;
      end
      else begin
        Unit_Delay121_out1 <= Switch307_out1;
      end
    end



  assign Or1_out1 = Pulse_4096Hz | Unit_Delay121_out1;



  always @(posedge g_clk)
    begin : Unit_Delay122_process
      if (Rst_n == 1'b0) begin
        Unit_Delay122_out1 <= 1'b0;
      end
      else begin
        Unit_Delay122_out1 <= Switch309_out1;
      end
    end



  assign Switch309_out1 = (CT207_out1 == 1'b0 ? Unit_Delay122_out1 :
              Or1_out1);



  assign CT2_out1 = Unit_Delay43_out1 == 1'b1;



  assign signal1 = (CT2_out1 == 1'b0 ? In1 :
              In1);



  assign s = signal1;

  assign signal1_1 = (CT41_out1 == 1'b0 ? s :
              In0);



  assign signal1_2 = signal1_1;

  assign signal1_3 = signal1_2;

  assign Switch58_out1 = (signal1_3 == 1'b0 ? 8'sb11111111 :
              8'sb00000001);



  assign Switch3_out1 = (Switch309_out1 == 1'b0 ? 8'sb00000000 :
              Switch58_out1);



  assign Switch46_out1 = (CT41_out1 == 1'b0 ? Unit_Delay22_out1 :
              Switch27_out1);



  always @(posedge g_clk)
    begin : Unit_Delay22_process
      if (Rst_n == 1'b0) begin
        Unit_Delay22_out1 <= 16'sb0000000000000000;
      end
      else begin
        Unit_Delay22_out1 <= Switch46_out1;
      end
    end



  assign Switch28_out1 = (CT10_out1 == 1'b0 ? Add3_out1 :
              16'sb0000000000000000);



  assign Dy2_relop1 = Switch28_out1 >= 16'sb0000000000010100;



  assign Switch27_out1 = (Dy2_relop1 == 1'b0 ? Switch28_out1 :
              16'sb0000000000010100);



  assign Switch7_out1 = (CT2_out1 == 1'b0 ? Unit_Delay1_out1 :
              Switch27_out1);



  always @(posedge g_clk)
    begin : Unit_Delay1_process
      if (Rst_n == 1'b0) begin
        Unit_Delay1_out1 <= 16'sb0000000000000000;
      end
      else begin
        Unit_Delay1_out1 <= Switch7_out1;
      end
    end



  assign signal2 = (CT2_out1 == 1'b0 ? Unit_Delay1_out1 :
              Unit_Delay1_out1);



  assign s_1 = signal2;

  assign signal2_1 = (CT41_out1 == 1'b0 ? s_1 :
              Unit_Delay22_out1);



  assign signal2_2 = signal2_1;

  assign signal2_3 = signal2_2;

  assign Add3_1 = {{9{Switch3_out1[7]}}, Switch3_out1};
  assign Add3_2 = {signal2_3[15], signal2_3};
  assign Add3_add_temp = Add3_1 + Add3_2;
  assign Add3_out1 = Add3_add_temp[15:0];



  assign CT10_out1 = Add3_out1 <= 16'sb0000000000000000;



  assign Switch8_out1 = (CT2_out1 == 1'b0 ? Unit_Delay2_out1 :
              Data_Type_Conversion_out1);



  always @(posedge g_clk)
    begin : Unit_Delay2_process
      if (Rst_n == 1'b0) begin
        Unit_Delay2_out1 <= 1'b0;
      end
      else begin
        Unit_Delay2_out1 <= Switch8_out1;
      end
    end



  assign signal3 = (CT2_out1 == 1'b0 ? Unit_Delay2_out1 :
              Unit_Delay2_out1);



  assign s_2 = signal3;

  assign signal3_1 = (CT41_out1 == 1'b0 ? s_2 :
              Unit_Delay23_out1);



  assign signal3_2 = signal3_1;

  assign signal3_3 = signal3_2;

  assign Switch29_out1 = (Dy2_relop1 == 1'b0 ? signal3_3 :
              1'b1);



  assign Switch30_out1 = (CT10_out1 == 1'b0 ? Switch29_out1 :
              1'b0);



  assign Data_Type_Conversion_out1 = (Switch30_out1 != 1'b0 ? 1'b1 :
              1'b0);



  assign Switch47_out1 = (CT41_out1 == 1'b0 ? Unit_Delay23_out1 :
              Data_Type_Conversion_out1);



  always @(posedge g_clk)
    begin : Unit_Delay23_process
      if (Rst_n == 1'b0) begin
        Unit_Delay23_out1 <= 1'b0;
      end
      else begin
        Unit_Delay23_out1 <= Switch47_out1;
      end
    end



  assign BitFltedOut0 = Unit_Delay23_out1;

  assign BitFltedOut1 = Unit_Delay2_out1;



endmodule  // BitFilterCh2_V11a

