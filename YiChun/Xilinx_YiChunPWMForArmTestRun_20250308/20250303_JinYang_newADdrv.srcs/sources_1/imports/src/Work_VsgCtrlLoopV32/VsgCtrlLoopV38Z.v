// -------------------------------------------------------------
// 
// File Name: D:\VsgCtrlLoopV38Z\VsgCtrlLoopV38Z.v
// Created: 2022-04-11 15:12:40
// 
// Generated by MATLAB 9.1 and HDL Coder 3.9
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 4e-08
// Target subsystem base rate: 4e-08
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: VsgCtrlLoopV38Z
// Source Path: VsgCtrlLoopV38Z/VsgCtrlLoopV38Z
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module VsgCtrlLoopV38Z
          (
           g_clk,
           Rst_n,
           Idp_ref_in_b12,
           Iqp_ref_in_b12,
           Idp_Flted_b12,
           Iqp_Flted_b12,
           Uab_RMS_b12,
           Ubc_RMS_b12,
           Uca_RMS_b12,
           Um_b12,
           w_b18,
           dwdt_b16,
           wt0_b13,
           ThetaInit_b35,
           P_ref_b16,
           Q_ref_b16,
           ACChgPLimit_16,
           ACDisPLimit_16,
           ACChgQLimit_16,
           ACDisQLimit_16,
           Um_ref_b12,
           Wref_b18,
           Wadd_b16,
           ULine_ref_b12,
           Resp_Kx_b16,
           Resp_Ky_b16,
           fast_Inr_K_b16,
           Inr_db_b16,
           Inr_En,
           Kf_I_b16,
           fast_Kf_P_inv_b16,
           Ffr_db_b16,
           Ffr_En,
           Kv_I_b16,
           fast_Kv_Q_inv_b16,
           Kvi_b16,
           Fvr_db_b12,
           Fvr_En,
           UmRefUp_b12,
           UmRefLow_b12,
           CtlLoopOn,
           SycGen_En,
           Pulse_4096Hz,
           Pulse50x16_Hz,
           Pulse50x32_Hz,
           Pulse50x64_Hz,
           Pulse50x128_Hz,
           Pulse50x256_Hz,
           Pulse50x512_Hz,
           Pulse50x1024_Hz,
           VF0PQ1,
           En_Hvrt_Fvr,
           fast_VSGPLimit_b16,
           fast_VSGQLimit_b16,
           Inr_K_Lmt_b16,
           slow_Kf_P_inv_Lmt_b16,
           slow_Kv_Q_inv_Lmt_b16,
           slow_Kf_P_inv_b16,
           slow_Kv_Q_inv_b16,
           slow_VSGPLimit_b16,
           slow_VSGQLimit_b16,
           slow_Ffr_fSel_b16,
           fast_Pulse,
           slow_Ffr_db_b16,
           Umref_vsg_b12,
           wt_vsg_b13,
           Wref_add_b18,
           Freq_Droop_b16,
           Pref_out_b16,
           Qref_out_b16,
           wt_err_b16,
           W_err_b16,
           Werr_Flted_b16,
           dW_b16,
           dU_b16,
           Pref_addFfr_b16,
           Pref_Soft_b16,
           Qref_Soft_b16,
           fast_dP_Ffr_b16,
           fast_dQ_Fvr_b16,
           fast_dP_Inertia_b16,
           dWdt_b16_1,
           dWdt_lpf1_b16,
           dWdt_lpf4_b16,
           Ffr_Running,
           Fvr_Running,
           Inr_Running,
           slow_dP_Ffr_b16,
           slow_dQ_Fvr_b16,
           slow_Werr_Flted_b16,
           dP_Ffr_b16
          );



  input   g_clk;
  input   Rst_n;
  input   signed [11:0] Idp_ref_in_b12;  // sfix12
  input   signed [11:0] Iqp_ref_in_b12;  // sfix12
  input   signed [11:0] Idp_Flted_b12;  // sfix12
  input   signed [11:0] Iqp_Flted_b12;  // sfix12
  input   signed [11:0] Uab_RMS_b12;  // sfix12
  input   signed [11:0] Ubc_RMS_b12;  // sfix12
  input   signed [11:0] Uca_RMS_b12;  // sfix12
  input   signed [11:0] Um_b12;  // sfix12
  input   signed [17:0] w_b18;  // sfix18
  input   signed [15:0] dwdt_b16;  // int16
  input   [12:0] wt0_b13;  // ufix13
  input   [34:0] ThetaInit_b35;  // ufix35
  input   signed [15:0] P_ref_b16;  // int16
  input   signed [15:0] Q_ref_b16;  // int16
  input   signed [15:0] ACChgPLimit_16;  // int16
  input   signed [15:0] ACDisPLimit_16;  // int16
  input   signed [15:0] ACChgQLimit_16;  // int16
  input   signed [15:0] ACDisQLimit_16;  // int16
  input   signed [11:0] Um_ref_b12;  // sfix12
  input   signed [17:0] Wref_b18;  // sfix18
  input   signed [15:0] Wadd_b16;  // int16
  input   signed [11:0] ULine_ref_b12;  // sfix12
  input   signed [15:0] Resp_Kx_b16;  // int16
  input   signed [15:0] Resp_Ky_b16;  // int16
  input   signed [15:0] fast_Inr_K_b16;  // int16
  input   signed [11:0] Inr_db_b16;  // sfix12
  input   Inr_En;
  input   signed [15:0] Kf_I_b16;  // int16
  input   signed [15:0] fast_Kf_P_inv_b16;  // int16
  input   signed [15:0] Ffr_db_b16;  // int16
  input   Ffr_En;
  input   signed [15:0] Kv_I_b16;  // int16
  input   signed [15:0] fast_Kv_Q_inv_b16;  // int16
  input   signed [15:0] Kvi_b16;  // int16
  input   signed [11:0] Fvr_db_b12;  // sfix12
  input   Fvr_En;
  input   signed [11:0] UmRefUp_b12;  // sfix12
  input   signed [11:0] UmRefLow_b12;  // sfix12
  input   CtlLoopOn;
  input   SycGen_En;
  input   Pulse_4096Hz;
  input   Pulse50x16_Hz;
  input   Pulse50x32_Hz;
  input   Pulse50x64_Hz;
  input   Pulse50x128_Hz;
  input   Pulse50x256_Hz;
  input   Pulse50x512_Hz;
  input   Pulse50x1024_Hz;
  input   VF0PQ1;
  input   En_Hvrt_Fvr;
  input   signed [15:0] fast_VSGPLimit_b16;  // int16
  input   signed [15:0] fast_VSGQLimit_b16;  // int16
  input   signed [15:0] Inr_K_Lmt_b16;  // int16
  input   signed [15:0] slow_Kf_P_inv_Lmt_b16;  // int16
  input   signed [15:0] slow_Kv_Q_inv_Lmt_b16;  // int16
  input   signed [15:0] slow_Kf_P_inv_b16;  // int16
  input   signed [15:0] slow_Kv_Q_inv_b16;  // int16
  input   signed [15:0] slow_VSGPLimit_b16;  // int16
  input   signed [15:0] slow_VSGQLimit_b16;  // int16
  input   signed [15:0] slow_Ffr_fSel_b16;  // int16
  input   fast_Pulse;
  input   signed [15:0] slow_Ffr_db_b16;  // int16
  output  signed [11:0] Umref_vsg_b12;  // sfix12
  output  [12:0] wt_vsg_b13;  // ufix13
  output  signed [17:0] Wref_add_b18;  // sfix18
  output  signed [15:0] Freq_Droop_b16;  // int16
  output  signed [15:0] Pref_out_b16;  // int16
  output  signed [15:0] Qref_out_b16;  // int16
  output  signed [15:0] wt_err_b16;  // int16
  output  signed [15:0] W_err_b16;  // int16
  output  signed [15:0] Werr_Flted_b16;  // int16
  output  signed [15:0] dW_b16;  // int16
  output  signed [15:0] dU_b16;  // int16
  output  signed [15:0] Pref_addFfr_b16;  // int16
  output  signed [15:0] Pref_Soft_b16;  // int16
  output  signed [15:0] Qref_Soft_b16;  // int16
  output  signed [15:0] fast_dP_Ffr_b16;  // int16
  output  signed [15:0] fast_dQ_Fvr_b16;  // int16
  output  signed [15:0] fast_dP_Inertia_b16;  // int16
  output  signed [15:0] dWdt_b16_1;  // int16
  output  signed [15:0] dWdt_lpf1_b16;  // int16
  output  signed [15:0] dWdt_lpf4_b16;  // int16
  output  Ffr_Running;
  output  Fvr_Running;
  output  Inr_Running;
  output  signed [15:0] slow_dP_Ffr_b16;  // int16
  output  signed [15:0] slow_dQ_Fvr_b16;  // int16
  output  signed [15:0] slow_Werr_Flted_b16;  // int16
  output  signed [17:0] dP_Ffr_b16;  // sfix18

  reg [5:0] Unit_Delay123_out1;  // ufix6
  wire [5:0] Add2_out1;  // ufix6
  wire CT86_out1;
  wire [5:0] Switch264_out1;  // ufix6
  wire CT0_out1;
  wire signed [11:0] Switch1_out1;  // sfix12
  wire CT9_out1;
  wire CT3_out1;
  reg  Dly_0_out1;
  wire SW_3_out1;
  wire SW_0_out1;
  wire Or1_out1;
  wire SW_2_out1;
  reg  Dly_1_out1;
  wire CT4_out1;
  wire Or12_out1;
  wire CT1_out1;
  wire Or3_out1;
  wire CT8_out1;
  wire CT10_out1;
  wire CT30_out1;
  wire Or4_out1;
  wire CT12_out1;
  wire Or5_out1;
  wire CT31_out1;
  wire Or6_out1;
  wire CT23_out1;
  wire Or7_out1;
  wire CT26_out1;
  wire CT41_out1;
  wire Or8_out1;
  wire CT42_out1;
  wire Or9_out1;
  wire CT46_out1;
  wire Or10_out1;
  wire CT47_out1;
  wire Or11_out1;
  wire CT27_out1;
  wire CT29_out1;
  wire RO166_relop1;
  wire signed [15:0] Switch16_out1;  // int16
  wire RO113_relop1;
  wire signed [15:0] Switch17_out1;  // int16
  wire signed [15:0] signal1;  // int16
  wire signed [15:0] s;  // int16
  wire CT58_out1;
  wire CT57_out1;
  wire CT55_out1;
  wire CT54_out1;
  wire CT53_out1;
  wire CT56_out1;
  wire Switch51_out1;
  wire Switch52_out1;
  wire Switch53_out1;
  wire Switch54_out1;
  wire Switch55_out1;
  wire Switch56_out1;
  wire [8:0] Switch83_out1;  // ufix9
  reg [9:0] Unit_Delay32_out1;  // ufix10
  wire [10:0] Add111_add_temp;  // ufix11
  wire [9:0] Add11_out1;  // ufix10
  wire Ro10_relop1;
  reg  Unit_Delay57_out1;
  wire Switch49_out1;
  wire Switch105_out1;
  reg  Unit_Delay1_out1;
  wire switch_compare_1;
  wire signed [25:0] Constant26_out1_dtc;  // sfix26
  wire signed [15:0] Constant35_out1_dtc;  // int16
  wire switch_compare_1_1;
  wire signed [15:0] Constant34_out1_dtc;  // int16
  wire CT17_out1;
  wire SW_0_out1_1;
  reg  Dly_0_out1_1;
  wire SW_3_out1_1;
  wire CT34_out1;
  wire CT28_out1;
  wire CT5_out1;
  wire CT6_out1;
  wire CT13_out1;
  wire CT14_out1;
  wire CT15_out1;
  wire CT22_out1;
  wire CT24_out1;
  wire CT25_out1;
  wire CT32_out1;
  wire CT33_out1;
  wire CT38_out1;
  wire CT39_out1;
  wire CT44_out1;
  wire CT43_out1;
  wire CT45_out1;
  wire CT48_out1;
  wire CT123_out1;
  reg  Unit_Delay77_out1;
  wire Switch176_out1;
  wire Switch175_out1;
  wire Or1_out1_1;
  wire Switch177_out1;
  reg  Unit_Delay78_out1;
  wire OR3_out1_1;
  wire signed [15:0] Switch46_out1;  // int16
  wire signed [15:0] signal1_1;  // int16
  wire signed [15:0] s_1;  // int16
  wire signed [16:0] UM_20_in0;  // sfix17
  wire signed [15:0] UM_20_out1;  // int16
  wire OR2_out1;
  wire OR1_out1_2;
  reg signed [17:0] Dly_4_out1;  // sfix18
  wire signed [17:0] SW_5_out1;  // sfix18
  wire signed [17:0] signal1_2;  // sfix18
  wire signed [17:0] s_2;  // sfix18
  wire signed [11:0] signal1_3;  // sfix12
  wire signed [11:0] s_3;  // sfix12
  wire signed [11:0] signal1_4;  // sfix12
  wire signed [11:0] s_4;  // sfix12
  wire RO_11_relop1;
  wire signed [11:0] SW_1_out1;  // sfix12
  wire RO_21_relop1;
  wire signed [11:0] SW_2_out1_1;  // sfix12
  wire RO_51_relop1;
  wire RO_31_relop1;
  wire signed [11:0] SW_3_out1_2;  // sfix12
  wire RO_41_relop1;
  wire signed [11:0] SW_4_out1;  // sfix12
  wire signed [11:0] SW_6_out1;  // sfix12
  wire signed [11:0] SW_5_out1_1;  // sfix12
  reg signed [11:0] Unit_Delay57_out1_1;  // sfix12
  wire signed [11:0] Switch136_out1;  // sfix12
  wire signed [11:0] Switch102_out1;  // sfix12
  wire CT40_out1;
  wire Or4_out1_1;
  wire signed [16:0] UM_16_in0;  // sfix17
  wire signed [15:0] UM_16_out1;  // int16
  wire signed [15:0] RO10_1_2;  // sfix16
  wire RO10_relop1_1;
  wire signed [12:0] UM_12_in0;  // sfix13
  wire signed [11:0] UM_12_out1;  // sfix12
  wire signed [15:0] RO15_1_1;  // sfix16
  wire RO15_relop1;
  wire signed [16:0] UM_13_in0;  // sfix17
  wire signed [15:0] UM_13_out1;  // int16
  wire signed [15:0] From309_out1_dtc;  // int16
  wire signed [15:0] Switch34_out1;  // int16
  wire signed [15:0] UM_12_out1_dtc;  // int16
  wire signed [15:0] Switch33_out1;  // int16
  wire signed [15:0] DTC_3_out1;  // int16
  wire signed [16:0] UM_8_in0;  // sfix17
  wire signed [15:0] UM_8_out1;  // int16
  wire signed [16:0] UM_18_in0;  // sfix17
  wire signed [15:0] UM_18_out1;  // int16
  wire signed [16:0] UM_19_in0;  // sfix17
  wire signed [15:0] UM_19_out1;  // int16
  wire signed [16:0] UM_6_in0;  // sfix17
  wire signed [15:0] UM_6_out1;  // int16
  wire signed [18:0] UM_1_in0;  // sfix19
  wire signed [17:0] UM_1_out1;  // sfix18
  reg signed [17:0] Dly_6_out1;  // sfix18
  wire signed [17:0] SW_6_out1_1;  // sfix18
  wire signed [18:0] UM_11_in0;  // sfix19
  wire signed [17:0] UM_11_out1;  // sfix18
  wire signed [17:0] signal2;  // sfix18
  wire signed [17:0] s_5;  // sfix18
  wire signed [12:0] UM_5_in0;  // sfix13
  wire signed [11:0] UM_5_out1;  // sfix12
  wire signed [11:0] signal2_1;  // sfix12
  wire signed [11:0] s_6;  // sfix12
  wire signed [11:0] signal2_2;  // sfix12
  wire signed [11:0] s_7;  // sfix12
  wire signed [12:0] UM_2_in0;  // sfix13
  wire signed [11:0] UM_2_out1;  // sfix12
  wire signed [11:0] signal2_3;  // sfix12
  wire signed [11:0] s_8;  // sfix12
  wire signed [12:0] UM_4_in0;  // sfix13
  wire signed [11:0] UM_4_out1;  // sfix12
  wire signed [12:0] UM_3_in0;  // sfix13
  wire signed [11:0] UM_3_out1;  // sfix12
  wire signed [15:0] Constant35_out1_dtc_1;  // int16
  wire [9:0] Add12_out1;  // ufix10
  wire [8:0] Switch83_out1_1;  // ufix9
  reg [9:0] Unit_Delay32_out1_1;  // ufix10
  wire [10:0] Add112_add_temp;  // ufix11
  wire [9:0] Add11_out1_1;  // ufix10
  wire Ro101_relop1;
  reg  Unit_Delay57_out1_2;
  wire Switch49_out1_1;
  wire Switch105_out1_1;
  reg  Unit_Delay1_out1_1;
  wire switch_compare_1_2;
  wire signed [25:0] Constant26_out1_dtc_1;  // sfix26
  wire signed [15:0] Constant35_out1_dtc_2;  // int16
  wire switch_compare_1_3;
  wire signed [15:0] Constant34_out1_dtc_1;  // int16
  wire signed [15:0] Constant35_out1_dtc_3;  // int16
  wire [9:0] Add12_out1_1;  // ufix10
  wire RO164_relop1;
  wire signed [15:0] Switch16_out1_1;  // int16
  wire RO111_relop1;
  wire signed [15:0] Switch17_out1_1;  // int16
  reg signed [31:0] s1z5_out1;  // int32
  wire signed [31:0] signal2_4;  // int32
  wire signed [31:0] signal2_5;  // int32
  wire signed [31:0] signal3;  // int32
  wire signed [31:0] s_9;  // int32
  reg signed [31:0] s1z5_out1_1;  // int32
  wire signed [31:0] signal2_6;  // int32
  wire signed [31:0] signal2_7;  // int32
  reg signed [31:0] s1z5_out1_2;  // int32
  wire signed [31:0] signal2_8;  // int32
  wire signed [31:0] signal2_9;  // int32
  wire signed [31:0] B22_out1_signal3;  // int32
  wire signed [32:0] Abs_out1;  // sfix33
  wire [21:0] Bit_Slice3_out1;  // ufix22
  wire signed [15:0] Data_Type_S5_out1;  // int16
  wire RO11_relop1;
  wire signed [15:0] Switch29_out1;  // int16
  wire signed [16:0] UM_01_in0;  // sfix17
  wire signed [15:0] UM_0_out1;  // int16
  reg signed [31:0] s1z5_out1_3;  // int32
  wire signed [31:0] Switch31_out1;  // int32
  wire signed [31:0] signal2_10;  // int32
  wire signed [31:0] signal2_11;  // int32
  wire signed [31:0] B56_out1_signal3;  // int32
  reg signed [31:0] s1z5_out1_4;  // int32
  wire signed [31:0] Switch31_out1_1;  // int32
  wire signed [31:0] signal2_12;  // int32
  wire signed [31:0] signal2_13;  // int32
  wire signed [31:0] B24_out1_signal3;  // int32
  reg signed [31:0] s1z5_out1_5;  // int32
  wire signed [31:0] Switch31_out1_2;  // int32
  wire signed [31:0] signal2_14;  // int32
  wire signed [31:0] signal2_15;  // int32
  reg signed [31:0] s1z5_out1_6;  // int32
  wire signed [31:0] signal2_16;  // int32
  wire signed [31:0] signal2_17;  // int32
  reg signed [31:0] s1z5_out1_7;  // int32
  wire signed [31:0] signal2_18;  // int32
  wire signed [31:0] signal2_19;  // int32
  wire signed [31:0] B25_out1_signal3;  // int32
  reg signed [31:0] s1z5_out1_8;  // int32
  wire signed [31:0] signal2_20;  // int32
  wire signed [31:0] signal2_21;  // int32
  reg signed [31:0] s1z5_out1_9;  // int32
  wire signed [31:0] signal2_22;  // int32
  wire signed [31:0] signal2_23;  // int32
  reg signed [31:0] s1z5_out1_10;  // int32
  wire signed [31:0] signal2_24;  // int32
  wire signed [31:0] signal2_25;  // int32
  reg signed [31:0] s1z5_out1_11;  // int32
  wire signed [31:0] signal2_26;  // int32
  wire signed [31:0] signal2_27;  // int32
  wire [10:0] Bit_Slice4_out1;  // ufix11
  wire signed [31:0] Data_Type_S10_out1;  // int32
  wire signed [32:0] UM_110_in0;  // sfix33
  wire signed [31:0] UM_1_out1_1;  // int32
  wire signed [32:0] Add_out1;  // sfix33
  wire CT0_1_out1;
  reg signed [31:0] s1z5_out1_12;  // int32
  wire signed [31:0] signal2_28;  // int32
  wire signed [31:0] signal2_29;  // int32
  reg signed [31:0] s1z5_out1_13;  // int32
  wire signed [31:0] signal2_30;  // int32
  wire signed [31:0] signal2_31;  // int32
  reg signed [31:0] s1z5_out1_14;  // int32
  wire signed [31:0] signal2_32;  // int32
  wire signed [31:0] signal2_33;  // int32
  reg signed [31:0] s1z5_out1_15;  // int32
  wire signed [31:0] signal2_34;  // int32
  wire signed [31:0] signal2_35;  // int32
  wire [19:0] Bit_Slice11_out1;  // ufix20
  wire signed [31:0] DTC_b32_0_out1;  // int32
  wire signed [32:0] UM_17_in0;  // sfix33
  wire signed [31:0] UM_1_out1_2;  // int32
  wire CT0_1_out1_1;
  reg signed [31:0] s1z5_out1_16;  // int32
  wire signed [31:0] signal2_36;  // int32
  wire signed [31:0] signal2_37;  // int32
  wire [8:0] Bit_Slice2_out1;  // ufix9
  wire signed [31:0] Data_Type_S7_out1;  // int32
  wire signed [32:0] UM_111_in0;  // sfix33
  wire signed [31:0] UM_1_out1_3;  // int32
  wire CT0_1_out1_2;
  reg signed [31:0] s1z5_out1_17;  // int32
  wire signed [31:0] signal2_38;  // int32
  wire signed [31:0] signal2_39;  // int32
  wire signed [31:0] signal3_1;  // int32
  wire signed [31:0] s_10;  // int32
  wire signed [31:0] signal3_2;  // int32
  wire signed [31:0] s_11;  // int32
  wire signed [31:0] signal3_3;  // int32
  wire signed [31:0] s_12;  // int32
  wire signed [31:0] signal3_4;  // int32
  wire signed [31:0] s_13;  // int32
  wire signed [31:0] signal3_5;  // int32
  wire signed [31:0] s_14;  // int32
  wire signed [31:0] signal3_6;  // int32
  wire signed [31:0] s_15;  // int32
  wire signed [31:0] signal3_7;  // int32
  wire signed [31:0] s_16;  // int32
  wire signed [31:0] signal3_8;  // int32
  wire signed [31:0] s_17;  // int32
  wire signed [31:0] signal3_9;  // int32
  wire signed [31:0] s_18;  // int32
  wire signed [31:0] signal3_10;  // int32
  wire signed [31:0] s_19;  // int32
  wire signed [31:0] signal3_11;  // int32
  wire signed [31:0] s_20;  // int32
  wire signed [31:0] signal3_12;  // int32
  wire signed [31:0] s_21;  // int32
  wire signed [31:0] signal3_13;  // int32
  wire signed [31:0] s_22;  // int32
  wire signed [31:0] signal3_14;  // int32
  wire signed [31:0] s_23;  // int32
  wire signed [31:0] signal3_15;  // int32
  wire signed [31:0] s_24;  // int32
  wire signed [31:0] signal3_16;  // int32
  wire signed [31:0] s_25;  // int32
  wire signed [31:0] signal3_17;  // int32
  wire signed [31:0] signal3_18;  // int32
  reg signed [15:0] s1z4_out1;  // int16
  wire signed [15:0] Switch28_out1;  // int16
  wire signed [15:0] signal1_5;  // int16
  wire signed [15:0] signal1_6;  // int16
  wire signed [15:0] B56_out1_signal2;  // int16
  reg signed [15:0] Dly_5_out1;  // int16
  wire signed [15:0] B24_out1_signal2;  // int16
  reg signed [15:0] DLY_0_out1_2;  // int16
  wire signed [15:0] B22_out1_signal2;  // int16
  reg signed [15:0] DLY_0_out1_3;  // int16
  wire signed [15:0] DTC_0_out1;  // int16
  wire signed [15:0] add_SW_1_out1;  // int16
  wire signed [15:0] B25_out1_signal2;  // int16
  wire signed [15:0] add_SW_1_out1_1;  // int16
  wire signed [15:0] signal2_40;  // int16
  wire signed [15:0] s_26;  // int16
  wire signed [15:0] signal2_41;  // int16
  wire signed [15:0] s_27;  // int16
  wire signed [15:0] signal2_42;  // int16
  wire signed [15:0] s_28;  // int16
  wire signed [15:0] signal2_43;  // int16
  wire signed [15:0] s_29;  // int16
  wire signed [15:0] signal2_44;  // int16
  wire signed [15:0] s_30;  // int16
  wire signed [15:0] signal2_45;  // int16
  wire signed [15:0] s_31;  // int16
  wire signed [15:0] signal2_46;  // int16
  wire signed [15:0] s_32;  // int16
  wire signed [15:0] signal2_47;  // int16
  wire signed [15:0] s_33;  // int16
  wire signed [15:0] signal2_48;  // int16
  wire signed [15:0] s_34;  // int16
  wire signed [15:0] signal2_49;  // int16
  wire signed [15:0] s_35;  // int16
  wire signed [15:0] signal2_50;  // int16
  wire signed [15:0] s_36;  // int16
  wire signed [15:0] signal2_51;  // int16
  wire signed [15:0] s_37;  // int16
  wire signed [15:0] signal2_52;  // int16
  wire signed [15:0] s_38;  // int16
  wire signed [15:0] signal2_53;  // int16
  wire signed [15:0] s_39;  // int16
  wire signed [15:0] signal2_54;  // int16
  wire signed [15:0] s_40;  // int16
  wire signed [15:0] signal2_55;  // int16
  wire signed [15:0] s_41;  // int16
  wire signed [15:0] signal2_56;  // int16
  wire signed [15:0] s_42;  // int16
  wire signed [15:0] signal2_57;  // int16
  wire signed [15:0] signal2_58;  // int16
  reg signed [25:0] Unit_Delay30_out1;  // sfix26
  wire signed [25:0] signal2_59;  // sfix26
  wire signed [15:0] Switch84_out1;  // int16
  wire signed [15:0] Simple_Dual_Port_RAM2_out1;  // int16
  wire signed [15:0] Switch98_out1;  // int16
  reg signed [15:0] DLY_0_out1_4;  // int16
  wire signed [15:0] add_SW_1_out1_2;  // int16
  wire signed [15:0] signal1_7;  // int16
  wire signed [15:0] Switch97_out1;  // int16
  wire signed [26:0] Add7_stage21_1;  // sfix27
  wire signed [26:0] Add7_stage21_2;  // sfix27
  wire signed [26:0] Add7_op_stage2;  // sfix27
  wire signed [26:0] Add7_stage31_add_temp;  // sfix27
  wire signed [26:0] Add7_stage31_1;  // sfix27
  wire signed [25:0] Add7_out1;  // sfix26
  wire signed [25:0] Switch79_out1;  // sfix26
  wire [15:0] Bit_Slice6_out1;  // uint16
  wire signed [15:0] Data_Type_S11_out1;  // int16
  reg signed [15:0] DLY_0_out1_5;  // int16
  wire signed [15:0] add_SW_1_out1_3;  // int16
  wire signed [15:0] Switch16_out1_2;  // int16
  reg signed [15:0] DLY_0_out1_6;  // int16
  wire signed [15:0] add_SW_1_out1_4;  // int16
  wire signed [15:0] Switch44_out1;  // int16
  reg signed [15:0] DLY_0_out1_7;  // int16
  wire signed [15:0] add_SW_1_out1_5;  // int16
  reg signed [15:0] DLY_0_out1_8;  // int16
  wire signed [15:0] add_SW_1_out1_6;  // int16
  reg signed [15:0] DLY_0_out1_9;  // int16
  wire signed [15:0] add_SW_1_out1_7;  // int16
  wire signed [15:0] Switch45_out1;  // int16
  reg signed [15:0] DLY_0_out1_10;  // int16
  wire signed [15:0] add_SW_1_out1_8;  // int16
  reg signed [25:0] Unit_Delay30_out1_1;  // sfix26
  wire signed [25:0] signal2_60;  // sfix26
  wire signed [15:0] Switch84_out1_1;  // int16
  wire signed [15:0] Simple_Dual_Port_RAM2_out1_1;  // int16
  wire signed [15:0] Switch98_out1_1;  // int16
  reg signed [17:0] DLY_0_out1_11;  // sfix18
  wire signed [18:0] Add10_sub_temp;  // sfix19
  wire signed [18:0] Add10_1;  // sfix19
  wire signed [18:0] Add10_2;  // sfix19
  wire signed [17:0] Add10_out1;  // sfix18
  wire RO_5_relop1;
  wire signed [17:0] Switch18_out1;  // sfix18
  reg signed [11:0] Dly_3_out1;  // sfix12
  reg signed [11:0] DLY_0_out1_12;  // sfix12
  wire signed [11:0] SW_1_out1_1;  // sfix12
  wire signed [11:0] signal2_61;  // sfix12
  wire signed [11:0] s_43;  // sfix12
  wire signed [11:0] signal2_62;  // sfix12
  wire signed [11:0] s_44;  // sfix12
  wire signed [11:0] signal2_63;  // sfix12
  wire signed [11:0] signal2_64;  // sfix12
  wire signed [17:0] DTC_b18_4_out1;  // sfix18
  reg signed [15:0] s1z4_out1_1;  // int16
  wire signed [15:0] signal1_8;  // int16
  wire signed [15:0] signal1_9;  // int16
  wire RO162_relop1;
  wire signed [15:0] Switch16_out1_3;  // int16
  wire RO19_relop1;
  wire signed [15:0] Switch17_out1_2;  // int16
  wire signed [15:0] Switch26_out1;  // int16
  reg signed [15:0] s1z4_out1_2;  // int16
  wire signed [15:0] Switch28_out1_1;  // int16
  wire signed [15:0] signal1_10;  // int16
  wire signed [15:0] signal1_11;  // int16
  wire signed [16:0] UM_7_in0;  // sfix17
  wire signed [15:0] UM_7_out1;  // int16
  reg signed [15:0] DLY_0_out1_13;  // int16
  wire signed [15:0] add_SW_1_out1_9;  // int16
  wire signed [15:0] SW_7_out1;  // int16
  wire RO9_relop1;
  wire signed [32:0] Switch11_out1;  // sfix33
  wire RO8_relop1;
  wire signed [32:0] Switch12_out1;  // sfix33
  wire signed [15:0] Data_Type_Conversion1_out1;  // int16
  reg signed [15:0] s1z4_out1_3;  // int16
  wire signed [15:0] signal1_12;  // int16
  wire signed [15:0] signal1_13;  // int16
  wire RO161_relop1;
  wire signed [15:0] Switch16_out1_4;  // int16
  wire RO18_relop1;
  wire signed [15:0] Switch17_out1_3;  // int16
  wire signed [15:0] Switch27_out1;  // int16
  reg signed [15:0] Dly_2_out1;  // int16
  reg signed [15:0] DLY_0_out1_14;  // int16
  wire signed [15:0] SW_4_out1_1;  // int16
  reg signed [15:0] s1z4_out1_4;  // int16
  wire signed [15:0] Switch28_out1_2;  // int16
  wire signed [15:0] signal1_14;  // int16
  wire signed [15:0] signal1_15;  // int16
  wire signed [16:0] UM_9_in0;  // sfix17
  wire signed [15:0] UM_9_out1;  // int16
  reg signed [15:0] Dly_4_out1_1;  // int16
  reg signed [15:0] DLY_0_out1_15;  // int16
  wire signed [15:0] SW_5_out1_2;  // int16
  reg signed [15:0] s1z4_out1_5;  // int16
  wire signed [15:0] signal1_16;  // int16
  wire signed [15:0] signal1_17;  // int16
  wire signed [16:0] UM_10_in0;  // sfix17
  wire signed [15:0] UM_10_out1;  // int16
  wire [23:0] Bit_Slice5_out1;  // ufix24
  wire signed [22:0] Data_Type_S4_out1;  // sfix23
  wire RO27_relop1;
  wire signed [22:0] Switch109_out1;  // sfix23
  wire signed [15:0] Data_Type_Conversion11_out1;  // int16
  wire signed [16:0] UM_02_in0;  // sfix17
  wire signed [15:0] UM_0_out1_1;  // int16
  wire CT0_0_out1;
  reg signed [15:0] s1z4_out1_6;  // int16
  wire signed [15:0] signal1_18;  // int16
  wire signed [15:0] signal1_19;  // int16
  wire RO163_relop1;
  wire signed [15:0] Switch16_out1_5;  // int16
  wire RO110_relop1;
  wire signed [15:0] Switch17_out1_4;  // int16
  wire signed [15:0] Switch49_out1_2;  // int16
  reg signed [15:0] DLY_0_out1_16;  // int16
  wire signed [15:0] add_SW_1_out1_10;  // int16
  wire signed [15:0] Subsystem_out1;  // int16
  wire RO167_relop1;
  wire signed [15:0] Switch16_out1_6;  // int16
  wire RO114_relop1;
  wire signed [15:0] Switch17_out1_5;  // int16
  reg signed [15:0] Dly_6_out1_1;  // int16
  reg signed [15:0] DLY_0_out1_17;  // int16
  wire signed [15:0] SW_6_out1_2;  // int16
  reg signed [15:0] s1z4_out1_7;  // int16
  wire signed [15:0] signal1_20;  // int16
  wire signed [15:0] signal1_21;  // int16
  wire signed [16:0] UM_15_in0;  // sfix17
  wire signed [15:0] UM_15_out1;  // int16
  reg signed [15:0] Dly_7_out1;  // int16
  reg signed [15:0] DLY_0_out1_18;  // int16
  wire signed [15:0] SW_8_out1;  // int16
  reg signed [15:0] s1z4_out1_8;  // int16
  wire signed [15:0] signal1_22;  // int16
  wire signed [15:0] signal1_23;  // int16
  wire signed [16:0] UM_14_in0;  // sfix17
  wire signed [15:0] UM_14_out1;  // int16
  wire signed [15:0] Switch47_out1;  // int16
  wire signed [15:0] signal2_65;  // int16
  wire signed [15:0] s_45;  // int16
  wire signed [15:0] signal2_66;  // int16
  wire signed [15:0] s_46;  // int16
  wire signed [15:0] signal2_67;  // int16
  wire signed [15:0] s_47;  // int16
  wire signed [15:0] signal2_68;  // int16
  wire signed [15:0] s_48;  // int16
  wire signed [15:0] signal2_69;  // int16
  wire signed [15:0] s_49;  // int16
  wire signed [15:0] signal2_70;  // int16
  wire signed [15:0] s_50;  // int16
  wire signed [15:0] signal2_71;  // int16
  wire signed [15:0] s_51;  // int16
  wire signed [15:0] signal2_72;  // int16
  wire signed [15:0] s_52;  // int16
  wire signed [15:0] signal2_73;  // int16
  wire signed [15:0] s_53;  // int16
  wire signed [15:0] signal2_74;  // int16
  wire signed [15:0] s_54;  // int16
  wire signed [15:0] signal2_75;  // int16
  wire signed [15:0] s_55;  // int16
  wire signed [15:0] signal2_76;  // int16
  wire signed [15:0] s_56;  // int16
  wire signed [15:0] signal2_77;  // int16
  wire signed [15:0] s_57;  // int16
  wire signed [15:0] signal2_78;  // int16
  wire signed [15:0] s_58;  // int16
  wire signed [15:0] signal2_79;  // int16
  wire signed [15:0] s_59;  // int16
  wire signed [15:0] signal2_80;  // int16
  wire signed [15:0] s_60;  // int16
  wire signed [15:0] signal2_81;  // int16
  wire signed [15:0] s_61;  // int16
  wire signed [15:0] signal2_82;  // int16
  wire signed [15:0] s_62;  // int16
  wire signed [15:0] signal2_83;  // int16
  wire signed [15:0] s_63;  // int16
  wire signed [15:0] signal2_84;  // int16
  wire signed [15:0] s_64;  // int16
  wire signed [15:0] signal2_85;  // int16
  wire signed [15:0] s_65;  // int16
  wire signed [15:0] signal2_86;  // int16
  wire signed [15:0] signal2_87;  // int16
  wire signed [15:0] s_66;  // int16
  wire signed [15:0] signal2_88;  // int16
  wire signed [15:0] s_67;  // int16
  wire signed [15:0] signal2_89;  // int16
  wire signed [15:0] s_68;  // int16
  wire signed [15:0] signal2_90;  // int16
  wire signed [15:0] s_69;  // int16
  wire signed [15:0] signal2_91;  // int16
  wire signed [15:0] signal2_92;  // int16
  wire signed [17:0] DTC_b18_6_out1;  // sfix18
  wire signed [17:0] signal2_93;  // sfix18
  wire signed [17:0] s_70;  // sfix18
  wire signed [17:0] signal2_94;  // sfix18
  wire signed [17:0] s_71;  // sfix18
  wire signed [17:0] signal2_95;  // sfix18
  wire signed [17:0] signal2_96;  // sfix18
  wire signed [11:0] DTC_1_out1;  // sfix12
  wire signed [11:0] add_SW_1_out1_11;  // sfix12
  reg signed [11:0] DLY_0_out1_19;  // sfix12
  wire signed [11:0] add_SW_1_out1_12;  // sfix12
  wire RO_4_relop1;
  wire signed [11:0] Switch4_out1;  // sfix12
  wire signed [17:0] Add1_out1;  // sfix18
  wire RO6_relop1;
  wire signed [17:0] Switch5_out1;  // sfix18
  wire RO5_relop1;
  wire signed [17:0] Switch6_out1;  // sfix18
  reg signed [11:0] DLY_0_out1_20;  // sfix12
  wire signed [11:0] add_SW_1_out1_13;  // sfix12
  wire RO_1_relop1;
  wire signed [11:0] Switch99_out1;  // sfix12
  wire signed [11:0] signal1_24;  // sfix12
  wire signed [11:0] s_72;  // sfix12
  wire signed [11:0] signal1_25;  // sfix12
  wire signed [11:0] s_73;  // sfix12
  wire signed [11:0] signal1_26;  // sfix12
  wire signed [11:0] s_74;  // sfix12
  wire signed [11:0] signal1_27;  // sfix12
  wire signed [11:0] signal1_28;  // sfix12
  wire signed [17:0] DTC_b18_3_out1;  // sfix18
  reg signed [17:0] DLY_0_out1_21;  // sfix18
  wire signed [17:0] add_SW_1_out1_14;  // sfix18
  wire RO_2_relop1;
  wire signed [17:0] Switch3_out1;  // sfix18
  reg signed [17:0] DLY_0_out1_22;  // sfix18
  wire signed [17:0] add_SW_1_out1_15;  // sfix18
  wire RO_3_relop1;
  wire signed [17:0] Switch98_out1_2;  // sfix18
  wire signed [17:0] Switch2_out1;  // sfix18
  wire signed [15:0] add_SW_1_out1_16;  // int16
  reg signed [15:0] s1z4_out1_9;  // int16
  wire signed [15:0] signal1_29;  // int16
  wire signed [15:0] signal1_30;  // int16
  reg signed [15:0] DLY_0_out1_23;  // int16
  wire signed [15:0] add_SW_1_out1_17;  // int16
  wire signed [15:0] add_SW_1_out1_18;  // int16
  wire [34:0] Switch8_out1;  // ufix35
  reg [34:0] Dly_0_out1_24;  // ufix35
  reg signed [17:0] DLY_0_out1_25;  // sfix18
  wire signed [17:0] add_SW_1_out1_19;  // sfix18
  wire signed [35:0] Gain_out1;  // sfix36_En16
  wire signed [29:0] DTC_b30_0_out1;  // sfix30
  wire signed [36:0] Add4_add_temp;  // sfix37
  wire signed [36:0] Add4_1;  // sfix37
  wire signed [36:0] Add4_2;  // sfix37
  wire [34:0] Add4_out1;  // ufix35
  wire [12:0] BS_0_out1;  // ufix13
  wire [12:0] y;  // ufix13
  wire signed [15:0] DTC_2_out1;  // int16
  reg signed [15:0] DLY_0_out1_26;  // int16
  wire signed [15:0] add_SW_1_out1_20;  // int16
  reg signed [15:0] s1z4_out1_10;  // int16
  wire signed [15:0] signal1_31;  // int16
  wire signed [15:0] signal1_32;  // int16
  reg signed [15:0] DLY_0_out1_27;  // int16
  wire signed [15:0] add_SW_1_out1_21;  // int16
  wire signed [15:0] add_SW_1_out1_22;  // int16
  reg signed [15:0] s1z4_out1_11;  // int16
  wire signed [15:0] signal1_33;  // int16
  wire signed [15:0] signal1_34;  // int16
  reg signed [15:0] DLY_0_out1_28;  // int16
  wire signed [15:0] add_SW_1_out1_23;  // int16
  reg signed [15:0] s1z4_out1_12;  // int16
  wire signed [15:0] signal1_35;  // int16
  wire signed [15:0] signal1_36;  // int16
  wire RO1610_relop1;
  wire signed [15:0] Switch16_out1_7;  // int16
  wire RO117_relop1;
  wire signed [15:0] Switch17_out1_6;  // int16
  reg signed [15:0] DLY_0_out1_29;  // int16
  wire signed [15:0] add_SW_1_out1_24;  // int16
  wire RO1611_relop1;
  wire signed [15:0] Switch16_out1_8;  // int16
  wire RO118_relop1;
  wire signed [15:0] Switch17_out1_7;  // int16
  wire CT49_out1;
  wire OR5_out1_1;
  wire signed [15:0] Switch35_out1;  // int16
  reg signed [15:0] s1z4_out1_13;  // int16
  wire signed [15:0] signal1_37;  // int16
  wire signed [15:0] signal1_38;  // int16
  reg signed [15:0] DLY_0_out1_30;  // int16
  wire signed [15:0] add_SW_1_out1_25;  // int16
  wire signed [15:0] add_SW_1_out1_26;  // int16
  wire signed [33:0] Abs_y;  // sfix34
  wire [12:0] Bit_Slice1_out1;  // ufix13
  wire signed [15:0] DTC_b16_0_out1;  // int16
  wire signed [16:0] UM_0_in0;  // sfix17
  wire signed [15:0] UM_0_out1_2;  // int16
  wire CT0_0_out1_1;
  reg signed [15:0] s1z4_out1_14;  // int16
  wire signed [15:0] signal1_39;  // int16
  wire signed [15:0] signal1_40;  // int16
  wire RO3_relop1;
  wire signed [17:0] Switch19_out1;  // sfix18
  wire RO2_relop1;
  wire signed [17:0] Switch20_out1;  // sfix18
  reg signed [15:0] DLY_0_out1_31;  // int16
  wire signed [15:0] add_SW_1_out1_27;  // int16
  wire signed [15:0] signal1_41;  // int16
  wire signed [15:0] s_75;  // int16
  wire signed [15:0] signal1_42;  // int16
  wire signed [15:0] s_76;  // int16
  wire signed [15:0] signal1_43;  // int16
  wire signed [15:0] s_77;  // int16
  wire signed [15:0] signal1_44;  // int16
  wire signed [15:0] s_78;  // int16
  wire signed [15:0] signal1_45;  // int16
  wire signed [15:0] s_79;  // int16
  wire signed [15:0] signal1_46;  // int16
  wire signed [15:0] s_80;  // int16
  wire signed [15:0] signal1_47;  // int16
  wire signed [15:0] s_81;  // int16
  wire signed [15:0] signal1_48;  // int16
  wire signed [15:0] s_82;  // int16
  wire signed [15:0] signal1_49;  // int16
  wire signed [15:0] s_83;  // int16
  wire signed [15:0] signal1_50;  // int16
  wire signed [15:0] s_84;  // int16
  wire signed [15:0] signal1_51;  // int16
  wire signed [15:0] s_85;  // int16
  wire signed [15:0] signal1_52;  // int16
  wire signed [15:0] s_86;  // int16
  wire signed [15:0] signal1_53;  // int16
  wire signed [15:0] s_87;  // int16
  wire signed [15:0] signal1_54;  // int16
  wire signed [15:0] s_88;  // int16
  wire signed [15:0] signal1_55;  // int16
  wire signed [15:0] s_89;  // int16
  wire signed [15:0] signal1_56;  // int16
  wire signed [15:0] s_90;  // int16
  wire signed [15:0] signal1_57;  // int16
  wire signed [15:0] s_91;  // int16
  wire signed [15:0] signal1_58;  // int16
  wire signed [15:0] s_92;  // int16
  wire signed [15:0] signal1_59;  // int16
  wire signed [15:0] s_93;  // int16
  wire signed [15:0] signal1_60;  // int16
  wire signed [15:0] s_94;  // int16
  wire signed [15:0] signal1_61;  // int16
  wire signed [15:0] signal1_62;  // int16
  wire signed [17:0] DTC_b18_1_out1;  // sfix18
  wire signed [17:0] signal1_63;  // sfix18
  wire signed [17:0] s_95;  // sfix18
  wire signed [17:0] signal1_64;  // sfix18
  wire signed [17:0] s_96;  // sfix18
  wire signed [17:0] signal1_65;  // sfix18
  wire signed [17:0] s_97;  // sfix18
  wire signed [17:0] signal1_66;  // sfix18
  wire signed [17:0] signal1_67;  // sfix18
  wire signed [17:0] s_98;  // sfix18
  wire signed [17:0] signal1_68;  // sfix18
  wire signed [17:0] s_99;  // sfix18
  wire signed [17:0] signal1_69;  // sfix18
  wire signed [17:0] s_100;  // sfix18
  wire signed [17:0] signal1_70;  // sfix18
  wire signed [17:0] signal1_71;  // sfix18
  wire signed [17:0] add_SW_1_out1_28;  // sfix18
  wire signed [18:0] Add7_add_temp;  // sfix19
  wire signed [18:0] Add7_1;  // sfix19
  wire signed [18:0] Add7_2;  // sfix19
  wire signed [17:0] Add7_out1_1;  // sfix18
  wire RO_6_relop1;
  wire signed [17:0] Switch21_out1;  // sfix18
  wire signed [17:0] Add11_out1_2;  // sfix18
  wire RO17_relop1;
  wire signed [17:0] Switch22_out1;  // sfix18
  wire RO16_relop1;
  wire signed [17:0] Switch23_out1;  // sfix18
  wire signed [15:0] DTC_4_out1;  // int16
  wire signed [15:0] signal1_72;  // int16
  wire signed [15:0] Switch97_out1_1;  // int16
  wire signed [26:0] Add7_stage2_1;  // sfix27
  wire signed [26:0] Add7_stage2_2;  // sfix27
  wire signed [26:0] Add7_op_stage2_1;  // sfix27
  wire signed [26:0] Add7_stage3_add_temp;  // sfix27
  wire signed [26:0] Add7_stage3_1;  // sfix27
  wire signed [25:0] Add7_out1_2;  // sfix26
  wire signed [25:0] Switch79_out1_1;  // sfix26
  wire [15:0] Bit_Slice6_out1_1;  // uint16
  wire signed [15:0] Data_Type_S11_out1_1;  // int16
  wire signed [15:0] signal1_73;  // int16
  wire signed [15:0] s_101;  // int16
  wire signed [15:0] signal1_74;  // int16
  wire signed [15:0] s_102;  // int16
  wire signed [15:0] signal1_75;  // int16
  wire signed [15:0] s_103;  // int16
  wire signed [15:0] signal1_76;  // int16
  wire signed [15:0] s_104;  // int16
  wire signed [15:0] signal1_77;  // int16
  wire signed [15:0] s_105;  // int16
  wire signed [15:0] signal1_78;  // int16
  wire signed [15:0] s_106;  // int16
  wire signed [15:0] signal1_79;  // int16
  wire signed [15:0] s_107;  // int16
  wire signed [15:0] signal1_80;  // int16
  wire signed [15:0] s_108;  // int16
  wire signed [15:0] signal1_81;  // int16
  wire signed [15:0] s_109;  // int16
  wire signed [15:0] signal1_82;  // int16
  wire signed [15:0] s_110;  // int16
  wire signed [15:0] signal1_83;  // int16
  wire signed [15:0] s_111;  // int16
  wire signed [15:0] signal1_84;  // int16
  wire signed [15:0] s_112;  // int16
  wire signed [15:0] signal1_85;  // int16
  wire signed [15:0] s_113;  // int16
  wire signed [15:0] signal1_86;  // int16
  wire signed [15:0] s_114;  // int16
  wire signed [15:0] signal1_87;  // int16
  wire signed [15:0] s_115;  // int16
  wire signed [15:0] signal1_88;  // int16
  wire signed [15:0] s_116;  // int16
  wire signed [15:0] signal1_89;  // int16
  wire signed [15:0] signal1_90;  // int16
  wire signed [31:0] Product6_out1;  // int32
  wire signed [32:0] Add_1;  // sfix33
  wire signed [32:0] Add_2;  // sfix33
  wire CT0_0_out1_2;
  reg signed [15:0] s1z4_out1_15;  // int16
  wire signed [15:0] signal1_91;  // int16
  wire signed [15:0] signal1_92;  // int16
  wire signed [15:0] s_117;  // int16
  wire signed [15:0] s_118;  // int16
  wire signed [11:0] signal3_19;  // sfix12
  wire signed [11:0] signal3_20;  // sfix12
  wire signed [11:0] signal3_21;  // sfix12
  wire signed [15:0] signal1_93;  // int16
  wire signed [15:0] signal1_94;  // int16
  wire signed [15:0] signal1_95;  // int16
  wire signed [16:0] Add5_1;  // sfix17
  wire signed [16:0] Add5_2;  // sfix17
  wire signed [16:0] Add5_out1;  // sfix17
  wire signed [11:0] signal4;  // sfix12
  wire signed [11:0] signal4_1;  // sfix12
  wire signed [11:0] signal4_2;  // sfix12
  wire signed [16:0] RO1_1_1;  // sfix17
  wire RO1_relop1;
  wire signed [16:0] signal4_dtc;  // sfix17
  wire signed [16:0] Switch39_out1;  // sfix17
  wire signed [11:0] signal5;  // sfix12
  wire signed [11:0] signal5_1;  // sfix12
  wire signed [11:0] signal5_2;  // sfix12
  wire signed [16:0] RO12_1_1;  // sfix17
  wire RO12_relop1;
  wire signed [11:0] Switch39_out1_dtc;  // sfix12
  wire signed [11:0] Switch40_out1;  // sfix12
  wire RO7_relop1;
  wire signed [32:0] Constant10_out1_dtc;  // sfix33
  wire signed [32:0] Switch13_out1;  // sfix33
  wire RO4_relop1;
  wire signed [32:0] Constant12_out1_dtc;  // sfix33
  wire signed [32:0] Switch14_out1;  // sfix33
  wire signed [23:0] Data_Type_Conversion2_out1;  // sfix24
  reg signed [23:0] s1z4_out1_16;  // sfix24
  wire signed [23:0] signal1_96;  // sfix24
  wire signed [23:0] signal1_97;  // sfix24
  wire signed [23:0] s_119;  // sfix24
  wire signed [23:0] s_120;  // sfix24
  wire OR4_out1_2;
  wire switch_compare_1_4;
  wire signed [23:0] signal2_97;  // sfix24
  wire signed [23:0] signal2_98;  // sfix24
  wire signed [23:0] signal2_99;  // sfix24
  wire signed [23:0] Switch43_out1;  // sfix24
  wire signed [29:0] Constant25_out1_dtc;  // sfix30
  wire signed [12:0] Add6_1;  // sfix13
  wire signed [12:0] Add6_2;  // sfix13
  wire signed [12:0] Add6_out1;  // sfix13
  wire [20:0] Bit_Concat1_out1;  // ufix21
  wire signed [20:0] Data_Type_S19_out1;  // sfix21
  wire signed [29:0] In7_out1_dtc;  // sfix30
  wire signed [12:0] Add3_1;  // sfix13
  wire signed [12:0] Add3_2;  // sfix13
  wire signed [12:0] Add3_out1;  // sfix13
  wire [20:0] Bit_Concat3_out1;  // ufix21
  wire signed [20:0] Data_Type_S1_out1;  // sfix21
  wire signed [29:0] In8_out1_dtc;  // sfix30
  wire signed [29:0] Switch17_out1_8;  // sfix30
  wire signed [29:0] s_121;  // sfix30
  wire signed [29:0] Switch42_out1;  // sfix30
  wire signed [29:0] Switch48_out1;  // sfix30
  reg signed [29:0] Unit_Delay18_out1;  // sfix30
  wire signed [29:0] Switch37_out1;  // sfix30
  wire signed [29:0] s_122;  // sfix30
  wire signed [29:0] signal6;  // sfix30
  wire signed [29:0] signal6_1;  // sfix30
  wire signed [29:0] signal6_2;  // sfix30
  wire signed [30:0] Add8_add_temp;  // sfix31
  wire signed [30:0] Add8_1;  // sfix31
  wire signed [30:0] Add8_2;  // sfix31
  wire signed [29:0] Add8_out1;  // sfix30
  wire signed [29:0] RO13_1_1;  // sfix30
  wire RO13_relop1;
  wire signed [29:0] Switch41_out1;  // sfix30
  wire signed [29:0] RO14_1_1;  // sfix30
  wire RO14_relop1;
  wire [21:0] Bit_Slice9_out1;  // ufix22
  wire signed [21:0] Data_Type_S9_out1;  // sfix22
  wire signed [22:0] Add9_1;  // sfix23
  wire signed [22:0] Add9_2;  // sfix23
  wire signed [22:0] Add9_out1;  // sfix23
  wire signed [11:0] Data_Type_S8_out1;  // sfix12
  reg signed [11:0] Unit_Delay19_out1;  // sfix12
  wire signed [11:0] Switch38_out1;  // sfix12
  wire [12:0] y_1;  // ufix13
  reg signed [15:0] DLY_0_out1_32;  // int16
  wire signed [15:0] add_SW_1_out1_29;  // int16
  reg signed [15:0] DLY_0_out1_33;  // int16
  wire signed [15:0] add_SW_1_out1_30;  // int16
  reg signed [15:0] s1z4_out1_17;  // int16
  wire signed [15:0] signal1_98;  // int16
  wire signed [15:0] signal1_99;  // int16
  wire RO165_relop1;
  wire signed [15:0] Switch16_out1_9;  // int16
  wire signed [16:0] UM_21_in0;  // sfix17
  wire signed [15:0] UM_21_out1;  // int16
  wire RO112_relop1;
  wire signed [15:0] Switch17_out1_9;  // int16
  wire signed [15:0] Switch50_out1;  // int16
  wire signed [15:0] Subsystem1_out1;  // int16
  wire RO168_relop1;
  wire signed [15:0] Switch16_out1_10;  // int16
  wire RO115_relop1;
  wire signed [15:0] Switch17_out1_10;  // int16
  wire CT11_out1;
  wire CT7_out1;
  reg signed [15:0] DLY_0_out1_34;  // int16
  wire signed [15:0] add_SW_1_out1_31;  // int16
  wire signed [15:0] Switch9_out1;  // int16
  reg signed [15:0] DLY_0_out1_35;  // int16
  wire signed [15:0] add_SW_1_out1_32;  // int16
  wire signed [15:0] Switch10_out1;  // int16
  reg signed [15:0] Dly_11_out1;  // int16
  wire signed [15:0] Switch15_out1;  // int16
  reg signed [15:0] DLY_0_out1_36;  // int16
  wire signed [15:0] add_SW_1_out1_33;  // int16
  wire RO169_relop1;
  wire signed [15:0] Switch16_out1_11;  // int16
  wire RO116_relop1;
  wire signed [15:0] Switch17_out1_11;  // int16
  wire signed [31:0] Gain1_cast;  // sfix32_En7
  wire signed [15:0] Gain1_out1;  // int16
  reg [1:0] Unit_Delay123_out1_1;  // ufix2
  wire [1:0] Add2_out1_1;  // ufix2
  wire CT3_out1_1;
  reg  Unit_Delay54_out1;
  wire Switch20_out1_1;
  wire Switch17_out1_12;
  wire Or3_out1_2;
  wire Switch208_out1;
  reg  Unit_Delay55_out1;
  wire [8:0] Switch83_out1_2;  // ufix9
  reg [11:0] Unit_Delay32_out1_2;  // ufix12
  wire [12:0] Add113_add_temp;  // ufix13
  wire [11:0] Add11_out1_3;  // ufix12
  wire Ro102_relop1;
  reg  Unit_Delay57_out1_3;
  wire Switch49_out1_3;
  wire Switch105_out1_2;
  reg  Unit_Delay1_out1_2;
  wire switch_compare_1_5;
  wire signed [25:0] Constant26_out1_dtc_2;  // sfix26
  wire signed [15:0] Constant35_out1_dtc_4;  // int16
  wire switch_compare_1_6;
  wire signed [15:0] Constant34_out1_dtc_2;  // int16
  wire CT4_out1_1;
  wire CT8_out1_1;
  wire CT1_out1_1;
  wire signed [15:0] Constant35_out1_dtc_5;  // int16
  wire [11:0] Add12_out1_2;  // ufix12
  reg signed [25:0] Unit_Delay4_out1;  // sfix26
  wire signed [25:0] Switch79_out1_2;  // sfix26
  wire signed [25:0] Switch8_out1_1;  // sfix26
  wire signed [25:0] signal2_100;  // sfix26
  wire signed [25:0] s_123;  // sfix26
  reg signed [25:0] Unit_Delay3_out1;  // sfix26
  wire signed [25:0] signal2_101;  // sfix26
  wire signed [25:0] s_124;  // sfix26
  reg signed [25:0] Unit_Delay2_out1;  // sfix26
  wire signed [25:0] signal2_102;  // sfix26
  wire signed [25:0] s_125;  // sfix26
  reg signed [25:0] Unit_Delay30_out1_2;  // sfix26
  wire signed [25:0] signal2_103;  // sfix26
  wire signed [25:0] signal2_104;  // sfix26
  wire signed [25:0] signal2_105;  // sfix26
  wire signed [15:0] Switch84_out1_2;  // int16
  wire signed [15:0] Simple_Dual_Port_RAM2_out1_2;  // int16
  wire signed [15:0] Switch98_out1_3;  // int16
  wire signed [25:0] Switch6_out1_1;  // sfix26
  wire [15:0] Bit_Slice1_out1_1;  // uint16
  wire signed [15:0] Data_Type_S1_out1_1;  // int16
  wire signed [25:0] Switch7_out1;  // sfix26
  wire [15:0] Bit_Slice2_out1_1;  // uint16
  wire signed [15:0] Data_Type_S2_out1;  // int16
  wire signed [15:0] signal1_100;  // int16
  wire signed [15:0] s_126;  // int16
  wire signed [15:0] signal1_101;  // int16
  wire signed [15:0] s_127;  // int16
  wire signed [15:0] Data_Type_S11_out1_2;  // int16
  wire signed [15:0] signal1_102;  // int16
  wire signed [15:0] s_128;  // int16
  wire signed [15:0] signal1_103;  // int16
  wire signed [15:0] signal1_104;  // int16
  wire signed [15:0] signal1_105;  // int16
  wire signed [15:0] Switch97_out1_2;  // int16
  wire signed [26:0] Add7_stage22_1;  // sfix27
  wire signed [26:0] Add7_stage22_2;  // sfix27
  wire signed [26:0] Add7_op_stage2_2;  // sfix27
  wire signed [26:0] Add7_stage32_add_temp;  // sfix27
  wire signed [26:0] Add7_stage32_1;  // sfix27
  wire signed [25:0] Add7_out1_3;  // sfix26
  wire signed [25:0] Switch5_out1_1;  // sfix26
  wire [15:0] Bit_Slice6_out1_2;  // uint16
  wire [15:0] Bit_Slice3_out1_1;  // uint16
  wire signed [15:0] Data_Type_S3_out1;  // int16
  wire Or2_out1_1;
  wire Or13_out1;
  wire Or14_out1;
  wire Or15_out1;
  wire Or17_out1;
  wire Or16_out1;
  wire signed [16:0] Add12_add_temp;  // sfix17
  wire signed [16:0] Add12_1;  // sfix17
  wire signed [16:0] Add12_2;  // sfix17
  wire signed [17:0] Add12_out1_3;  // sfix18
  wire [12:0] y_2;  // ufix13

  // 21303
  // 
  // XMJ RS0
  // 
  // 25000000/38/1024=624HZ
  // 
  // Kp=1 represent 1/2^8=1/256
  // 
  // Ki=1 represent 4096/2^8=16
  // 
  // XMJ RS0
  // 
  // 21303


  // <S1>/Add2
  assign Add2_out1 = 6'b000001 + Unit_Delay123_out1;



  // <S1>/CT86
  assign CT86_out1 = Add2_out1 == 6'b100110;



  // <S1>/Switch264
  assign Switch264_out1 = (CT86_out1 == 1'b0 ? Add2_out1 :
              6'b000000);



  // <S1>/Unit Delay123
  // 
  // <S1>/Goto169
  // 
  // <S1>/From11
  // 
  // <S1>/Goto169
  // 
  // <S1>/From9
  // 
  // <S1>/Goto169
  // 
  // <S1>/From8
  // 
  // <S1>/Goto169
  // 
  // <S1>/From79
  // 
  // <S1>/Goto169
  // 
  // <S1>/From7
  // 
  // <S1>/Goto169
  // 
  // <S1>/From5
  // 
  // <S1>/Goto169
  // 
  // <S1>/From455
  // 
  // <S1>/Goto169
  // 
  // <S1>/From454
  // 
  // <S1>/Goto169
  // 
  // <S1>/From453
  // 
  // <S1>/Goto169
  // 
  // <S1>/From452
  // 
  // <S1>/Goto169
  // 
  // <S1>/From451
  // 
  // <S1>/Goto169
  // 
  // <S1>/From450
  // 
  // <S1>/Goto169
  // 
  // <S1>/From447
  // 
  // <S1>/Goto169
  // 
  // <S1>/From426
  // 
  // <S1>/Goto169
  // 
  // <S1>/From416
  // 
  // <S1>/Goto169
  // 
  // <S1>/From39
  // 
  // <S1>/Goto169
  // 
  // <S1>/From374
  // 
  // <S1>/Goto169
  // 
  // <S1>/From373
  // 
  // <S1>/Goto169
  // 
  // <S1>/From30
  // 
  // <S1>/Goto169
  // 
  // <S1>/From292
  // 
  // <S1>/Goto169
  // 
  // <S1>/From291
  // 
  // <S1>/Goto169
  // 
  // <S1>/From290
  // 
  // <S1>/Goto169
  // 
  // <S1>/From289
  // 
  // <S1>/Goto169
  // 
  // <S1>/From288
  // 
  // <S1>/Goto169
  // 
  // <S1>/From287
  // 
  // <S1>/Goto169
  // 
  // <S1>/From286
  // 
  // <S1>/Goto169
  // 
  // <S1>/From285
  // 
  // <S1>/Goto169
  // 
  // <S1>/From284
  // 
  // <S1>/Goto169
  // 
  // <S1>/From20
  // 
  // <S1>/Goto169
  // 
  // <S1>/From2
  // 
  // <S1>/Goto169
  // 
  // <S1>/From19
  // 
  // <S1>/Goto169
  // 
  // <S1>/From185
  // 
  // <S1>/Goto169
  // 
  // <S1>/From18
  // 
  // <S1>/Goto169
  // 
  // <S1>/From179
  // 
  // <S1>/Goto169
  // 
  // <S1>/From178
  // 
  // <S1>/Goto169
  // 
  // <S1>/From166
  // 
  // <S1>/Goto169
  // 
  // <S1>/From15
  // 
  // <S1>/Goto169
  // 
  // <S1>/From145
  // 
  // <S1>/Goto169
  // 
  // <S1>/From14
  always @(posedge g_clk)
    begin : Unit_Delay1231_process
      if (Rst_n == 1'b0) begin
        Unit_Delay123_out1 <= 6'b000000;
      end
      else begin
        Unit_Delay123_out1 <= Switch264_out1;
      end
    end



  // <S1>/CT0
  // 
  // <S1>/Goto48
  // 
  // <S1>/From107
  // 
  // <S1>/Goto48
  // 
  // <S1>/From88
  // 
  // <S1>/Goto48
  // 
  // <S1>/From34
  // 
  // <S1>/Goto48
  // 
  // <S1>/From32
  // 
  // <S1>/Goto48
  // 
  // <S1>/From202
  // 
  // <S1>/Goto48
  // 
  // <S1>/From12
  assign CT0_out1 = Unit_Delay123_out1 == 6'b000110;



  // <S1>/Switch1
  assign Switch1_out1 = (VF0PQ1 == 1'b0 ? Um_ref_b12 :
              Um_b12);



  // <S1>/CT9
  // 
  // <S1>/Goto41
  // 
  // <S1>/From108
  // 
  // <S1>/Goto41
  // 
  // <S1>/From75
  assign CT9_out1 = Unit_Delay123_out1 == 6'b000100;



  // <S1>/CT3
  // 
  // <S1>/Goto42
  // 
  // <S1>/From297
  // 
  // <S1>/From106
  // 
  // <S1>/Goto42
  // 
  // <S1>/From297
  // 
  // <S1>/From57
  // 
  // <S1>/Goto42
  // 
  // <S1>/From297
  // 
  // <S1>/From41
  // 
  // <S1>/Goto42
  // 
  // <S1>/From297
  // 
  // <S1>/From24
  assign CT3_out1 = Unit_Delay123_out1 == 6'b000000;



  // <S115>/SW_3
  assign SW_3_out1 = (Pulse_4096Hz == 1'b0 ? Dly_0_out1 :
              1'b1);



  // <S115>/SW_0
  assign SW_0_out1 = (CT3_out1 == 1'b0 ? SW_3_out1 :
              1'b0);



  // <S115>/Dly_0
  always @(posedge g_clk)
    begin : Dly_0_process
      if (Rst_n == 1'b0) begin
        Dly_0_out1 <= 1'b0;
      end
      else begin
        Dly_0_out1 <= SW_0_out1;
      end
    end



  // <S115>/Or1
  // 
  // <S1>/data_disc_delay
  assign Or1_out1 = Pulse_4096Hz | Dly_0_out1;



  // <S115>/Dly_1
  always @(posedge g_clk)
    begin : Dly_1_process
      if (Rst_n == 1'b0) begin
        Dly_1_out1 <= 1'b0;
      end
      else begin
        Dly_1_out1 <= SW_2_out1;
      end
    end



  // <S115>/SW_2
  // 
  // <S115>/Goto190
  // 
  // <S115>/From6
  // 
  // <S1>/Goto88
  // 
  // <S1>/From142
  // 
  // <S115>/Goto190
  // 
  // <S115>/From6
  // 
  // <S1>/Goto88
  // 
  // <S1>/From443
  // 
  // <S115>/Goto190
  // 
  // <S115>/From6
  // 
  // <S1>/Goto88
  // 
  // <S1>/From437
  // 
  // <S115>/Goto190
  // 
  // <S115>/From6
  // 
  // <S1>/Goto88
  // 
  // <S1>/From430
  // 
  // <S115>/Goto190
  // 
  // <S115>/From6
  // 
  // <S1>/Goto88
  // 
  // <S1>/From423
  // 
  // <S115>/Goto190
  // 
  // <S115>/From6
  // 
  // <S1>/Goto88
  // 
  // <S1>/From279
  // 
  // <S115>/Goto190
  // 
  // <S115>/From6
  // 
  // <S1>/Goto88
  // 
  // <S1>/From272
  // 
  // <S115>/Goto190
  // 
  // <S115>/From6
  // 
  // <S1>/Goto88
  // 
  // <S1>/From240
  // 
  // <S115>/Goto190
  // 
  // <S115>/From6
  // 
  // <S1>/Goto88
  // 
  // <S1>/From228
  // 
  // <S115>/Goto190
  // 
  // <S115>/From6
  // 
  // <S1>/Goto88
  // 
  // <S1>/From165
  assign SW_2_out1 = (CT3_out1 == 1'b0 ? Dly_1_out1 :
              Or1_out1);



  // <S1>/CT4
  // 
  // <S1>/Goto28
  // 
  // <S1>/From350
  // 
  // <S1>/Goto28
  // 
  // <S1>/From59
  assign CT4_out1 = Unit_Delay123_out1 == 6'b000001;



  // <S1>/Or12
  assign Or12_out1 = SW_2_out1 & CT4_out1;



  // <S1>/CT1
  // 
  // <S1>/Goto40
  // 
  // <S1>/From40
  // 
  // <S1>/Goto40
  // 
  // <S1>/From73
  assign CT1_out1 = Unit_Delay123_out1 == 6'b000011;



  // <S1>/Or3
  assign Or3_out1 = CT1_out1 & SW_2_out1;



  // <S1>/CT8
  // 
  // <S1>/Goto34
  // 
  // <S1>/From68
  // 
  // <S1>/Goto34
  // 
  // <S1>/From92
  assign CT8_out1 = Unit_Delay123_out1 == 6'b000010;



  // <S1>/CT10
  // 
  // <S1>/Goto61
  // 
  // <S1>/From109
  // 
  // <S1>/Goto61
  // 
  // <S1>/From77
  assign CT10_out1 = Unit_Delay123_out1 == 6'b000101;



  // <S1>/CT30
  // 
  // <S1>/Goto184
  // 
  // <S1>/From224
  assign CT30_out1 = Unit_Delay123_out1 == 6'b010011;



  // <S1>/Or4
  assign Or4_out1 = CT30_out1 & SW_2_out1;



  // <S1>/CT12
  // 
  // <S1>/Goto69
  // 
  // <S1>/From237
  // 
  // <S1>/Goto69
  // 
  // <S1>/From78
  assign CT12_out1 = Unit_Delay123_out1 == 6'b000111;



  // <S1>/Or5
  assign Or5_out1 = CT12_out1 & SW_2_out1;



  // <S1>/CT31
  // 
  // <S1>/Goto185
  // 
  // <S1>/From268
  assign CT31_out1 = Unit_Delay123_out1 == 6'b010111;



  // <S1>/Or6
  assign Or6_out1 = CT31_out1 & SW_2_out1;



  // <S1>/CT23
  // 
  // <S1>/Goto66
  // 
  // <S1>/From276
  // 
  // <S1>/Goto66
  // 
  // <S1>/From81
  assign CT23_out1 = Unit_Delay123_out1 == 6'b001001;



  // <S1>/Or7
  assign Or7_out1 = CT23_out1 & SW_2_out1;



  // <S1>/CT26
  // 
  // <S1>/Goto67
  // 
  // <S1>/From17
  // 
  // <S1>/Goto67
  // 
  // <S1>/From355
  assign CT26_out1 = Unit_Delay123_out1 == 6'b001010;



  // <S1>/CT41
  // 
  // <S1>/Goto236
  // 
  // <S1>/From419
  assign CT41_out1 = Unit_Delay123_out1 == 6'b011110;



  // <S1>/Or8
  assign Or8_out1 = CT41_out1 & SW_2_out1;



  // <S1>/CT42
  // 
  // <S1>/Goto237
  // 
  // <S1>/From395
  // 
  // <S1>/Goto237
  // 
  // <S1>/From427
  assign CT42_out1 = Unit_Delay123_out1 == 6'b011111;



  // <S1>/Or9
  assign Or9_out1 = CT42_out1 & SW_2_out1;



  // <S1>/CT46
  // 
  // <S1>/Goto241
  // 
  // <S1>/From433
  // 
  // <S1>/Goto241
  // 
  // <S1>/From461
  assign CT46_out1 = Unit_Delay123_out1 == 6'b100010;



  // <S1>/Or10
  assign Or10_out1 = CT46_out1 & SW_2_out1;



  // <S1>/CT47
  // 
  // <S1>/Goto242
  // 
  // <S1>/From407
  // 
  // <S1>/Goto242
  // 
  // <S1>/From440
  assign CT47_out1 = Unit_Delay123_out1 == 6'b100011;



  // <S1>/Or11
  assign Or11_out1 = CT47_out1 & SW_2_out1;



  // <S1>/CT27
  // 
  // <S1>/Goto71
  // 
  // <S1>/From493
  // 
  // <S1>/Goto71
  // 
  // <S1>/From82
  assign CT27_out1 = Unit_Delay123_out1 == 6'b001011;



  // <S1>/CT29
  // 
  // <S1>/Goto74
  // 
  // <S1>/From161
  // 
  // <S1>/Goto74
  // 
  // <S1>/From516
  assign CT29_out1 = Unit_Delay123_out1 == 6'b001100;



  // <S72>/RO16
  assign RO166_relop1 = slow_Kv_Q_inv_Lmt_b16 > slow_Kv_Q_inv_b16;



  // <S72>/Switch16
  assign Switch16_out1 = (RO166_relop1 == 1'b0 ? slow_Kv_Q_inv_Lmt_b16 :
              slow_Kv_Q_inv_b16);



  // <S72>/RO1
  // 
  // <S1>/Staturation16
  assign RO113_relop1 = Switch16_out1 > 16'sb0000000000000000;



  // <S72>/Switch17
  // 
  // <S1>/B59
  // 
  // <S126>/Switch24
  // 
  // <S1>/B59
  // 
  // <S126>/Switch24
  assign Switch17_out1 = (RO113_relop1 == 1'b0 ? 16'sb0000000000000000 :
              Switch16_out1);



  // <S126>/Switch24
  // 
  // <S126>/Switch24
  // 
  // <S126>/Switch24
  // 
  // <S1>/Goto274
  // 
  // <S1>/From488
  assign signal1 = (CT29_out1 == 1'b0 ? Switch17_out1 :
              Switch17_out1);



  // <S125>/Switch24
  assign s = signal1;

  // <S1>/CT58
  assign CT58_out1 = slow_Ffr_fSel_b16 == 16'sb0000000000000110;



  // <S1>/CT57
  assign CT57_out1 = slow_Ffr_fSel_b16 == 16'sb0000000000000101;



  // <S1>/CT55
  assign CT55_out1 = slow_Ffr_fSel_b16 == 16'sb0000000000000100;



  // <S1>/CT54
  assign CT54_out1 = slow_Ffr_fSel_b16 == 16'sb0000000000000011;



  // <S1>/CT53
  assign CT53_out1 = slow_Ffr_fSel_b16 == 16'sb0000000000000010;



  // <S1>/CT56
  assign CT56_out1 = slow_Ffr_fSel_b16 == 16'sb0000000000000001;



  // <S1>/Switch51
  assign Switch51_out1 = (CT56_out1 == 1'b0 ? Pulse50x1024_Hz :
              Pulse50x512_Hz);



  // <S1>/Switch52
  assign Switch52_out1 = (CT53_out1 == 1'b0 ? Switch51_out1 :
              Pulse50x256_Hz);



  // <S1>/Switch53
  assign Switch53_out1 = (CT54_out1 == 1'b0 ? Switch52_out1 :
              Pulse50x128_Hz);



  // <S1>/Switch54
  assign Switch54_out1 = (CT55_out1 == 1'b0 ? Switch53_out1 :
              Pulse50x64_Hz);



  // <S1>/Switch55
  assign Switch55_out1 = (CT57_out1 == 1'b0 ? Switch54_out1 :
              Pulse50x32_Hz);



  // <S1>/Switch56
  // 
  // <S1>/Goto278
  // 
  // <S1>/From321
  // 
  // <S2>/Goto2
  // 
  // <S2>/From50
  // 
  // <S2>/Goto1
  // 
  // <S2>/From170
  // 
  // <S1>/Goto278
  // 
  // <S1>/From321
  // 
  // <S2>/Goto2
  // 
  // <S2>/From50
  // 
  // <S2>/Goto1
  // 
  // <S2>/From170
  // 
  // <S1>/Goto278
  // 
  // <S1>/From321
  // 
  // <S2>/Goto2
  // 
  // <S2>/From50
  // 
  // <S2>/Goto1
  // 
  // <S2>/From431
  assign Switch56_out1 = (CT58_out1 == 1'b0 ? Switch55_out1 :
              Pulse50x16_Hz);



  // <S2>/Switch83
  assign Switch83_out1 = (Switch56_out1 == 1'b0 ? 9'b000000000 :
              9'b000000001);



  // <S2>/Add11
  // 
  // <S1>/AverFilterP1024Ch1b16_V1
  assign Add111_add_temp = ({2'b0, Switch83_out1}) + ({1'b0, Unit_Delay32_out1});
  assign Add11_out1 = Add111_add_temp[9:0];



  // <S2>/Unit Delay32
  always @(posedge g_clk)
    begin : Unit_Delay32_process
      if (Rst_n == 1'b0) begin
        Unit_Delay32_out1 <= 10'b0000000000;
      end
      else begin
        Unit_Delay32_out1 <= Add11_out1;
      end
    end



  // <S2>/Ro10
  // 
  // <S2>/Goto197
  // 
  // <S2>/From435
  assign Ro10_relop1 = Unit_Delay32_out1 > Add11_out1;



  // <S2>/Switch49
  assign Switch49_out1 = (Ro10_relop1 == 1'b0 ? Unit_Delay57_out1 :
              1'b1);



  // <S2>/Unit Delay57
  // 
  // <S2>/Goto198
  // 
  // <S2>/From2
  // 
  // <S2>/From439
  always @(posedge g_clk)
    begin : Unit_Delay57_process
      if (Rst_n == 1'b0) begin
        Unit_Delay57_out1 <= 1'b0;
      end
      else begin
        Unit_Delay57_out1 <= Switch49_out1;
      end
    end



  // <S2>/Unit Delay1
  always @(posedge g_clk)
    begin : Unit_Delay1_process
      if (Rst_n == 1'b0) begin
        Unit_Delay1_out1 <= 1'b0;
      end
      else begin
        Unit_Delay1_out1 <= Switch105_out1;
      end
    end



  // <S2>/Switch105
  // 
  // <S2>/Goto
  // 
  // <S2>/From3
  // 
  // <S2>/From12
  // 
  // <S2>/Goto
  // 
  // <S2>/From3
  // 
  // <S2>/From169
  assign Switch105_out1 = (Switch56_out1 == 1'b0 ? Unit_Delay1_out1 :
              Unit_Delay57_out1);



  assign switch_compare_1 = Switch105_out1 > 1'b0;



  assign Constant26_out1_dtc = 26'sb00000000000000000000000000;



  assign Constant35_out1_dtc = 16'sb0000000000000000;



  assign switch_compare_1_1 = Switch105_out1 > 1'b0;



  assign Constant34_out1_dtc = 16'sb0000000000000000;



  // <S1>/CT17
  // 
  // <S1>/Goto57
  // 
  // <S1>/From80
  assign CT17_out1 = Unit_Delay123_out1 == 6'b001000;



  // <S135>/Dly_0
  always @(posedge g_clk)
    begin : Dly_01_process
      if (Rst_n == 1'b0) begin
        Dly_0_out1_1 <= 1'b0;
      end
      else begin
        Dly_0_out1_1 <= SW_0_out1_1;
      end
    end



  // <S135>/SW_3
  assign SW_3_out1_1 = (CT3_out1 == 1'b0 ? Dly_0_out1_1 :
              1'b1);



  // <S135>/SW_0
  // 
  // <S1>/set_rst_0
  assign SW_0_out1_1 = (CT0_out1 == 1'b0 ? SW_3_out1_1 :
              1'b0);



  // <S1>/CT34
  // 
  // <S1>/Goto188
  // 
  // <S1>/From294
  // 
  // <S1>/Goto188
  // 
  // <S1>/From303
  // 
  // <S1>/Goto188
  // 
  // <S1>/From301
  // 
  // <S4>/Goto2
  // 
  // <S4>/From38
  // 
  // <S4>/From36
  assign CT34_out1 = Unit_Delay123_out1 == 6'b011010;



  // <S1>/CT28
  // 
  // <S1>/Goto75
  // 
  // <S1>/From83
  assign CT28_out1 = Unit_Delay123_out1 == 6'b001101;



  // <S1>/CT5
  // 
  // <S1>/Goto89
  // 
  // <S1>/From90
  assign CT5_out1 = Unit_Delay123_out1 == 6'b001110;



  // <S1>/CT6
  // 
  // <S1>/Goto97
  // 
  // <S1>/From138
  assign CT6_out1 = Unit_Delay123_out1 == 6'b001111;



  // <S1>/CT13
  // 
  // <S1>/Goto102
  // 
  // <S1>/From148
  assign CT13_out1 = Unit_Delay123_out1 == 6'b010000;



  // <S1>/CT14
  // 
  // <S1>/Goto103
  // 
  // <S1>/From152
  assign CT14_out1 = Unit_Delay123_out1 == 6'b010001;



  // <S1>/CT15
  // 
  // <S1>/Goto104
  // 
  // <S1>/From186
  // 
  // <S1>/Goto104
  // 
  // <S1>/From234
  assign CT15_out1 = Unit_Delay123_out1 == 6'b010010;



  // <S1>/CT22
  // 
  // <S1>/Goto181
  // 
  // <S1>/From245
  assign CT22_out1 = Unit_Delay123_out1 == 6'b010100;



  // <S1>/CT24
  // 
  // <S1>/Goto182
  // 
  // <S1>/From249
  assign CT24_out1 = Unit_Delay123_out1 == 6'b010101;



  // <S1>/CT25
  // 
  // <S1>/Goto183
  // 
  // <S1>/From256
  assign CT25_out1 = Unit_Delay123_out1 == 6'b010110;



  // <S1>/CT32
  // 
  // <S1>/Goto186
  // 
  // <S1>/From259
  assign CT32_out1 = Unit_Delay123_out1 == 6'b011000;



  // <S1>/CT33
  // 
  // <S1>/Goto187
  // 
  // <S1>/From263
  assign CT33_out1 = Unit_Delay123_out1 == 6'b011001;



  // <S1>/CT38
  // 
  // <S1>/Goto205
  // 
  // <S1>/From335
  assign CT38_out1 = Unit_Delay123_out1 == 6'b011011;



  // <S1>/CT39
  // 
  // <S1>/Goto207
  // 
  // <S1>/From370
  assign CT39_out1 = Unit_Delay123_out1 == 6'b011100;



  // <S1>/CT44
  // 
  // <S1>/Goto239
  // 
  // <S1>/From392
  assign CT44_out1 = Unit_Delay123_out1 == 6'b011101;



  // <S1>/CT43
  // 
  // <S1>/Goto238
  // 
  // <S1>/From399
  assign CT43_out1 = Unit_Delay123_out1 == 6'b100000;



  // <S1>/CT45
  // 
  // <S1>/Goto240
  // 
  // <S1>/From404
  assign CT45_out1 = Unit_Delay123_out1 == 6'b100001;



  // <S1>/CT48
  // 
  // <S1>/Goto243
  // 
  // <S1>/From411
  assign CT48_out1 = Unit_Delay123_out1 == 6'b100100;



  // <S1>/CT123
  assign CT123_out1 = Unit_Delay123_out1 == 6'b000000;



  // <S1>/Switch176
  assign Switch176_out1 = (Pulse_4096Hz == 1'b0 ? Unit_Delay77_out1 :
              1'b1);



  // <S1>/Switch175
  assign Switch175_out1 = (CT123_out1 == 1'b0 ? Switch176_out1 :
              1'b0);



  // <S1>/Unit Delay77
  always @(posedge g_clk)
    begin : Unit_Delay77_process
      if (Rst_n == 1'b0) begin
        Unit_Delay77_out1 <= 1'b0;
      end
      else begin
        Unit_Delay77_out1 <= Switch175_out1;
      end
    end



  // <S1>/Or1
  assign Or1_out1_1 = Pulse_4096Hz | Unit_Delay77_out1;



  // <S1>/Unit Delay78
  always @(posedge g_clk)
    begin : Unit_Delay78_process
      if (Rst_n == 1'b0) begin
        Unit_Delay78_out1 <= 1'b0;
      end
      else begin
        Unit_Delay78_out1 <= Switch177_out1;
      end
    end



  // <S1>/Switch177
  // 
  // <S1>/Goto190
  // 
  // <S1>/From459
  // 
  // <S1>/Goto190
  // 
  // <S1>/From86
  assign Switch177_out1 = (CT123_out1 == 1'b0 ? Unit_Delay78_out1 :
              Or1_out1_1);



  // <S1>/OR3
  assign OR3_out1_1 = Switch177_out1 & CtlLoopOn;



  // <S1>/Switch46
  // 
  // <S1>/B55
  // 
  // <S108>/add_SW_0
  // 
  // <S1>/B55
  // 
  // <S108>/add_SW_0
  assign Switch46_out1 = (OR3_out1_1 == 1'b0 ? 16'sb0000000000000000 :
              16'sb0000000000000001);



  // <S108>/add_SW_0
  // 
  // <S108>/add_SW_0
  // 
  // <S1>/add_sub_33
  // 
  // <S108>/add_SW_0
  // 
  // <S1>/Goto246
  // 
  // <S1>/From378
  assign signal1_1 = (CT46_out1 == 1'b0 ? Switch46_out1 :
              Switch46_out1);



  // <S107>/add_SW_0
  assign s_1 = signal1_1;

  // <S1>/UM_20
  assign UM_20_in0 =  - ({fast_VSGPLimit_b16[15], fast_VSGPLimit_b16});
  assign UM_20_out1 = UM_20_in0[15:0];



  // <S1>/OR2
  assign OR2_out1 =  ~ VF0PQ1;



  // <S1>/OR1
  assign OR1_out1_2 = OR2_out1 & (CtlLoopOn & SycGen_En);



  // <S116>/SW_5
  // 
  // <S1>/data_disc_delay1
  assign SW_5_out1 = (Pulse_4096Hz == 1'b0 ? Dly_4_out1 :
              w_b18);



  // <S116>/Dly_4
  // 
  // <S1>/B41
  // 
  // <S98>/add_SW_0
  // 
  // <S1>/B41
  // 
  // <S98>/add_SW_0
  always @(posedge g_clk)
    begin : Dly_41_process
      if (Rst_n == 1'b0) begin
        Dly_4_out1 <= 18'sb000000000000000000;
      end
      else begin
        Dly_4_out1 <= SW_5_out1;
      end
    end



  // <S98>/add_SW_0
  // 
  // <S98>/add_SW_0
  // 
  // <S1>/add_sub_24
  // 
  // <S98>/add_SW_0
  // 
  // <S1>/Goto191
  // 
  // <S1>/From302
  assign signal1_2 = (CT34_out1 == 1'b0 ? Dly_4_out1 :
              Dly_4_out1);



  // <S1>/Switch28
  assign s_2 = signal1_2;

  // <S110>/add_SW_0
  // 
  // <S110>/add_SW_0
  // 
  // <S1>/add_sub_5
  // 
  // <S110>/add_SW_0
  // 
  // <S1>/Goto23
  // 
  // <S1>/From10
  assign signal1_3 = (CT10_out1 == 1'b0 ? ULine_ref_b12 :
              ULine_ref_b12);



  // <S109>/add_SW_0
  assign s_3 = signal1_3;

  // <S109>/add_SW_0
  // 
  // <S109>/add_SW_0
  // 
  // <S1>/add_sub_4
  // 
  // <S109>/add_SW_0
  // 
  // <S1>/Goto22
  // 
  // <S1>/From4
  assign signal1_4 = (CT9_out1 == 1'b0 ? s_3 :
              ULine_ref_b12);



  // <S104>/add_SW_0
  assign s_4 = signal1_4;

  // <S80>/RO_1
  // 
  // <S1>/VolRideThrough_V10
  assign RO_11_relop1 = Uab_RMS_b12 <= Ubc_RMS_b12;



  // <S80>/SW_1
  assign SW_1_out1 = (RO_11_relop1 == 1'b0 ? Ubc_RMS_b12 :
              Uab_RMS_b12);



  // <S80>/RO_2
  assign RO_21_relop1 = SW_1_out1 <= Uca_RMS_b12;



  // <S80>/SW_2
  // 
  // <S80>/Goto
  // 
  // <S80>/From
  // 
  // <S80>/Goto
  // 
  // <S80>/From254
  assign SW_2_out1_1 = (RO_21_relop1 == 1'b0 ? Uca_RMS_b12 :
              SW_1_out1);



  // <S80>/RO_5
  assign RO_51_relop1 = SW_2_out1_1 <= ULine_ref_b12;



  // <S80>/RO_3
  assign RO_31_relop1 = Uab_RMS_b12 >= Ubc_RMS_b12;



  // <S80>/SW_3
  assign SW_3_out1_2 = (RO_31_relop1 == 1'b0 ? Ubc_RMS_b12 :
              Uab_RMS_b12);



  // <S80>/RO_4
  assign RO_41_relop1 = SW_3_out1_2 >= Uca_RMS_b12;



  // <S80>/SW_4
  // 
  // <S80>/Goto1
  // 
  // <S80>/From257
  assign SW_4_out1 = (RO_41_relop1 == 1'b0 ? Uca_RMS_b12 :
              SW_3_out1_2);



  // <S80>/SW_6
  assign SW_6_out1 = (En_Hvrt_Fvr == 1'b0 ? ULine_ref_b12 :
              SW_4_out1);



  // <S80>/SW_5
  assign SW_5_out1_1 = (RO_51_relop1 == 1'b0 ? SW_6_out1 :
              SW_2_out1_1);



  // <S80>/Unit Delay57
  // 
  // <S1>/Goto150
  // 
  // <S1>/From65
  // 
  // <S1>/From327
  // 
  // <S1>/Goto150
  // 
  // <S1>/From65
  // 
  // <S1>/From72
  // 
  // <S1>/Goto150
  // 
  // <S1>/From65
  // 
  // <S1>/From69
  // 
  // <S1>/Goto150
  // 
  // <S1>/From65
  // 
  // <S1>/From333
  always @(posedge g_clk)
    begin : Unit_Delay573_process
      if (Rst_n == 1'b0) begin
        Unit_Delay57_out1_1 <= 12'sb000000000000;
      end
      else begin
        Unit_Delay57_out1_1 <= SW_5_out1_1;
      end
    end



  // <S1>/Switch136
  // 
  // <S1>/B5
  // 
  // <S82>/add_SW_0
  assign Switch136_out1 = (VF0PQ1 == 1'b0 ? 12'sb000000000000 :
              Iqp_ref_in_b12);



  // <S1>/Switch102
  // 
  // <S1>/B1
  // 
  // <S81>/add_SW_0
  assign Switch102_out1 = (VF0PQ1 == 1'b0 ? 12'sb000000000000 :
              Idp_ref_in_b12);



  // <S1>/CT40
  // 
  // <S1>/Goto244
  // 
  // <S1>/From456
  assign CT40_out1 = Unit_Delay123_out1 == 6'b100101;



  // <S115>/Or4
  // 
  // <S115>/Goto1
  // 
  // <S115>/From1
  // 
  // <S115>/Goto1
  // 
  // <S115>/From7
  // 
  // <S115>/Goto1
  // 
  // <S115>/From5
  // 
  // <S115>/Goto1
  // 
  // <S115>/From4
  // 
  // <S115>/Goto1
  // 
  // <S115>/From3
  // 
  // <S115>/Goto1
  // 
  // <S115>/From2
  assign Or4_out1_1 = SW_2_out1 & CT40_out1;



  // <S1>/UM_16
  assign UM_16_in0 =  - ({slow_VSGPLimit_b16[15], slow_VSGPLimit_b16});
  assign UM_16_out1 = UM_16_in0[15:0];



  // <S1>/RO10
  // 
  // <S1>/Goto258
  // 
  // <S1>/From478
  assign RO10_1_2 = {{4{Inr_db_b16[11]}}, Inr_db_b16};
  assign RO10_relop1_1 = dwdt_b16 > RO10_1_2;



  // <S1>/UM_12
  assign UM_12_in0 =  - ({Inr_db_b16[11], Inr_db_b16});
  assign UM_12_out1 = UM_12_in0[11:0];



  // <S1>/RO15
  // 
  // <S1>/Goto259
  // 
  // <S1>/From479
  assign RO15_1_1 = {{4{UM_12_out1[11]}}, UM_12_out1};
  assign RO15_relop1 = dwdt_b16 < RO15_1_1;



  // <S1>/UM_13
  assign UM_13_in0 =  - ({dwdt_b16[15], dwdt_b16});
  assign UM_13_out1 = UM_13_in0[15:0];



  assign From309_out1_dtc = {{4{Inr_db_b16[11]}}, Inr_db_b16};



  // <S1>/Switch34
  assign Switch34_out1 = (RO15_relop1 == 1'b0 ? UM_13_out1 :
              From309_out1_dtc);



  assign UM_12_out1_dtc = {{4{UM_12_out1[11]}}, UM_12_out1};



  // <S1>/Switch33
  assign Switch33_out1 = (RO10_relop1_1 == 1'b0 ? Switch34_out1 :
              UM_12_out1_dtc);



  // <S1>/DTC_3
  assign DTC_3_out1 = {3'b0, wt0_b13};



  // <S1>/UM_8
  assign UM_8_in0 =  - ({DTC_3_out1[15], DTC_3_out1});
  assign UM_8_out1 = UM_8_in0[15:0];



  // <S1>/UM_18
  assign UM_18_in0 =  - ({fast_VSGQLimit_b16[15], fast_VSGQLimit_b16});
  assign UM_18_out1 = UM_18_in0[15:0];



  // <S1>/UM_19
  assign UM_19_in0 =  - ({fast_VSGPLimit_b16[15], fast_VSGPLimit_b16});
  assign UM_19_out1 = UM_19_in0[15:0];



  // <S1>/UM_6
  assign UM_6_in0 =  - ({Ffr_db_b16[15], Ffr_db_b16});
  assign UM_6_out1 = UM_6_in0[15:0];



  // <S1>/UM_1
  assign UM_1_in0 =  - ({w_b18[17], w_b18});
  assign UM_1_out1 = UM_1_in0[17:0];



  // <S116>/SW_6
  assign SW_6_out1_1 = (Pulse_4096Hz == 1'b0 ? Dly_6_out1 :
              Dly_4_out1);



  // <S116>/Dly_6
  always @(posedge g_clk)
    begin : Dly_61_process
      if (Rst_n == 1'b0) begin
        Dly_6_out1 <= 18'sb000000000000000000;
      end
      else begin
        Dly_6_out1 <= SW_6_out1_1;
      end
    end



  // <S1>/UM_11
  assign UM_11_in0 =  - ({Dly_6_out1[17], Dly_6_out1});
  assign UM_11_out1 = UM_11_in0[17:0];



  // <S98>/add_SW_0
  assign signal2 = (CT34_out1 == 1'b0 ? UM_11_out1 :
              UM_11_out1);



  assign s_5 = signal2;

  // <S1>/UM_5
  assign UM_5_in0 =  - ({Fvr_db_b12[11], Fvr_db_b12});
  assign UM_5_out1 = UM_5_in0[11:0];



  // <S110>/add_SW_0
  assign signal2_1 = (CT10_out1 == 1'b0 ? UM_5_out1 :
              UM_5_out1);



  assign s_6 = signal2_1;

  // <S109>/add_SW_0
  assign signal2_2 = (CT9_out1 == 1'b0 ? s_6 :
              Fvr_db_b12);



  assign s_7 = signal2_2;

  // <S1>/UM_2
  assign UM_2_in0 =  - ({Unit_Delay57_out1_1[11], Unit_Delay57_out1_1});
  assign UM_2_out1 = UM_2_in0[11:0];



  // <S104>/add_SW_0
  assign signal2_3 = (CT1_out1 == 1'b0 ? s_7 :
              UM_2_out1);



  assign s_8 = signal2_3;

  // <S1>/UM_4
  assign UM_4_in0 =  - ({Iqp_Flted_b12[11], Iqp_Flted_b12});
  assign UM_4_out1 = UM_4_in0[11:0];



  // <S1>/UM_3
  assign UM_3_in0 =  - ({Idp_Flted_b12[11], Idp_Flted_b12});
  assign UM_3_out1 = UM_3_in0[11:0];



  assign Constant35_out1_dtc_1 = 16'sb0000000000000000;



  // <S2>/Add12
  assign Add12_out1 = Add11_out1 + 10'b0000000001;



  // <S3>/Switch83
  assign Switch83_out1_1 = (fast_Pulse == 1'b0 ? 9'b000000000 :
              9'b000000001);



  // <S3>/Add11
  // 
  // <S1>/AverFilterP1024Ch1b16_V10
  assign Add112_add_temp = ({2'b0, Switch83_out1_1}) + ({1'b0, Unit_Delay32_out1_1});
  assign Add11_out1_1 = Add112_add_temp[9:0];



  // <S3>/Unit Delay32
  always @(posedge g_clk)
    begin : Unit_Delay321_process
      if (Rst_n == 1'b0) begin
        Unit_Delay32_out1_1 <= 10'b0000000000;
      end
      else begin
        Unit_Delay32_out1_1 <= Add11_out1_1;
      end
    end



  // <S3>/Ro10
  // 
  // <S3>/Goto197
  // 
  // <S3>/From435
  assign Ro101_relop1 = Unit_Delay32_out1_1 > Add11_out1_1;



  // <S3>/Switch49
  assign Switch49_out1_1 = (Ro101_relop1 == 1'b0 ? Unit_Delay57_out1_2 :
              1'b1);



  // <S3>/Unit Delay57
  // 
  // <S3>/Goto198
  // 
  // <S3>/From2
  // 
  // <S3>/From439
  always @(posedge g_clk)
    begin : Unit_Delay571_process
      if (Rst_n == 1'b0) begin
        Unit_Delay57_out1_2 <= 1'b0;
      end
      else begin
        Unit_Delay57_out1_2 <= Switch49_out1_1;
      end
    end



  // <S3>/Unit Delay1
  always @(posedge g_clk)
    begin : Unit_Delay11_process
      if (Rst_n == 1'b0) begin
        Unit_Delay1_out1_1 <= 1'b0;
      end
      else begin
        Unit_Delay1_out1_1 <= Switch105_out1_1;
      end
    end



  // <S3>/Switch105
  // 
  // <S3>/Goto
  // 
  // <S3>/From3
  // 
  // <S3>/From12
  // 
  // <S3>/Goto
  // 
  // <S3>/From3
  // 
  // <S3>/From169
  assign Switch105_out1_1 = (fast_Pulse == 1'b0 ? Unit_Delay1_out1_1 :
              Unit_Delay57_out1_2);



  assign switch_compare_1_2 = Switch105_out1_1 > 1'b0;



  assign Constant26_out1_dtc_1 = 26'sb00000000000000000000000000;



  assign Constant35_out1_dtc_2 = 16'sb0000000000000000;



  assign switch_compare_1_3 = Switch105_out1_1 > 1'b0;



  assign Constant34_out1_dtc_1 = 16'sb0000000000000000;



  assign Constant35_out1_dtc_3 = 16'sb0000000000000000;



  // <S3>/Add12
  assign Add12_out1_1 = Add11_out1_1 + 10'b0000000001;



  // <S70>/RO16
  assign RO164_relop1 = slow_Kf_P_inv_Lmt_b16 > slow_Kf_P_inv_b16;



  // <S70>/Switch16
  assign Switch16_out1_1 = (RO164_relop1 == 1'b0 ? slow_Kf_P_inv_Lmt_b16 :
              slow_Kf_P_inv_b16);



  // <S70>/RO1
  // 
  // <S1>/Staturation12
  assign RO111_relop1 = Switch16_out1_1 > 16'sb0000000000000000;



  // <S70>/Switch17
  assign Switch17_out1_1 = (RO111_relop1 == 1'b0 ? 16'sb0000000000000000 :
              Switch16_out1_1);



  // <S126>/Switch15
  assign signal2_4 = (CT29_out1 == 1'b0 ? s1z5_out1 :
              32'sb00000000000000000000000000000000);



  assign signal2_5 = signal2_4;

  // <S126>/s1z5
  // 
  // <S1>/Goto275
  // 
  // <S1>/From494
  // 
  // <S1>/Goto275
  // 
  // <S1>/From494
  always @(posedge g_clk)
    begin : s1z59_process
      if (Rst_n == 1'b0) begin
        s1z5_out1 <= 32'sb00000000000000000000000000000000;
      end
      else begin
        s1z5_out1 <= signal2_5;
      end
    end



  // <S126>/Switch24
  assign signal3 = (CT29_out1 == 1'b0 ? s1z5_out1 :
              s1z5_out1);



  assign s_9 = signal3;

  // <S130>/Switch15
  assign signal2_6 = (CT10_out1 == 1'b0 ? s1z5_out1_1 :
              32'sb00000000000000000000000000000000);



  assign signal2_7 = signal2_6;

  // <S130>/s1z5
  // 
  // <S1>/Goto81
  // 
  // <S1>/From117
  always @(posedge g_clk)
    begin : s1z513_process
      if (Rst_n == 1'b0) begin
        s1z5_out1_1 <= 32'sb00000000000000000000000000000000;
      end
      else begin
        s1z5_out1_1 <= signal2_7;
      end
    end



  // <S128>/Switch15
  assign signal2_8 = (CT8_out1 == 1'b0 ? s1z5_out1_2 :
              32'sb00000000000000000000000000000000);



  assign signal2_9 = signal2_8;

  // <S128>/s1z5
  // 
  // <S1>/Goto83
  // 
  // <S1>/From123
  always @(posedge g_clk)
    begin : s1z511_process
      if (Rst_n == 1'b0) begin
        s1z5_out1_2 <= 32'sb00000000000000000000000000000000;
      end
      else begin
        s1z5_out1_2 <= signal2_9;
      end
    end



  assign B22_out1_signal3 = s1z5_out1_2;

  // <S1>/Bit Slice3
  assign Bit_Slice3_out1 = Abs_out1[32:11];



  // <S1>/Data Type S5
  assign Data_Type_S5_out1 = $signed(Bit_Slice3_out1[15:0]);



  // <S1>/RO11
  assign RO11_relop1 = 1'b0;



  // <S1>/Switch29
  // 
  // <S1>/Data Type Conversion6
  assign Switch29_out1 = (RO11_relop1 == 1'b0 ? Data_Type_S5_out1 :
              16'sb0111111111111111);



  // <S137>/UM_0
  assign UM_01_in0 =  - ({Switch29_out1[15], Switch29_out1});
  assign UM_0_out1 = UM_01_in0[15:0];



  // <S124>/Switch15
  assign signal2_10 = (Or12_out1 == 1'b0 ? s1z5_out1_3 :
              Switch31_out1);



  assign signal2_11 = signal2_10;

  // <S124>/s1z5
  // 
  // <S1>/Goto250
  // 
  // <S1>/From140
  always @(posedge g_clk)
    begin : s1z57_process
      if (Rst_n == 1'b0) begin
        s1z5_out1_3 <= 32'sb00000000000000000000000000000000;
      end
      else begin
        s1z5_out1_3 <= signal2_11;
      end
    end



  assign B56_out1_signal3 = s1z5_out1_3;

  // <S118>/Switch15
  assign signal2_12 = (Or3_out1 == 1'b0 ? s1z5_out1_4 :
              Switch31_out1_1);



  assign signal2_13 = signal2_12;

  // <S118>/s1z5
  // 
  // <S1>/Goto87
  // 
  // <S1>/From119
  always @(posedge g_clk)
    begin : s1z51_process
      if (Rst_n == 1'b0) begin
        s1z5_out1_4 <= 32'sb00000000000000000000000000000000;
      end
      else begin
        s1z5_out1_4 <= signal2_13;
      end
    end



  assign B24_out1_signal3 = s1z5_out1_4;

  // <S127>/Switch15
  assign signal2_14 = (CT3_out1 == 1'b0 ? s1z5_out1_5 :
              Switch31_out1_2);



  assign signal2_15 = signal2_14;

  // <S127>/s1z5
  // 
  // <S1>/Goto84
  // 
  // <S1>/From122
  always @(posedge g_clk)
    begin : s1z510_process
      if (Rst_n == 1'b0) begin
        s1z5_out1_5 <= 32'sb00000000000000000000000000000000;
      end
      else begin
        s1z5_out1_5 <= signal2_15;
      end
    end



  // <S129>/Switch15
  assign signal2_16 = (CT9_out1 == 1'b0 ? s1z5_out1_6 :
              Switch31_out1_1);



  assign signal2_17 = signal2_16;

  // <S129>/s1z5
  // 
  // <S1>/Goto82
  // 
  // <S1>/From124
  always @(posedge g_clk)
    begin : s1z512_process
      if (Rst_n == 1'b0) begin
        s1z5_out1_6 <= 32'sb00000000000000000000000000000000;
      end
      else begin
        s1z5_out1_6 <= signal2_17;
      end
    end



  // <S117>/Switch15
  assign signal2_18 = (CT0_out1 == 1'b0 ? s1z5_out1_7 :
              Switch31_out1_2);



  assign signal2_19 = signal2_18;

  // <S117>/s1z5
  // 
  // <S1>/Goto90
  // 
  // <S1>/From118
  always @(posedge g_clk)
    begin : s1z5_process
      if (Rst_n == 1'b0) begin
        s1z5_out1_7 <= 32'sb00000000000000000000000000000000;
      end
      else begin
        s1z5_out1_7 <= signal2_19;
      end
    end



  assign B25_out1_signal3 = s1z5_out1_7;

  // <S131>/Switch15
  assign signal2_20 = (Or4_out1 == 1'b0 ? s1z5_out1_8 :
              Switch31_out1);



  assign signal2_21 = signal2_20;

  // <S131>/s1z5
  // 
  // <S1>/Goto119
  // 
  // <S1>/From225
  always @(posedge g_clk)
    begin : s1z514_process
      if (Rst_n == 1'b0) begin
        s1z5_out1_8 <= 32'sb00000000000000000000000000000000;
      end
      else begin
        s1z5_out1_8 <= signal2_21;
      end
    end



  // <S132>/Switch15
  assign signal2_22 = (Or5_out1 == 1'b0 ? s1z5_out1_9 :
              Switch31_out1);



  assign signal2_23 = signal2_22;

  // <S132>/s1z5
  // 
  // <S1>/Goto125
  // 
  // <S1>/From238
  always @(posedge g_clk)
    begin : s1z515_process
      if (Rst_n == 1'b0) begin
        s1z5_out1_9 <= 32'sb00000000000000000000000000000000;
      end
      else begin
        s1z5_out1_9 <= signal2_23;
      end
    end



  // <S133>/Switch15
  assign signal2_24 = (Or6_out1 == 1'b0 ? s1z5_out1_10 :
              Switch31_out1);



  assign signal2_25 = signal2_24;

  // <S133>/s1z5
  // 
  // <S1>/Goto149
  // 
  // <S1>/From269
  always @(posedge g_clk)
    begin : s1z516_process
      if (Rst_n == 1'b0) begin
        s1z5_out1_10 <= 32'sb00000000000000000000000000000000;
      end
      else begin
        s1z5_out1_10 <= signal2_25;
      end
    end



  // <S134>/Switch15
  assign signal2_26 = (Or7_out1 == 1'b0 ? s1z5_out1_11 :
              Switch31_out1);



  assign signal2_27 = signal2_26;

  // <S134>/s1z5
  // 
  // <S1>/Goto170
  // 
  // <S1>/From277
  always @(posedge g_clk)
    begin : s1z517_process
      if (Rst_n == 1'b0) begin
        s1z5_out1_11 <= 32'sb00000000000000000000000000000000;
      end
      else begin
        s1z5_out1_11 <= signal2_27;
      end
    end



  // <S1>/Bit Slice4
  assign Bit_Slice4_out1 = Abs_out1[10:0];



  // <S1>/Data Type S10
  assign Data_Type_S10_out1 = {21'b0, Bit_Slice4_out1};



  // <S137>/UM_1
  assign UM_110_in0 =  - ({Data_Type_S10_out1[31], Data_Type_S10_out1});
  assign UM_1_out1_1 = UM_110_in0[31:0];



  // <S137>/CT0_1
  assign CT0_1_out1 = Add_out1 >= 33'sh000000000;



  // <S137>/Switch31
  assign Switch31_out1_1 = (CT0_1_out1 == 1'b0 ? UM_1_out1_1 :
              Data_Type_S10_out1);



  // <S119>/Switch15
  assign signal2_28 = (CT26_out1 == 1'b0 ? s1z5_out1_12 :
              Switch31_out1_1);



  assign signal2_29 = signal2_28;

  // <S119>/s1z5
  // 
  // <S1>/Goto201
  // 
  // <S1>/From357
  always @(posedge g_clk)
    begin : s1z52_process
      if (Rst_n == 1'b0) begin
        s1z5_out1_12 <= 32'sb00000000000000000000000000000000;
      end
      else begin
        s1z5_out1_12 <= signal2_29;
      end
    end



  // <S120>/Switch15
  assign signal2_30 = (Or8_out1 == 1'b0 ? s1z5_out1_13 :
              Switch31_out1);



  assign signal2_31 = signal2_30;

  // <S120>/s1z5
  // 
  // <S1>/Goto223
  // 
  // <S1>/From420
  always @(posedge g_clk)
    begin : s1z53_process
      if (Rst_n == 1'b0) begin
        s1z5_out1_13 <= 32'sb00000000000000000000000000000000;
      end
      else begin
        s1z5_out1_13 <= signal2_31;
      end
    end



  // <S121>/Switch15
  assign signal2_32 = (Or9_out1 == 1'b0 ? s1z5_out1_14 :
              Switch31_out1);



  assign signal2_33 = signal2_32;

  // <S121>/s1z5
  // 
  // <S1>/Goto225
  // 
  // <S1>/From428
  always @(posedge g_clk)
    begin : s1z54_process
      if (Rst_n == 1'b0) begin
        s1z5_out1_14 <= 32'sb00000000000000000000000000000000;
      end
      else begin
        s1z5_out1_14 <= signal2_33;
      end
    end



  // <S122>/Switch15
  assign signal2_34 = (Or10_out1 == 1'b0 ? s1z5_out1_15 :
              Switch31_out1);



  assign signal2_35 = signal2_34;

  // <S122>/s1z5
  // 
  // <S1>/Goto228
  // 
  // <S1>/From434
  always @(posedge g_clk)
    begin : s1z55_process
      if (Rst_n == 1'b0) begin
        s1z5_out1_15 <= 32'sb00000000000000000000000000000000;
      end
      else begin
        s1z5_out1_15 <= signal2_35;
      end
    end



  // <S1>/Bit Slice11
  assign Bit_Slice11_out1 = Abs_out1[19:0];



  // <S1>/DTC_b32_0
  assign DTC_b32_0_out1 = {12'b0, Bit_Slice11_out1};



  // <S136>/UM_1
  assign UM_17_in0 =  - ({DTC_b32_0_out1[31], DTC_b32_0_out1});
  assign UM_1_out1_2 = UM_17_in0[31:0];



  // <S136>/CT0_1
  assign CT0_1_out1_1 = Add_out1 >= 33'sh000000000;



  // <S136>/Switch31
  assign Switch31_out1 = (CT0_1_out1_1 == 1'b0 ? UM_1_out1_2 :
              DTC_b32_0_out1);



  // <S123>/Switch15
  assign signal2_36 = (Or11_out1 == 1'b0 ? s1z5_out1_16 :
              Switch31_out1);



  assign signal2_37 = signal2_36;

  // <S123>/s1z5
  // 
  // <S1>/Goto230
  // 
  // <S1>/From444
  always @(posedge g_clk)
    begin : s1z56_process
      if (Rst_n == 1'b0) begin
        s1z5_out1_16 <= 32'sb00000000000000000000000000000000;
      end
      else begin
        s1z5_out1_16 <= signal2_37;
      end
    end



  // <S1>/Bit Slice2
  assign Bit_Slice2_out1 = Abs_out1[8:0];



  // <S1>/Data Type S7
  assign Data_Type_S7_out1 = {23'b0, Bit_Slice2_out1};



  // <S138>/UM_1
  assign UM_111_in0 =  - ({Data_Type_S7_out1[31], Data_Type_S7_out1});
  assign UM_1_out1_3 = UM_111_in0[31:0];



  // <S138>/CT0_1
  assign CT0_1_out1_2 = Add_out1 >= 33'sh000000000;



  // <S138>/Switch31
  assign Switch31_out1_2 = (CT0_1_out1_2 == 1'b0 ? UM_1_out1_3 :
              Data_Type_S7_out1);



  // <S125>/Switch15
  assign signal2_38 = (CT27_out1 == 1'b0 ? s1z5_out1_17 :
              Switch31_out1_2);



  assign signal2_39 = signal2_38;

  // <S125>/s1z5
  // 
  // <S1>/Goto269
  // 
  // <S1>/From489
  always @(posedge g_clk)
    begin : s1z58_process
      if (Rst_n == 1'b0) begin
        s1z5_out1_17 <= 32'sb00000000000000000000000000000000;
      end
      else begin
        s1z5_out1_17 <= signal2_39;
      end
    end



  // <S125>/Switch24
  assign signal3_1 = (CT27_out1 == 1'b0 ? s_9 :
              s1z5_out1_17);



  assign s_10 = signal3_1;

  // <S123>/Switch24
  assign signal3_2 = (Or11_out1 == 1'b0 ? s_10 :
              s1z5_out1_16);



  assign s_11 = signal3_2;

  // <S122>/Switch24
  assign signal3_3 = (Or10_out1 == 1'b0 ? s_11 :
              s1z5_out1_15);



  assign s_12 = signal3_3;

  // <S121>/Switch24
  assign signal3_4 = (Or9_out1 == 1'b0 ? s_12 :
              s1z5_out1_14);



  assign s_13 = signal3_4;

  // <S120>/Switch24
  assign signal3_5 = (Or8_out1 == 1'b0 ? s_13 :
              s1z5_out1_13);



  assign s_14 = signal3_5;

  // <S119>/Switch24
  assign signal3_6 = (CT26_out1 == 1'b0 ? s_14 :
              s1z5_out1_12);



  assign s_15 = signal3_6;

  // <S134>/Switch24
  assign signal3_7 = (Or7_out1 == 1'b0 ? s_15 :
              s1z5_out1_11);



  assign s_16 = signal3_7;

  // <S133>/Switch24
  assign signal3_8 = (Or6_out1 == 1'b0 ? s_16 :
              s1z5_out1_10);



  assign s_17 = signal3_8;

  // <S132>/Switch24
  assign signal3_9 = (Or5_out1 == 1'b0 ? s_17 :
              s1z5_out1_9);



  assign s_18 = signal3_9;

  // <S131>/Switch24
  assign signal3_10 = (Or4_out1 == 1'b0 ? s_18 :
              s1z5_out1_8);



  assign s_19 = signal3_10;

  // <S117>/Switch24
  assign signal3_11 = (CT0_out1 == 1'b0 ? s_19 :
              B25_out1_signal3);



  assign s_20 = signal3_11;

  // <S130>/Switch24
  assign signal3_12 = (CT10_out1 == 1'b0 ? s_20 :
              s1z5_out1_1);



  assign s_21 = signal3_12;

  // <S129>/Switch24
  assign signal3_13 = (CT9_out1 == 1'b0 ? s_21 :
              s1z5_out1_6);



  assign s_22 = signal3_13;

  // <S128>/Switch24
  assign signal3_14 = (CT8_out1 == 1'b0 ? s_22 :
              B22_out1_signal3);



  assign s_23 = signal3_14;

  // <S127>/Switch24
  assign signal3_15 = (CT3_out1 == 1'b0 ? s_23 :
              s1z5_out1_5);



  assign s_24 = signal3_15;

  // <S118>/Switch24
  assign signal3_16 = (Or3_out1 == 1'b0 ? s_24 :
              B24_out1_signal3);



  assign s_25 = signal3_16;

  // <S124>/Switch24
  assign signal3_17 = (Or12_out1 == 1'b0 ? s_25 :
              B56_out1_signal3);



  assign signal3_18 = signal3_17;

  // <S117>/Switch15
  // 
  // <S117>/Switch15
  // 
  // <S117>/Switch15
  // 
  // <S117>/Demux2
  assign signal1_5 = (CT0_out1 == 1'b0 ? s1z4_out1 :
              Switch28_out1);



  assign signal1_6 = signal1_5;

  // <S117>/s1z4
  // 
  // <S1>/Goto172
  // 
  // <S1>/From352
  // 
  // <S117>/B10
  // 
  // <S1>/pro_sub_0
  // 
  // <S117>/Switch15
  // 
  // <S1>/Goto172
  // 
  // <S1>/From389
  always @(posedge g_clk)
    begin : s1z4_process
      if (Rst_n == 1'b0) begin
        s1z4_out1 <= 16'sb0000000000000000;
      end
      else begin
        s1z4_out1 <= signal1_6;
      end
    end



  assign B56_out1_signal2 = s1z4_out1;

  assign B24_out1_signal2 = Dly_5_out1;

  assign B22_out1_signal2 = DLY_0_out1_2;

  // <S93>/add_SW_1
  assign add_SW_1_out1 = (CT8_out1 == 1'b0 ? DLY_0_out1_3 :
              DTC_0_out1);



  // <S93>/DLY_0
  // 
  // <S1>/Goto171
  // 
  // <S1>/From349
  always @(posedge g_clk)
    begin : DLY_012_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_3 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_3 <= add_SW_1_out1;
      end
    end



  assign B25_out1_signal2 = DLY_0_out1_3;

  // <S104>/add_SW_1
  assign add_SW_1_out1_1 = (CT1_out1 == 1'b0 ? DLY_0_out1_2 :
              DTC_0_out1);



  // <S104>/DLY_0
  // 
  // <S1>/Goto156
  // 
  // <S1>/From336
  // 
  // <S1>/Goto156
  // 
  // <S1>/From512
  // 
  // <S1>/Goto156
  // 
  // <S1>/From512
  always @(posedge g_clk)
    begin : DLY_023_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_2 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_2 <= add_SW_1_out1_1;
      end
    end



  // <S126>/Switch24
  assign signal2_40 = (CT29_out1 == 1'b0 ? DLY_0_out1_2 :
              DLY_0_out1_2);



  assign s_26 = signal2_40;

  // <S125>/Switch24
  assign signal2_41 = (CT27_out1 == 1'b0 ? s_26 :
              Switch17_out1_1);



  assign s_27 = signal2_41;

  // <S123>/Switch24
  assign signal2_42 = (Or11_out1 == 1'b0 ? s_27 :
              Resp_Ky_b16);



  assign s_28 = signal2_42;

  // <S122>/Switch24
  assign signal2_43 = (Or10_out1 == 1'b0 ? s_28 :
              Resp_Kx_b16);



  assign s_29 = signal2_43;

  // <S121>/Switch24
  assign signal2_44 = (Or9_out1 == 1'b0 ? s_29 :
              Resp_Ky_b16);



  assign s_30 = signal2_44;

  // <S120>/Switch24
  assign signal2_45 = (Or8_out1 == 1'b0 ? s_30 :
              Resp_Kx_b16);



  assign s_31 = signal2_45;

  // <S119>/Switch24
  assign signal2_46 = (CT26_out1 == 1'b0 ? s_31 :
              fast_Inr_K_b16);



  assign s_32 = signal2_46;

  // <S134>/Switch24
  assign signal2_47 = (Or7_out1 == 1'b0 ? s_32 :
              Resp_Ky_b16);



  assign s_33 = signal2_47;

  // <S133>/Switch24
  assign signal2_48 = (Or6_out1 == 1'b0 ? s_33 :
              Resp_Kx_b16);



  assign s_34 = signal2_48;

  // <S132>/Switch24
  assign signal2_49 = (Or5_out1 == 1'b0 ? s_34 :
              Resp_Ky_b16);



  assign s_35 = signal2_49;

  // <S131>/Switch24
  assign signal2_50 = (Or4_out1 == 1'b0 ? s_35 :
              Resp_Kx_b16);



  assign s_36 = signal2_50;

  // <S117>/Switch24
  assign signal2_51 = (CT0_out1 == 1'b0 ? s_36 :
              B25_out1_signal2);



  assign s_37 = signal2_51;

  // <S130>/Switch24
  assign signal2_52 = (CT10_out1 == 1'b0 ? s_37 :
              Kvi_b16);



  assign s_38 = signal2_52;

  // <S129>/Switch24
  assign signal2_53 = (CT9_out1 == 1'b0 ? s_38 :
              Kv_I_b16);



  assign s_39 = signal2_53;

  // <S128>/Switch24
  assign signal2_54 = (CT8_out1 == 1'b0 ? s_39 :
              B22_out1_signal2);



  assign s_40 = signal2_54;

  // <S127>/Switch24
  assign signal2_55 = (CT3_out1 == 1'b0 ? s_40 :
              fast_Kf_P_inv_b16);



  assign s_41 = signal2_55;

  // <S118>/Switch24
  assign signal2_56 = (Or3_out1 == 1'b0 ? s_41 :
              B24_out1_signal2);



  assign s_42 = signal2_56;

  // <S124>/Switch24
  assign signal2_57 = (Or12_out1 == 1'b0 ? s_42 :
              B56_out1_signal2);



  assign signal2_58 = signal2_57;

  // <S3>/Goto106
  // 
  // <S3>/In12
  assign signal2_59 = Unit_Delay30_out1;

  // <S3>/Simple Dual Port RAM2
  SimpDualPortRAM_Wrapper_generic   #  (.AddrWidth(10),
                                        .DataWidth(16)
                                        )
                                    u_Simple_Dual_Port_RAM2   (.g_clk(g_clk),
                                                               .wr_din(Switch84_out1),
                                                               .wr_addr(Add11_out1_1),
                                                               .wr_en(fast_Pulse),
                                                               .rd_addr(Add12_out1_1),
                                                               .rd_dout(Simple_Dual_Port_RAM2_out1)
                                                               );

  // <S3>/Switch98
  assign Switch98_out1 = (fast_Pulse == 1'b0 ? Constant35_out1_dtc_3 :
              Simple_Dual_Port_RAM2_out1);



  // <S111>/add_SW_1
  assign add_SW_1_out1_2 = (CT0_out1 == 1'b0 ? DLY_0_out1_4 :
              DTC_0_out1);



  // <S111>/DLY_0
  // 
  // <S1>/Goto146
  // 
  // <S1>/From385
  // 
  // <S1>/Goto146
  // 
  // <S1>/From53
  // 
  // <S3>/Goto9
  // 
  // <S3>/From1
  // 
  // <S3>/B23
  // 
  // <S3>/Goto104
  // 
  // <S3>/From5
  always @(posedge g_clk)
    begin : DLY_030_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_4 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_4 <= add_SW_1_out1_2;
      end
    end



  // <S3>/Bus Selector6
  // 
  // <S3>/Goto103
  // 
  // <S3>/In13
  assign signal1_7 = DLY_0_out1_4;

  // <S3>/Switch84
  assign Switch84_out1 = (switch_compare_1_3 == 1'b0 ? Constant34_out1_dtc_1 :
              signal1_7);



  // <S3>/Switch97
  assign Switch97_out1 = (fast_Pulse == 1'b0 ? Constant35_out1_dtc_2 :
              Switch84_out1);



  assign Add7_stage21_1 = {{11{Switch97_out1[15]}}, Switch97_out1};
  assign Add7_stage21_2 = {{11{Switch98_out1[15]}}, Switch98_out1};
  assign Add7_op_stage2 = Add7_stage21_1 - Add7_stage21_2;



  // <S3>/Add7
  assign Add7_stage31_1 = {signal2_59[25], signal2_59};
  assign Add7_stage31_add_temp = Add7_op_stage2 + Add7_stage31_1;
  assign Add7_out1 = Add7_stage31_add_temp[25:0];



  // <S3>/Switch79
  // 
  // <S3>/Goto95
  // 
  // <S3>/From167
  assign Switch79_out1 = (switch_compare_1_2 == 1'b0 ? Constant26_out1_dtc_1 :
              Add7_out1);



  // <S3>/Unit Delay30
  // 
  // <S3>/Goto101
  // 
  // <S3>/From175
  // 
  // <S3>/Goto101
  // 
  // <S3>/From204
  always @(posedge g_clk)
    begin : Unit_Delay301_process
      if (Rst_n == 1'b0) begin
        Unit_Delay30_out1 <= 26'sb00000000000000000000000000;
      end
      else begin
        Unit_Delay30_out1 <= Switch79_out1;
      end
    end



  // <S3>/Bit Slice6
  assign Bit_Slice6_out1 = Unit_Delay30_out1[25:10];



  // <S3>/Data Type S11
  // 
  // <S3>/Goto109
  // 
  // <S3>/From
  // 
  // <S1>/Goto43
  // 
  // <S1>/From230
  // 
  // <S1>/B23
  // 
  // <S127>/Switch24
  // 
  // <S3>/Goto109
  // 
  // <S3>/From
  // 
  // <S1>/Goto43
  // 
  // <S1>/From384
  assign Data_Type_S11_out1 = Bit_Slice6_out1;



  // <S82>/add_SW_1
  assign add_SW_1_out1_3 = (CT4_out1 == 1'b0 ? DLY_0_out1_5 :
              DTC_0_out1);



  // <S82>/DLY_0
  // 
  // <S1>/Goto177
  // 
  // <S1>/From361
  // 
  // <S1>/B21
  // 
  // <S129>/Switch24
  // 
  // <S1>/Goto177
  // 
  // <S1>/From363
  always @(posedge g_clk)
    begin : DLY_01_1_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_5 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_5 <= add_SW_1_out1_3;
      end
    end



  // <S1>/Switch16
  // 
  // <S1>/B29
  // 
  // <S130>/Switch24
  assign Switch16_out1_2 = (VF0PQ1 == 1'b0 ? 16'sb0000000000000000 :
              DLY_0_out1_5);



  // <S91>/add_SW_1
  assign add_SW_1_out1_4 = (CT15_out1 == 1'b0 ? DLY_0_out1_6 :
              DTC_0_out1);



  // <S91>/DLY_0
  // 
  // <S1>/Goto120
  // 
  // <S1>/From235
  always @(posedge g_clk)
    begin : DLY_010_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_6 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_6 <= add_SW_1_out1_4;
      end
    end



  // <S1>/Switch44
  // 
  // <S1>/B11
  // 
  // <S131>/Switch24
  assign Switch44_out1 = (CtlLoopOn == 1'b0 ? 16'sb0000000000000000 :
              DLY_0_out1_6);



  // <S95>/add_SW_1
  assign add_SW_1_out1_5 = (CT25_out1 == 1'b0 ? DLY_0_out1_7 :
              DTC_0_out1);



  // <S95>/DLY_0
  // 
  // <S1>/Goto133
  // 
  // <S1>/From274
  // 
  // <S1>/B39
  // 
  // <S133>/Switch24
  always @(posedge g_clk)
    begin : DLY_014_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_7 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_7 <= add_SW_1_out1_5;
      end
    end



  // <S99>/add_SW_1
  assign add_SW_1_out1_6 = (CT38_out1 == 1'b0 ? DLY_0_out1_8 :
              DTC_0_out1);



  // <S99>/DLY_0
  // 
  // <S1>/Goto198
  // 
  // <S1>/From344
  // 
  // <S1>/B43
  // 
  // <S119>/Switch24
  always @(posedge g_clk)
    begin : DLY_018_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_8 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_8 <= add_SW_1_out1_6;
      end
    end



  // <S101>/add_SW_1
  assign add_SW_1_out1_7 = (CT44_out1 == 1'b0 ? DLY_0_out1_9 :
              DTC_0_out1);



  // <S101>/DLY_0
  // 
  // <S1>/Goto210
  // 
  // <S1>/From418
  always @(posedge g_clk)
    begin : DLY_020_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_9 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_9 <= add_SW_1_out1_7;
      end
    end



  // <S1>/Switch45
  // 
  // <S1>/B51
  // 
  // <S120>/Switch24
  assign Switch45_out1 = (CtlLoopOn == 1'b0 ? 16'sb0000000000000000 :
              DLY_0_out1_9);



  // <S105>/add_SW_1
  assign add_SW_1_out1_8 = (CT45_out1 == 1'b0 ? DLY_0_out1_10 :
              DTC_0_out1);



  // <S105>/DLY_0
  // 
  // <S1>/Goto216
  // 
  // <S1>/From438
  // 
  // <S1>/B53
  // 
  // <S122>/Switch24
  always @(posedge g_clk)
    begin : DLY_024_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_10 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_10 <= add_SW_1_out1_8;
      end
    end



  // <S2>/Goto106
  // 
  // <S2>/In12
  assign signal2_60 = Unit_Delay30_out1_1;

  // <S2>/Simple Dual Port RAM2
  // 
  // <S3>/Goto2
  // 
  // <S3>/From50
  // 
  // <S3>/Goto1
  // 
  // <S3>/From170
  // 
  // <S1>/Goto1
  // 
  // <S1>/From33
  // 
  // <S1>/From137
  // 
  // <S1>/Goto10
  // 
  // <S1>/From364
  // 
  // <S1>/Goto105
  // 
  // <S1>/From193
  // 
  // <S1>/Goto106
  // 
  // <S1>/From192
  // 
  // <S1>/Goto107
  // 
  // <S1>/From339
  // 
  // <S1>/From61
  // 
  // <S1>/Goto108
  // 
  // <S1>/From484
  // 
  // <S1>/Goto109
  // 
  // <S1>/From519
  // 
  // <S1>/Goto110
  // 
  // <S1>/From506
  // 
  // <S1>/Goto111
  // 
  // <S1>/From504
  // 
  // <S1>/Goto112
  // 
  // <S1>/From507
  // 
  // <S1>/Goto113
  // 
  // <S1>/From515
  // 
  // <S1>/Goto116
  // 
  // <S1>/From472
  // 
  // <S1>/Goto117
  // 
  // <S1>/From219
  // 
  // <S1>/Goto123
  // 
  // <S1>/From198
  // 
  // <S80>/Goto123
  // 
  // <S80>/From1
  // 
  // <S1>/Goto13
  // 
  // <S1>/From125
  // 
  // <S1>/Goto132
  // 
  // <S1>/From343
  // 
  // <S1>/Goto14
  // 
  // <S1>/From203
  // 
  // <S1>/Goto141
  // 
  // <S1>/From340
  // 
  // <S1>/Goto142
  // 
  // <S1>/From323
  // 
  // <S1>/Goto147
  // 
  // <S1>/From485
  // 
  // <S1>/Goto15
  // 
  // <S1>/From132
  // 
  // <S1>/From135
  // 
  // <S1>/From308
  // 
  // <S1>/From22
  // 
  // <S1>/Goto151
  // 
  // <S1>/From329
  // 
  // <S1>/Goto152
  // 
  // <S1>/From328
  // 
  // <S1>/Goto153
  // 
  // <S1>/From326
  // 
  // <S1>/Goto160
  // 
  // <S1>/From356
  // 
  // <S1>/Goto161
  // 
  // <S1>/From227
  // 
  // <S1>/Goto162
  // 
  // <S1>/From365
  // 
  // <S1>/Goto163
  // 
  // <S1>/From239
  // 
  // <S1>/Goto164
  // 
  // <S1>/From112
  // 
  // <S1>/Goto165
  // 
  // <S1>/From345
  // 
  // <S1>/Goto166
  // 
  // <S1>/From360
  // 
  // <S1>/Goto196
  // 
  // <S1>/From309
  // 
  // <S1>/Goto2
  // 
  // <S1>/From207
  // 
  // <S1>/Goto208
  // 
  // <S1>/From464
  // 
  // <S1>/Goto209
  // 
  // <S1>/From386
  // 
  // <S1>/Goto26
  // 
  // <S1>/From322
  // 
  // <S1>/Goto260
  // 
  // <S1>/From189
  // 
  // <S1>/Goto261
  // 
  // <S1>/From190
  // 
  // <S1>/Goto263
  // 
  // <S1>/From495
  // 
  // <S1>/Goto264
  // 
  // <S1>/From514
  // 
  // <S1>/Goto265
  // 
  // <S1>/From195
  // 
  // <S1>/Goto266
  // 
  // <S1>/From194
  // 
  // <S1>/Goto270
  // 
  // <S1>/From496
  // 
  // <S1>/Goto271
  // 
  // <S1>/From511
  // 
  // <S1>/Goto272
  // 
  // <S1>/From490
  // 
  // <S1>/Goto276
  // 
  // <S1>/From509
  // 
  // <S1>/Goto279
  // 
  // <S1>/From487
  // 
  // <S1>/Goto283
  // 
  // <S1>/From47
  // 
  // <S1>/Goto30
  // 
  // <S1>/From25
  // 
  // <S1>/Goto32
  // 
  // <S1>/From128
  // 
  // <S1>/Goto33
  // 
  // <S1>/From320
  // 
  // <S1>/Goto44
  // 
  // <S1>/From324
  // 
  // <S1>/Goto47
  // 
  // <S1>/From325
  // 
  // <S1>/Goto5
  // 
  // <S1>/From31
  // 
  // <S1>/Goto54
  // 
  // <S1>/From200
  // 
  // <S1>/Goto62
  // 
  // <S1>/From486
  // 
  // <S1>/Goto65
  // 
  // <S1>/From26
  // 
  // <S1>/Goto72
  // 
  // <S1>/From468
  // 
  // <S1>/Goto8
  // 
  // <S1>/From129
  // 
  // <S1>/Goto9
  // 
  // <S1>/From362
  // 
  // <S1>/B13
  // 
  // <S1>/B15
  // 
  // <S1>/B22
  // 
  // <S1>/B25
  // 
  // <S1>/B42
  // 
  // <S1>/B45
  // 
  // <S91>/add_SW_0
  // 
  // <S99>/add_SW_0
  // 
  // <S101>/add_SW_0
  // 
  // <S113>/add_SW_0
  // 
  // <S117>/Switch24
  // 
  // <S128>/Switch24
  // 
  // <S1>/Goto107
  // 
  // <S1>/From339
  // 
  // <S1>/From61
  // 
  // <S1>/Goto116
  // 
  // <S1>/From503
  // 
  // <S1>/Goto116
  // 
  // <S1>/From48
  // 
  // <S1>/Goto117
  // 
  // <S1>/From482
  // 
  // <S1>/Goto117
  // 
  // <S1>/From475
  // 
  // <S1>/Goto13
  // 
  // <S1>/From462
  // 
  // <S1>/Goto13
  // 
  // <S1>/From457
  // 
  // <S1>/Goto13
  // 
  // <S1>/From448
  // 
  // <S1>/Goto13
  // 
  // <S1>/From381
  // 
  // <S1>/Goto13
  // 
  // <S1>/From28
  // 
  // <S1>/Goto13
  // 
  // <S1>/From143
  // 
  // <S1>/Goto141
  // 
  // <S1>/From340
  // 
  // <S1>/Goto15
  // 
  // <S1>/From132
  // 
  // <S1>/From135
  // 
  // <S1>/From308
  // 
  // <S1>/From304
  // 
  // <S1>/Goto15
  // 
  // <S1>/From132
  // 
  // <S1>/From135
  // 
  // <S1>/From308
  // 
  // <S1>/From273
  // 
  // <S1>/Goto152
  // 
  // <S1>/From331
  // 
  // <S1>/Goto153
  // 
  // <S1>/From332
  // 
  // <S1>/B9
  // 
  // <S110>/add_SW_0
  // 
  // <S1>/Goto153
  // 
  // <S1>/From330
  // 
  // <S1>/B8
  // 
  // <S109>/add_SW_0
  // 
  // <S1>/Goto161
  // 
  // <S1>/From436
  // 
  // <S1>/Goto161
  // 
  // <S1>/From422
  // 
  // <S1>/Goto161
  // 
  // <S1>/From351
  // 
  // <S1>/B56
  // 
  // <S124>/Switch24
  // 
  // <S1>/Goto161
  // 
  // <S1>/From271
  // 
  // <S1>/Goto163
  // 
  // <S1>/From442
  // 
  // <S1>/Goto163
  // 
  // <S1>/From429
  // 
  // <S1>/Goto163
  // 
  // <S1>/From358
  // 
  // <S1>/B24
  // 
  // <S118>/Switch24
  // 
  // <S1>/Goto163
  // 
  // <S1>/From278
  // 
  // <S1>/Goto164
  // 
  // <S1>/From51
  // 
  // <S1>/Goto164
  // 
  // <S1>/From354
  // 
  // <S1>/Goto164
  // 
  // <S1>/From338
  // 
  // <S1>/Goto164
  // 
  // <S1>/From201
  // 
  // <S1>/Goto164
  // 
  // <S1>/From199
  // 
  // <S1>/Goto164
  // 
  // <S1>/From130
  // 
  // <S1>/Goto2
  // 
  // <S1>/From50
  // 
  // <S1>/Goto2
  // 
  // <S1>/From46
  // 
  // <S1>/Goto2
  // 
  // <S1>/From44
  // 
  // <S1>/Goto2
  // 
  // <S1>/From295
  // 
  // <S1>/Goto2
  // 
  // <S1>/From231
  // 
  // <S1>/Goto2
  // 
  // <S1>/From218
  // 
  // <S1>/Goto2
  // 
  // <S1>/From214
  // 
  // <S1>/Goto2
  // 
  // <S1>/From211
  // 
  // <S1>/Goto2
  // 
  // <S1>/From208
  // 
  // <S1>/Goto209
  // 
  // <S1>/From387
  // 
  // <S1>/Goto260
  // 
  // <S1>/From66
  // 
  // <S1>/Goto260
  // 
  // <S1>/From377
  // 
  // <S1>/Goto260
  // 
  // <S1>/From367
  // 
  // <S1>/Goto261
  // 
  // <S1>/From191
  // 
  // <S1>/Goto272
  // 
  // <S1>/From498
  // 
  // <S1>/Goto276
  // 
  // <S1>/From510
  // 
  // <S1>/Goto279
  // 
  // <S1>/From520
  // 
  // <S1>/Goto279
  // 
  // <S1>/From518
  // 
  // <S1>/Goto279
  // 
  // <S1>/From517
  // 
  // <S1>/Goto279
  // 
  // <S1>/From508
  // 
  // <S1>/Goto279
  // 
  // <S1>/From505
  // 
  // <S1>/Goto283
  // 
  // <S1>/From60
  // 
  // <S1>/Goto54
  // 
  // <S1>/From213
  // 
  // <S3>/Goto2
  // 
  // <S3>/From50
  // 
  // <S3>/Goto1
  // 
  // <S3>/From170
  // 
  // <S3>/Goto2
  // 
  // <S3>/From50
  // 
  // <S3>/Goto1
  // 
  // <S3>/From431
  // 
  // <S1>/Goto30
  // 
  // <S1>/From25
  // 
  // <S1>/Goto32
  // 
  // <S1>/From128
  // 
  // <S1>/Goto153
  // 
  // <S1>/From332
  // 
  // <S1>/B9
  // 
  // <S110>/add_SW_0
  SimpDualPortRAM_Wrapper_generic   #  (.AddrWidth(10),
                                        .DataWidth(16)
                                        )
                                    u_Simple_Dual_Port_RAM2_1   (.g_clk(g_clk),
                                                                 .wr_din(Switch84_out1_1),
                                                                 .wr_addr(Add11_out1),
                                                                 .wr_en(Switch56_out1),
                                                                 .rd_addr(Add12_out1),
                                                                 .rd_dout(Simple_Dual_Port_RAM2_out1_1)
                                                                 );

  // <S2>/Switch98
  assign Switch98_out1_1 = (Switch56_out1 == 1'b0 ? Constant35_out1_dtc_1 :
              Simple_Dual_Port_RAM2_out1_1);



  // <S1>/Add10
  // 
  // <S1>/Goto115
  // 
  // <S1>/From217
  // 
  // <S1>/Goto115
  // 
  // <S1>/From310
  assign Add10_1 = {DLY_0_out1_11[17], DLY_0_out1_11};
  assign Add10_2 = {{3{slow_Ffr_db_b16[15]}}, slow_Ffr_db_b16};
  assign Add10_sub_temp = Add10_1 - Add10_2;
  assign Add10_out1 = Add10_sub_temp[17:0];



  // <S1>/RO_5
  // 
  // <S1>/Goto281
  // 
  // <S1>/From206
  assign RO_5_relop1 = w_b18 < Add10_out1;



  // <S1>/Switch18
  assign Switch18_out1 = (RO_5_relop1 == 1'b0 ? w_b18 :
              Add10_out1);



  // <S115>/SW_1
  assign SW_1_out1_1 = (Or4_out1_1 == 1'b0 ? Dly_3_out1 :
              DLY_0_out1_12);



  // <S115>/Dly_3
  // 
  // <S1>/Goto38
  // 
  // <S1>/From126
  // 
  // <S1>/From348
  always @(posedge g_clk)
    begin : Dly_3_process
      if (Rst_n == 1'b0) begin
        Dly_3_out1 <= 12'sb000000000000;
      end
      else begin
        Dly_3_out1 <= SW_1_out1_1;
      end
    end



  // <S93>/add_SW_0
  assign signal2_61 = (CT8_out1 == 1'b0 ? s_8 :
              Dly_3_out1);



  assign s_43 = signal2_61;

  // <S82>/add_SW_0
  assign signal2_62 = (CT4_out1 == 1'b0 ? s_43 :
              UM_4_out1);



  assign s_44 = signal2_62;

  // <S81>/add_SW_0
  assign signal2_63 = (CT3_out1 == 1'b0 ? s_44 :
              UM_3_out1);



  assign signal2_64 = signal2_63;

  // <S1>/DTC_b18_4
  assign DTC_b18_4_out1 = {{6{signal2_64[11]}}, signal2_64};



  // <S127>/Switch15
  // 
  // <S127>/Switch15
  // 
  // <S127>/Switch15
  // 
  // <S127>/Demux2
  assign signal1_8 = (CT3_out1 == 1'b0 ? s1z4_out1_1 :
              Switch28_out1);



  assign signal1_9 = signal1_8;

  // <S127>/s1z4
  // 
  // <S127>/B10
  // 
  // <S1>/pro_sub_2
  // 
  // <S127>/Switch15
  always @(posedge g_clk)
    begin : s1z410_process
      if (Rst_n == 1'b0) begin
        s1z4_out1_1 <= 16'sb0000000000000000;
      end
      else begin
        s1z4_out1_1 <= signal1_9;
      end
    end



  // <S68>/RO16
  assign RO162_relop1 = fast_VSGPLimit_b16 > s1z4_out1_1;



  // <S68>/Switch16
  assign Switch16_out1_3 = (RO162_relop1 == 1'b0 ? fast_VSGPLimit_b16 :
              s1z4_out1_1);



  // <S68>/RO1
  // 
  // <S1>/Staturation10
  assign RO19_relop1 = Switch16_out1_3 > UM_19_out1;



  // <S68>/Switch17
  // 
  // <S1>/Goto148
  // 
  // <S1>/From209
  // 
  // <S1>/Goto148
  // 
  // <S1>/From221
  // 
  // <S1>/Goto148
  // 
  // <S1>/From341
  assign Switch17_out1_2 = (RO19_relop1 == 1'b0 ? UM_19_out1 :
              Switch16_out1_3);



  // <S1>/Switch26
  assign Switch26_out1 = (Ffr_En == 1'b0 ? 16'sb0000000000000000 :
              Switch17_out1_2);



  // <S118>/Switch15
  // 
  // <S118>/Switch15
  // 
  // <S118>/Switch15
  // 
  // <S118>/Demux2
  assign signal1_10 = (Or3_out1 == 1'b0 ? s1z4_out1_2 :
              Switch28_out1_1);



  assign signal1_11 = signal1_10;

  // <S118>/s1z4
  // 
  // <S1>/Goto176
  // 
  // <S1>/From160
  // 
  // <S118>/B10
  // 
  // <S1>/pro_sub_1
  // 
  // <S118>/Switch15
  always @(posedge g_clk)
    begin : s1z41_process
      if (Rst_n == 1'b0) begin
        s1z4_out1_2 <= 16'sb0000000000000000;
      end
      else begin
        s1z4_out1_2 <= signal1_11;
      end
    end



  // <S1>/UM_7
  assign UM_7_in0 =  - ({s1z4_out1_2[15], s1z4_out1_2});
  assign UM_7_out1 = UM_7_in0[15:0];



  // <S86>/add_SW_1
  assign add_SW_1_out1_9 = (CT28_out1 == 1'b0 ? DLY_0_out1_13 :
              DTC_0_out1);



  // <S86>/DLY_0
  // 
  // <S1>/Goto173
  // 
  // <S1>/From136
  // 
  // <S1>/From187
  // 
  // <S1>/Goto173
  // 
  // <S1>/From136
  // 
  // <S1>/From37
  // 
  // <S1>/Goto173
  // 
  // <S1>/From136
  // 
  // <S1>/From6
  always @(posedge g_clk)
    begin : DLY_05_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_13 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_13 <= add_SW_1_out1_9;
      end
    end



  // <S115>/SW_7
  assign SW_7_out1 = (Or4_out1_1 == 1'b0 ? Dly_5_out1 :
              DLY_0_out1_13);



  // <S115>/Dly_5
  // 
  // <S1>/Goto39
  // 
  // <S1>/From133
  // 
  // <S1>/From150
  // 
  // <S1>/Goto39
  // 
  // <S1>/From133
  // 
  // <S1>/From353
  always @(posedge g_clk)
    begin : Dly_5_process
      if (Rst_n == 1'b0) begin
        Dly_5_out1 <= 16'sb0000000000000000;
      end
      else begin
        Dly_5_out1 <= SW_7_out1;
      end
    end



  // <S1>/RO9
  assign RO9_relop1 = Add_out1 > 33'sh000007FFF;



  // <S1>/Switch11
  assign Switch11_out1 = (RO9_relop1 == 1'b0 ? Add_out1 :
              33'sh000007FFF);



  // <S1>/RO8
  assign RO8_relop1 = Switch11_out1 < 33'sh1FFFF8000;



  // <S1>/Switch12
  assign Switch12_out1 = (RO8_relop1 == 1'b0 ? Switch11_out1 :
              33'sh1FFFF8000);



  // <S1>/Data Type Conversion1
  // 
  // <S1>/B33
  // 
  // <S1>/Goto94
  // 
  // <S1>/From481
  // 
  // <S128>/Switch15
  // 
  // <S1>/B33
  // 
  // <S1>/Goto94
  // 
  // <S1>/From513
  // 
  // <S126>/Switch15
  assign Data_Type_Conversion1_out1 = Switch12_out1[15:0];



  // <S128>/Switch15
  // 
  // <S128>/Switch15
  // 
  // <S128>/Switch15
  // 
  // <S128>/Demux2
  assign signal1_12 = (CT8_out1 == 1'b0 ? s1z4_out1_3 :
              Data_Type_Conversion1_out1);



  assign signal1_13 = signal1_12;

  // <S128>/s1z4
  // 
  // <S128>/B10
  // 
  // <S1>/pro_sub_3
  // 
  // <S128>/Switch15
  always @(posedge g_clk)
    begin : s1z411_process
      if (Rst_n == 1'b0) begin
        s1z4_out1_3 <= 16'sb0000000000000000;
      end
      else begin
        s1z4_out1_3 <= signal1_13;
      end
    end



  // <S67>/RO16
  assign RO161_relop1 = fast_VSGQLimit_b16 > s1z4_out1_3;



  // <S67>/Switch16
  assign Switch16_out1_4 = (RO161_relop1 == 1'b0 ? fast_VSGQLimit_b16 :
              s1z4_out1_3);



  // <S67>/RO1
  // 
  // <S1>/Staturation1
  assign RO18_relop1 = Switch16_out1_4 > UM_18_out1;



  // <S67>/Switch17
  // 
  // <S1>/Goto157
  // 
  // <S1>/From220
  // 
  // <S1>/Goto157
  // 
  // <S1>/From342
  assign Switch17_out1_3 = (RO18_relop1 == 1'b0 ? UM_18_out1 :
              Switch16_out1_4);



  // <S1>/Switch27
  assign Switch27_out1 = (Fvr_En == 1'b0 ? 16'sb0000000000000000 :
              Switch17_out1_3);



  // <S115>/SW_4
  assign SW_4_out1_1 = (Or4_out1_1 == 1'b0 ? Dly_2_out1 :
              DLY_0_out1_14);



  // <S115>/Dly_2
  // 
  // <S1>/Goto122
  // 
  // <S1>/From226
  // 
  // <S1>/B26
  // 
  // <S132>/Switch24
  // 
  // <S1>/Goto122
  // 
  // <S1>/From248
  always @(posedge g_clk)
    begin : Dly_2_process
      if (Rst_n == 1'b0) begin
        Dly_2_out1 <= 16'sb0000000000000000;
      end
      else begin
        Dly_2_out1 <= SW_4_out1_1;
      end
    end



  // <S132>/Switch15
  // 
  // <S132>/Switch15
  // 
  // <S132>/Switch15
  // 
  // <S132>/Demux2
  assign signal1_14 = (Or5_out1 == 1'b0 ? s1z4_out1_4 :
              Switch28_out1_2);



  assign signal1_15 = signal1_14;

  // <S132>/s1z4
  // 
  // <S1>/Goto126
  // 
  // <S1>/From251
  // 
  // <S132>/B10
  // 
  // <S1>/pro_sub_7
  // 
  // <S132>/Switch15
  always @(posedge g_clk)
    begin : s1z415_process
      if (Rst_n == 1'b0) begin
        s1z4_out1_4 <= 16'sb0000000000000000;
      end
      else begin
        s1z4_out1_4 <= signal1_15;
      end
    end



  // <S1>/UM_9
  assign UM_9_in0 =  - ({s1z4_out1_4[15], s1z4_out1_4});
  assign UM_9_out1 = UM_9_in0[15:0];



  // <S115>/SW_5
  assign SW_5_out1_2 = (Or4_out1_1 == 1'b0 ? Dly_4_out1_1 :
              DLY_0_out1_15);



  // <S115>/Dly_4
  // 
  // <S1>/Goto180
  // 
  // <S1>/From262
  // 
  // <S1>/Goto180
  // 
  // <S1>/From270
  // 
  // <S1>/B40
  // 
  // <S134>/Switch24
  always @(posedge g_clk)
    begin : Dly_4_process
      if (Rst_n == 1'b0) begin
        Dly_4_out1_1 <= 16'sb0000000000000000;
      end
      else begin
        Dly_4_out1_1 <= SW_5_out1_2;
      end
    end



  // <S134>/Switch15
  // 
  // <S134>/Switch15
  // 
  // <S134>/Switch15
  // 
  // <S134>/Demux2
  assign signal1_16 = (Or7_out1 == 1'b0 ? s1z4_out1_5 :
              Switch28_out1_2);



  assign signal1_17 = signal1_16;

  // <S134>/s1z4
  // 
  // <S1>/Goto174
  // 
  // <S1>/From265
  // 
  // <S134>/B10
  // 
  // <S1>/pro_sub_9
  // 
  // <S134>/Switch15
  always @(posedge g_clk)
    begin : s1z417_process
      if (Rst_n == 1'b0) begin
        s1z4_out1_5 <= 16'sb0000000000000000;
      end
      else begin
        s1z4_out1_5 <= signal1_17;
      end
    end



  // <S1>/UM_10
  assign UM_10_in0 =  - ({s1z4_out1_5[15], s1z4_out1_5});
  assign UM_10_out1 = UM_10_in0[15:0];



  // <S1>/Bit Slice5
  assign Bit_Slice5_out1 = Abs_out1[32:9];



  // <S1>/Data Type S4
  assign Data_Type_S4_out1 = $signed(Bit_Slice5_out1[22:0]);



  // <S1>/RO27
  assign RO27_relop1 = Data_Type_S4_out1 > 23'sb00000000111111111111111;



  // <S1>/Switch109
  assign Switch109_out1 = (RO27_relop1 == 1'b0 ? Data_Type_S4_out1 :
              23'sb00000000111111111111111);



  // <S1>/Data Type Conversion11
  assign Data_Type_Conversion11_out1 = Switch109_out1[15:0];



  // <S138>/UM_0
  assign UM_02_in0 =  - ({Data_Type_Conversion11_out1[15], Data_Type_Conversion11_out1});
  assign UM_0_out1_1 = UM_02_in0[15:0];



  // <S138>/CT0_0
  assign CT0_0_out1 = Add_out1 >= 33'sh000000000;



  // <S138>/Switch28
  // 
  // <S138>/B37
  // 
  // <S1>/sign_handle_2
  // 
  // <S1>/Goto73
  // 
  // <S1>/From466
  // 
  // <S1>/From151
  // 
  // <S117>/Switch15
  // 
  // <S138>/B37
  // 
  // <S1>/sign_handle_2
  // 
  // <S1>/Goto73
  // 
  // <S1>/From466
  // 
  // <S1>/From58
  // 
  // <S127>/Switch15
  // 
  // <S138>/B37
  // 
  // <S1>/sign_handle_2
  // 
  // <S1>/Goto73
  // 
  // <S1>/From466
  // 
  // <S1>/From497
  // 
  // <S125>/Switch15
  assign Switch28_out1 = (CT0_0_out1 == 1'b0 ? UM_0_out1_1 :
              Data_Type_Conversion11_out1);



  // <S125>/Switch15
  // 
  // <S125>/Switch15
  // 
  // <S125>/Switch15
  // 
  // <S125>/Demux2
  assign signal1_18 = (CT27_out1 == 1'b0 ? s1z4_out1_6 :
              Switch28_out1);



  assign signal1_19 = signal1_18;

  // <S125>/s1z4
  // 
  // <S125>/B10
  // 
  // <S1>/pro_sub_17
  // 
  // <S125>/Switch15
  always @(posedge g_clk)
    begin : s1z48_process
      if (Rst_n == 1'b0) begin
        s1z4_out1_6 <= 16'sb0000000000000000;
      end
      else begin
        s1z4_out1_6 <= signal1_19;
      end
    end



  // <S69>/RO16
  assign RO163_relop1 = slow_VSGPLimit_b16 > s1z4_out1_6;



  // <S69>/Switch16
  assign Switch16_out1_5 = (RO163_relop1 == 1'b0 ? slow_VSGPLimit_b16 :
              s1z4_out1_6);



  // <S69>/RO1
  // 
  // <S1>/Staturation11
  assign RO110_relop1 = Switch16_out1_5 > UM_16_out1;



  // <S69>/Switch17
  assign Switch17_out1_4 = (RO110_relop1 == 1'b0 ? UM_16_out1 :
              Switch16_out1_5);



  // <S1>/Switch49
  // 
  // <S1>/Goto267
  // 
  // <S1>/From500
  // 
  // <S1>/Goto267
  // 
  // <S1>/From500
  // 
  // <S1>/Goto267
  // 
  // <S1>/From501
  assign Switch49_out1_2 = (Ffr_En == 1'b0 ? 16'sb0000000000000000 :
              Switch17_out1_4);



  // <S84>/add_SW_1
  assign add_SW_1_out1_10 = (CT27_out1 == 1'b0 ? DLY_0_out1_16 :
              DTC_0_out1);



  // <S84>/DLY_0
  always @(posedge g_clk)
    begin : DLY_03_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_16 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_16 <= add_SW_1_out1_10;
      end
    end



  // <S1>/Subsystem
  Subsystem   u_Subsystem   (.In1(DLY_0_out1_16),  // int16
                             .In2(Switch49_out1_2),  // int16
                             .Out1(Subsystem_out1)  // int16
                             );

  // <S73>/RO16
  assign RO167_relop1 = ACDisPLimit_16 > Subsystem_out1;



  // <S73>/Switch16
  assign Switch16_out1_6 = (RO167_relop1 == 1'b0 ? ACDisPLimit_16 :
              Subsystem_out1);



  // <S73>/RO1
  // 
  // <S1>/Staturation2
  assign RO114_relop1 = Switch16_out1_6 > ACChgPLimit_16;



  // <S73>/Switch17
  // 
  // <S1>/Goto158
  // 
  // <S1>/From157
  // 
  // <S1>/Goto158
  // 
  // <S1>/From196
  assign Switch17_out1_5 = (RO114_relop1 == 1'b0 ? ACChgPLimit_16 :
              Switch16_out1_6);



  // <S115>/SW_6
  assign SW_6_out1_2 = (Or4_out1_1 == 1'b0 ? Dly_6_out1_1 :
              DLY_0_out1_17);



  // <S115>/Dly_6
  // 
  // <S1>/Goto234
  // 
  // <S1>/From398
  // 
  // <S1>/Goto234
  // 
  // <S1>/From421
  // 
  // <S1>/B52
  // 
  // <S121>/Switch24
  always @(posedge g_clk)
    begin : Dly_6_process
      if (Rst_n == 1'b0) begin
        Dly_6_out1_1 <= 16'sb0000000000000000;
      end
      else begin
        Dly_6_out1_1 <= SW_6_out1_2;
      end
    end



  // <S121>/Switch15
  // 
  // <S121>/Switch15
  // 
  // <S121>/Switch15
  // 
  // <S121>/Demux2
  assign signal1_20 = (Or9_out1 == 1'b0 ? s1z4_out1_7 :
              Switch28_out1_2);



  assign signal1_21 = signal1_20;

  // <S121>/s1z4
  // 
  // <S1>/Goto226
  // 
  // <S1>/From401
  // 
  // <S121>/B10
  // 
  // <S1>/pro_sub_12
  // 
  // <S121>/Switch15
  always @(posedge g_clk)
    begin : s1z44_process
      if (Rst_n == 1'b0) begin
        s1z4_out1_7 <= 16'sb0000000000000000;
      end
      else begin
        s1z4_out1_7 <= signal1_21;
      end
    end



  // <S1>/UM_15
  assign UM_15_in0 =  - ({s1z4_out1_7[15], s1z4_out1_7});
  assign UM_15_out1 = UM_15_in0[15:0];



  // <S115>/SW_8
  assign SW_8_out1 = (Or4_out1_1 == 1'b0 ? Dly_7_out1 :
              DLY_0_out1_18);



  // <S115>/Dly_7
  // 
  // <S1>/Goto235
  // 
  // <S1>/From410
  // 
  // <S1>/Goto235
  // 
  // <S1>/From435
  // 
  // <S1>/B54
  // 
  // <S123>/Switch24
  always @(posedge g_clk)
    begin : Dly_7_process
      if (Rst_n == 1'b0) begin
        Dly_7_out1 <= 16'sb0000000000000000;
      end
      else begin
        Dly_7_out1 <= SW_8_out1;
      end
    end



  // <S123>/Switch15
  // 
  // <S123>/Switch15
  // 
  // <S123>/Switch15
  // 
  // <S123>/Demux2
  assign signal1_22 = (Or11_out1 == 1'b0 ? s1z4_out1_8 :
              Switch28_out1_2);



  assign signal1_23 = signal1_22;

  // <S123>/s1z4
  // 
  // <S1>/Goto231
  // 
  // <S1>/From413
  // 
  // <S123>/B10
  // 
  // <S1>/pro_sub_14
  // 
  // <S123>/Switch15
  always @(posedge g_clk)
    begin : s1z46_process
      if (Rst_n == 1'b0) begin
        s1z4_out1_8 <= 16'sb0000000000000000;
      end
      else begin
        s1z4_out1_8 <= signal1_23;
      end
    end



  // <S1>/UM_14
  assign UM_14_in0 =  - ({s1z4_out1_8[15], s1z4_out1_8});
  assign UM_14_out1 = UM_14_in0[15:0];



  // <S108>/add_SW_0
  assign signal2_65 = (CT46_out1 == 1'b0 ? Switch47_out1 :
              Switch47_out1);



  assign s_45 = signal2_65;

  // <S107>/add_SW_0
  assign signal2_66 = (CT48_out1 == 1'b0 ? s_45 :
              UM_14_out1);



  assign s_46 = signal2_66;

  // <S106>/add_SW_0
  assign signal2_67 = (CT47_out1 == 1'b0 ? s_46 :
              Dly_7_out1);



  assign s_47 = signal2_67;

  // <S105>/add_SW_0
  assign signal2_68 = (CT45_out1 == 1'b0 ? s_47 :
              DLY_0_out1_17);



  assign s_48 = signal2_68;

  // <S103>/add_SW_0
  assign signal2_69 = (CT43_out1 == 1'b0 ? s_48 :
              UM_15_out1);



  assign s_49 = signal2_69;

  // <S102>/add_SW_0
  assign signal2_70 = (CT42_out1 == 1'b0 ? s_49 :
              Dly_6_out1_1);



  assign s_50 = signal2_70;

  // <S101>/add_SW_0
  assign signal2_71 = (CT44_out1 == 1'b0 ? s_50 :
              Q_ref_b16);



  assign s_51 = signal2_71;

  // <S100>/add_SW_0
  assign signal2_72 = (CT39_out1 == 1'b0 ? s_51 :
              Switch17_out1_5);



  assign s_52 = signal2_72;

  // <S99>/add_SW_0
  assign signal2_73 = (CT38_out1 == 1'b0 ? s_52 :
              Switch33_out1);



  assign s_53 = signal2_73;

  // <S97>/add_SW_0
  assign signal2_74 = (CT33_out1 == 1'b0 ? s_53 :
              UM_10_out1);



  assign s_54 = signal2_74;

  // <S96>/add_SW_0
  assign signal2_75 = (CT32_out1 == 1'b0 ? s_54 :
              Dly_4_out1_1);



  assign s_55 = signal2_75;

  // <S95>/add_SW_0
  assign signal2_76 = (CT25_out1 == 1'b0 ? s_55 :
              DLY_0_out1_14);



  assign s_56 = signal2_76;

  // <S94>/add_SW_0
  assign signal2_77 = (CT24_out1 == 1'b0 ? s_56 :
              UM_9_out1);



  assign s_57 = signal2_77;

  // <S92>/add_SW_0
  assign signal2_78 = (CT22_out1 == 1'b0 ? s_57 :
              Dly_2_out1);



  assign s_58 = signal2_78;

  // <S91>/add_SW_0
  assign signal2_79 = (CT15_out1 == 1'b0 ? s_58 :
              P_ref_b16);



  assign s_59 = signal2_79;

  // <S90>/add_SW_0
  assign signal2_80 = (CT14_out1 == 1'b0 ? s_59 :
              16'sb0001111111111111);



  assign s_60 = signal2_80;

  // <S89>/add_SW_0
  assign signal2_81 = (CT13_out1 == 1'b0 ? s_60 :
              16'sb1110000000000001);



  assign s_61 = signal2_81;

  // <S88>/add_SW_0
  assign signal2_82 = (CT6_out1 == 1'b0 ? s_61 :
              UM_8_out1);



  assign s_62 = signal2_82;

  // <S87>/add_SW_0
  assign signal2_83 = (CT5_out1 == 1'b0 ? s_62 :
              Switch27_out1);



  assign s_63 = signal2_83;

  // <S86>/add_SW_0
  assign signal2_84 = (CT28_out1 == 1'b0 ? s_63 :
              Dly_5_out1);



  assign s_64 = signal2_84;

  // <S85>/add_SW_0
  assign signal2_85 = (CT29_out1 == 1'b0 ? s_64 :
              UM_7_out1);



  assign s_65 = signal2_85;

  // <S84>/add_SW_0
  assign signal2_86 = (CT27_out1 == 1'b0 ? s_65 :
              Switch26_out1);



  assign signal2_87 = signal2_86;

  assign s_66 = signal2_87;

  // <S83>/add_SW_0
  assign signal2_88 = (CT26_out1 == 1'b0 ? s_66 :
              UM_6_out1);



  assign s_67 = signal2_88;

  // <S114>/add_SW_0
  assign signal2_89 = (CT23_out1 == 1'b0 ? s_67 :
              Ffr_db_b16);



  assign s_68 = signal2_89;

  // <S113>/add_SW_0
  assign signal2_90 = (CT17_out1 == 1'b0 ? s_68 :
              Wadd_b16);



  assign s_69 = signal2_90;

  // <S112>/add_SW_0
  assign signal2_91 = (CT12_out1 == 1'b0 ? s_69 :
              DLY_0_out1_13);



  assign signal2_92 = signal2_91;

  // <S1>/DTC_b18_6
  assign DTC_b18_6_out1 = {{2{signal2_92[15]}}, signal2_92};



  // <S111>/add_SW_0
  assign signal2_93 = (CT0_out1 == 1'b0 ? DTC_b18_6_out1 :
              UM_1_out1);



  assign s_70 = signal2_93;

  // <S1>/Switch28
  assign signal2_94 = (CT34_out1 == 1'b0 ? s_70 :
              s_5);



  assign s_71 = signal2_94;

  // <S1>/Switch7
  assign signal2_95 = (SW_0_out1_1 == 1'b0 ? s_71 :
              DTC_b18_4_out1);



  assign signal2_96 = signal2_95;

  // <S81>/add_SW_1
  assign add_SW_1_out1_11 = (CT3_out1 == 1'b0 ? DLY_0_out1_12 :
              DTC_1_out1);



  // <S81>/DLY_0
  // 
  // <S1>/Goto167
  // 
  // <S1>/From121
  // 
  // <S1>/From13
  // 
  // <S1>/Goto167
  // 
  // <S1>/From121
  // 
  // <S1>/From13
  // 
  // <S1>/Goto
  // 
  // <S1>/From120
  // 
  // <S1>/From347
  // 
  // <S1>/B6
  // 
  // <S93>/add_SW_0
  always @(posedge g_clk)
    begin : DLY_0_1_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_12 <= 12'sb000000000000;
      end
      else begin
        DLY_0_out1_12 <= add_SW_1_out1_11;
      end
    end



  // <S110>/add_SW_1
  assign add_SW_1_out1_12 = (CT10_out1 == 1'b0 ? DLY_0_out1_19 :
              DTC_1_out1);



  // <S110>/DLY_0
  // 
  // <S1>/Goto155
  // 
  // <S1>/From64
  // 
  // <S1>/From70
  // 
  // <S1>/Goto155
  // 
  // <S1>/From64
  // 
  // <S1>/From71
  always @(posedge g_clk)
    begin : DLY_029_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_19 <= 12'sb000000000000;
      end
      else begin
        DLY_0_out1_19 <= add_SW_1_out1_12;
      end
    end



  // <S1>/RO_4
  // 
  // <S1>/Goto251
  // 
  // <S1>/From474
  assign RO_4_relop1 = Unit_Delay57_out1_1 < DLY_0_out1_19;



  // <S1>/Switch4
  assign Switch4_out1 = (RO_4_relop1 == 1'b0 ? Unit_Delay57_out1_1 :
              DLY_0_out1_19);



  // <S1>/RO6
  assign RO6_relop1 = Add1_out1 > 18'sb000000011111111111;



  // <S1>/Switch5
  assign Switch5_out1 = (RO6_relop1 == 1'b0 ? Add1_out1 :
              18'sb000000011111111111);



  // <S1>/RO5
  assign RO5_relop1 = Switch5_out1 < 18'sb111111100000000000;



  // <S1>/Switch6
  assign Switch6_out1 = (RO5_relop1 == 1'b0 ? Switch5_out1 :
              18'sb111111100000000000);



  // <S1>/DTC_1
  // 
  // <S1>/Goto50
  // 
  // <S1>/From54
  // 
  // <S1>/Goto50
  // 
  // <S1>/From96
  // 
  // <S1>/Goto50
  // 
  // <S1>/From95
  assign DTC_1_out1 = Switch6_out1[11:0];



  // <S109>/add_SW_1
  assign add_SW_1_out1_13 = (CT9_out1 == 1'b0 ? DLY_0_out1_20 :
              DTC_1_out1);



  // <S109>/DLY_0
  // 
  // <S1>/Goto154
  // 
  // <S1>/From62
  // 
  // <S1>/From334
  // 
  // <S1>/Goto154
  // 
  // <S1>/From62
  // 
  // <S1>/From67
  always @(posedge g_clk)
    begin : DLY_028_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_20 <= 12'sb000000000000;
      end
      else begin
        DLY_0_out1_20 <= add_SW_1_out1_13;
      end
    end



  // <S1>/RO_1
  // 
  // <S1>/Goto252
  // 
  // <S1>/From473
  assign RO_1_relop1 = Unit_Delay57_out1_1 > DLY_0_out1_20;



  // <S1>/Switch99
  // 
  // <S1>/B7
  // 
  // <S104>/add_SW_0
  assign Switch99_out1 = (RO_1_relop1 == 1'b0 ? Switch4_out1 :
              DLY_0_out1_20);



  // <S104>/add_SW_0
  // 
  // <S104>/add_SW_0
  // 
  // <S1>/add_sub_3
  // 
  // <S104>/add_SW_0
  // 
  // <S1>/Goto55
  // 
  // <S1>/From
  assign signal1_24 = (CT1_out1 == 1'b0 ? s_4 :
              Switch99_out1);



  // <S93>/add_SW_0
  assign s_72 = signal1_24;

  // <S93>/add_SW_0
  // 
  // <S93>/add_SW_0
  // 
  // <S1>/add_sub_2
  // 
  // <S93>/add_SW_0
  // 
  // <S1>/Goto20
  // 
  // <S1>/From76
  assign signal1_25 = (CT8_out1 == 1'b0 ? s_72 :
              DLY_0_out1_12);



  // <S82>/add_SW_0
  assign s_73 = signal1_25;

  // <S82>/add_SW_0
  // 
  // <S82>/add_SW_0
  // 
  // <S1>/add_sub_1
  // 
  // <S82>/add_SW_0
  // 
  // <S1>/Goto21
  // 
  // <S1>/From74
  assign signal1_26 = (CT4_out1 == 1'b0 ? s_73 :
              Switch136_out1);



  // <S81>/add_SW_0
  assign s_74 = signal1_26;

  // <S81>/add_SW_0
  // 
  // <S81>/add_SW_0
  // 
  // <S1>/add_sub_0
  // 
  // <S81>/add_SW_0
  assign signal1_27 = (CT3_out1 == 1'b0 ? s_74 :
              Switch102_out1);



  // <S1>/Bus Selector2
  assign signal1_28 = signal1_27;

  // <S1>/DTC_b18_3
  // 
  // <S1>/B2
  // 
  // <S1>/Goto18
  // 
  // <S1>/From105
  // 
  // <S1>/Switch7
  assign DTC_b18_3_out1 = {{6{signal1_28[11]}}, signal1_28};



  // <S83>/add_SW_1
  assign add_SW_1_out1_14 = (CT26_out1 == 1'b0 ? DLY_0_out1_21 :
              Add1_out1);



  // <S83>/DLY_0
  // 
  // <S1>/Goto145
  // 
  // <S1>/From45
  // 
  // <S1>/Goto145
  // 
  // <S1>/From97
  always @(posedge g_clk)
    begin : DLY_02_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_21 <= 18'sb000000000000000000;
      end
      else begin
        DLY_0_out1_21 <= add_SW_1_out1_14;
      end
    end



  // <S1>/RO_2
  // 
  // <S1>/Goto68
  // 
  // <S1>/From471
  assign RO_2_relop1 = w_b18 < DLY_0_out1_21;



  // <S1>/Switch3
  assign Switch3_out1 = (RO_2_relop1 == 1'b0 ? w_b18 :
              DLY_0_out1_21);



  // <S114>/add_SW_1
  assign add_SW_1_out1_15 = (CT23_out1 == 1'b0 ? DLY_0_out1_22 :
              Add1_out1);



  // <S114>/DLY_0
  // 
  // <S1>/Goto144
  // 
  // <S1>/From43
  // 
  // <S1>/Goto144
  // 
  // <S1>/From91
  always @(posedge g_clk)
    begin : DLY_033_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_22 <= 18'sb000000000000000000;
      end
      else begin
        DLY_0_out1_22 <= add_SW_1_out1_15;
      end
    end



  // <S1>/RO_3
  // 
  // <S1>/Goto63
  // 
  // <S1>/From470
  assign RO_3_relop1 = w_b18 > DLY_0_out1_22;



  // <S1>/Switch98
  // 
  // <S1>/B10
  // 
  // <S111>/add_SW_0
  assign Switch98_out1_2 = (RO_3_relop1 == 1'b0 ? Switch3_out1 :
              DLY_0_out1_22);



  // <S1>/Switch2
  // 
  // <S1>/B14
  // 
  // <S112>/add_SW_0
  assign Switch2_out1 = (VF0PQ1 == 1'b0 ? DLY_0_out1_11 :
              w_b18);



  // <S97>/add_SW_1
  assign add_SW_1_out1_16 = (CT33_out1 == 1'b0 ? DLY_0_out1_15 :
              DTC_0_out1);



  // <S97>/DLY_0
  // 
  // <S1>/Goto138
  // 
  // <S1>/From254
  // 
  // <S1>/Goto138
  // 
  // <S1>/From283
  // 
  // <S1>/Goto138
  // 
  // <S1>/From467
  // 
  // <S1>/B18
  // 
  // <S84>/add_SW_0
  always @(posedge g_clk)
    begin : DLY_016_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_15 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_15 <= add_SW_1_out1_16;
      end
    end



  // <S124>/Switch15
  // 
  // <S124>/Switch15
  // 
  // <S124>/Switch15
  // 
  // <S124>/Demux2
  assign signal1_29 = (Or12_out1 == 1'b0 ? s1z4_out1_9 :
              Switch28_out1_2);



  assign signal1_30 = signal1_29;

  // <S124>/s1z4
  // 
  // <S1>/Goto248
  // 
  // <S1>/From134
  // 
  // <S1>/From159
  // 
  // <S1>/B34
  // 
  // <S85>/add_SW_0
  // 
  // <S124>/B10
  // 
  // <S1>/pro_sub_15
  // 
  // <S124>/Switch15
  always @(posedge g_clk)
    begin : s1z47_process
      if (Rst_n == 1'b0) begin
        s1z4_out1_9 <= 16'sb0000000000000000;
      end
      else begin
        s1z4_out1_9 <= signal1_30;
      end
    end



  // <S85>/add_SW_1
  assign add_SW_1_out1_17 = (CT29_out1 == 1'b0 ? DLY_0_out1_23 :
              DTC_0_out1);



  // <S85>/DLY_0
  // 
  // <S1>/Goto95
  // 
  // <S1>/From359
  // 
  // <S1>/B19
  // 
  // <S86>/add_SW_0
  always @(posedge g_clk)
    begin : DLY_04_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_23 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_23 <= add_SW_1_out1_17;
      end
    end



  // <S107>/add_SW_1
  assign add_SW_1_out1_18 = (CT48_out1 == 1'b0 ? DLY_0_out1_18 :
              DTC_0_out1);



  // <S107>/DLY_0
  // 
  // <S1>/Goto220
  // 
  // <S1>/From368
  // 
  // <S1>/B20
  // 
  // <S87>/add_SW_0
  // 
  // <S1>/Goto220
  // 
  // <S1>/From441
  // 
  // <S1>/Goto220
  // 
  // <S1>/From465
  always @(posedge g_clk)
    begin : DLY_026_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_18 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_18 <= add_SW_1_out1_18;
      end
    end



  // <S1>/Dly_0
  always @(posedge g_clk)
    begin : Dly_02_1_process
      if (Rst_n == 1'b0) begin
        Dly_0_out1_24 <= 35'h000000000;
      end
      else begin
        Dly_0_out1_24 <= Switch8_out1;
      end
    end



  // <S112>/add_SW_1
  assign add_SW_1_out1_19 = (CT12_out1 == 1'b0 ? DLY_0_out1_25 :
              Add1_out1);



  // <S112>/DLY_0
  always @(posedge g_clk)
    begin : DLY_031_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_25 <= 18'sb000000000000000000;
      end
      else begin
        DLY_0_out1_25 <= add_SW_1_out1_19;
      end
    end



  // <S1>/Gain
  assign Gain_out1 = {{2{DLY_0_out1_25[17]}}, {DLY_0_out1_25, 16'b0000000000000000}};



  // <S1>/DTC_b30_0
  assign DTC_b30_0_out1 = {{10{Gain_out1[35]}}, Gain_out1[35:16]};



  // <S1>/Add4
  assign Add4_1 = {{7{DTC_b30_0_out1[29]}}, DTC_b30_0_out1};
  assign Add4_2 = {2'b0, Dly_0_out1_24};
  assign Add4_add_temp = Add4_1 + Add4_2;
  assign Add4_out1 = Add4_add_temp[34:0];



  // <S1>/Switch8
  assign Switch8_out1 = (OR1_out1_2 == 1'b0 ? ThetaInit_b35 :
              Add4_out1);



  // <S1>/BS_0
  // 
  // <S1>/Goto52
  // 
  // <S1>/Goto52
  // 
  // <S1>/Goto52
  // 
  // <S1>/From177
  assign BS_0_out1 = Switch8_out1[34:22];



  // <S1>/From42
  assign y = BS_0_out1;

  // <S1>/DTC_2
  // 
  // <S1>/B31
  // 
  // <S88>/add_SW_0
  assign DTC_2_out1 = {3'b0, y};



  // <S88>/add_SW_1
  assign add_SW_1_out1_20 = (CT6_out1 == 1'b0 ? DLY_0_out1_26 :
              DTC_0_out1);



  // <S88>/DLY_0
  // 
  // <S1>/Goto92
  // 
  // <S1>/From181
  // 
  // <S1>/From147
  // 
  // <S1>/B32
  // 
  // <S89>/add_SW_0
  // 
  // <S1>/Goto92
  // 
  // <S1>/From181
  // 
  // <S1>/From149
  // 
  // <S1>/B35
  // 
  // <S90>/add_SW_0
  // 
  // <S1>/Goto92
  // 
  // <S1>/From181
  // 
  // <S1>/From170
  // 
  // <S1>/Goto92
  // 
  // <S1>/From181
  // 
  // <S1>/From172
  // 
  // <S1>/Goto92
  // 
  // <S1>/From181
  // 
  // <S1>/From174
  always @(posedge g_clk)
    begin : DLY_07_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_26 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_26 <= add_SW_1_out1_20;
      end
    end



  // <S131>/Switch15
  // 
  // <S131>/Switch15
  // 
  // <S131>/Switch15
  // 
  // <S131>/Demux2
  assign signal1_31 = (Or4_out1 == 1'b0 ? s1z4_out1_10 :
              Switch28_out1_2);



  assign signal1_32 = signal1_31;

  // <S131>/s1z4
  // 
  // <S1>/Goto86
  // 
  // <S1>/From247
  // 
  // <S1>/B27
  // 
  // <S92>/add_SW_0
  // 
  // <S131>/B10
  // 
  // <S1>/pro_sub_6
  // 
  // <S131>/Switch15
  always @(posedge g_clk)
    begin : s1z414_process
      if (Rst_n == 1'b0) begin
        s1z4_out1_10 <= 16'sb0000000000000000;
      end
      else begin
        s1z4_out1_10 <= signal1_32;
      end
    end



  // <S92>/add_SW_1
  assign add_SW_1_out1_21 = (CT22_out1 == 1'b0 ? DLY_0_out1_27 :
              DTC_0_out1);



  // <S92>/DLY_0
  // 
  // <S1>/Goto128
  // 
  // <S1>/From250
  // 
  // <S1>/B28
  // 
  // <S94>/add_SW_0
  always @(posedge g_clk)
    begin : DLY_011_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_27 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_27 <= add_SW_1_out1_21;
      end
    end



  // <S94>/add_SW_1
  assign add_SW_1_out1_22 = (CT24_out1 == 1'b0 ? DLY_0_out1_14 :
              DTC_0_out1);



  // <S94>/DLY_0
  // 
  // <S1>/Goto130
  // 
  // <S1>/From253
  // 
  // <S1>/Goto130
  // 
  // <S1>/From267
  // 
  // <S1>/B30
  // 
  // <S95>/add_SW_0
  // 
  // <S1>/Goto130
  // 
  // <S1>/From267
  always @(posedge g_clk)
    begin : DLY_013_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_14 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_14 <= add_SW_1_out1_22;
      end
    end



  // <S133>/Switch15
  // 
  // <S133>/Switch15
  // 
  // <S133>/Switch15
  // 
  // <S133>/Demux2
  assign signal1_33 = (Or6_out1 == 1'b0 ? s1z4_out1_11 :
              Switch28_out1_2);



  assign signal1_34 = signal1_33;

  // <S133>/s1z4
  // 
  // <S1>/Goto175
  // 
  // <S1>/From261
  // 
  // <S1>/B37
  // 
  // <S96>/add_SW_0
  // 
  // <S133>/B10
  // 
  // <S1>/pro_sub_8
  // 
  // <S133>/Switch15
  always @(posedge g_clk)
    begin : s1z416_process
      if (Rst_n == 1'b0) begin
        s1z4_out1_11 <= 16'sb0000000000000000;
      end
      else begin
        s1z4_out1_11 <= signal1_34;
      end
    end



  // <S96>/add_SW_1
  assign add_SW_1_out1_23 = (CT32_out1 == 1'b0 ? DLY_0_out1_28 :
              DTC_0_out1);



  // <S96>/DLY_0
  // 
  // <S1>/Goto135
  // 
  // <S1>/From264
  // 
  // <S1>/B38
  // 
  // <S97>/add_SW_0
  always @(posedge g_clk)
    begin : DLY_015_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_28 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_28 <= add_SW_1_out1_23;
      end
    end



  // <S119>/Switch15
  // 
  // <S119>/Switch15
  // 
  // <S119>/Switch15
  // 
  // <S119>/Demux2
  assign signal1_35 = (CT26_out1 == 1'b0 ? s1z4_out1_12 :
              Switch28_out1_1);



  assign signal1_36 = signal1_35;

  // <S119>/s1z4
  // 
  // <S119>/B10
  // 
  // <S1>/pro_sub_10
  // 
  // <S119>/Switch15
  always @(posedge g_clk)
    begin : s1z42_process
      if (Rst_n == 1'b0) begin
        s1z4_out1_12 <= 16'sb0000000000000000;
      end
      else begin
        s1z4_out1_12 <= signal1_36;
      end
    end



  // <S76>/RO16
  assign RO1610_relop1 = fast_VSGPLimit_b16 > s1z4_out1_12;



  // <S76>/Switch16
  assign Switch16_out1_7 = (RO1610_relop1 == 1'b0 ? fast_VSGPLimit_b16 :
              s1z4_out1_12);



  // <S76>/RO1
  // 
  // <S1>/Staturation5
  assign RO117_relop1 = Switch16_out1_7 > UM_20_out1;



  // <S76>/Switch17
  // 
  // <S1>/Goto202
  // 
  // <S1>/From369
  // 
  // <S1>/Goto202
  // 
  // <S1>/From379
  assign Switch17_out1_6 = (RO117_relop1 == 1'b0 ? UM_20_out1 :
              Switch16_out1_7);



  // <S108>/add_SW_1
  assign add_SW_1_out1_24 = (CT46_out1 == 1'b0 ? DLY_0_out1_29 :
              DTC_0_out1);



  // <S108>/DLY_0
  always @(posedge g_clk)
    begin : DLY_027_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_29 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_29 <= add_SW_1_out1_24;
      end
    end



  // <S77>/RO16
  assign RO1611_relop1 = 16'sb0010000000000000 > DLY_0_out1_29;



  // <S77>/Switch16
  assign Switch16_out1_8 = (RO1611_relop1 == 1'b0 ? 16'sb0010000000000000 :
              DLY_0_out1_29);



  // <S77>/RO1
  // 
  // <S1>/Staturation6
  assign RO118_relop1 = Switch16_out1_8 > 16'sb0000000000000000;



  // <S77>/Switch17
  assign Switch17_out1_7 = (RO118_relop1 == 1'b0 ? 16'sb0000000000000000 :
              Switch16_out1_8);



  // <S1>/Switch47
  // 
  // <S1>/Goto245
  // 
  // <S1>/From458
  // 
  // <S1>/Goto245
  // 
  // <S1>/From463
  // 
  // <S1>/Goto245
  // 
  // <S1>/From458
  assign Switch47_out1 = (CtlLoopOn == 1'b0 ? 16'sb0000000000000000 :
              Switch17_out1_7);



  // <S1>/CT49
  assign CT49_out1 = Switch47_out1 >= 16'sb0010000000000000;



  // <S1>/OR5
  // 
  // <S1>/Goto247
  // 
  // <S1>/From375
  // 
  // <S1>/Goto247
  // 
  // <S1>/From480
  assign OR5_out1_1 = CT49_out1 & Inr_En;



  // <S1>/Switch35
  // 
  // <S1>/B44
  // 
  // <S100>/add_SW_0
  assign Switch35_out1 = (OR5_out1_1 == 1'b0 ? 16'sb0000000000000000 :
              Switch17_out1_6);



  // <S120>/Switch15
  // 
  // <S120>/Switch15
  // 
  // <S120>/Switch15
  // 
  // <S120>/Demux2
  assign signal1_37 = (Or8_out1 == 1'b0 ? s1z4_out1_13 :
              Switch28_out1_2);



  assign signal1_38 = signal1_37;

  // <S120>/s1z4
  // 
  // <S1>/Goto233
  // 
  // <S1>/From397
  // 
  // <S1>/B46
  // 
  // <S102>/add_SW_0
  // 
  // <S120>/B10
  // 
  // <S1>/pro_sub_11
  // 
  // <S120>/Switch15
  always @(posedge g_clk)
    begin : s1z43_process
      if (Rst_n == 1'b0) begin
        s1z4_out1_13 <= 16'sb0000000000000000;
      end
      else begin
        s1z4_out1_13 <= signal1_38;
      end
    end



  // <S102>/add_SW_1
  assign add_SW_1_out1_25 = (CT42_out1 == 1'b0 ? DLY_0_out1_30 :
              DTC_0_out1);



  // <S102>/DLY_0
  // 
  // <S1>/Goto212
  // 
  // <S1>/From400
  // 
  // <S1>/B47
  // 
  // <S103>/add_SW_0
  always @(posedge g_clk)
    begin : DLY_021_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_30 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_30 <= add_SW_1_out1_25;
      end
    end



  // <S103>/add_SW_1
  assign add_SW_1_out1_26 = (CT43_out1 == 1'b0 ? DLY_0_out1_17 :
              DTC_0_out1);



  // <S103>/DLY_0
  // 
  // <S1>/Goto214
  // 
  // <S1>/From388
  // 
  // <S1>/Goto214
  // 
  // <S1>/From415
  // 
  // <S1>/B48
  // 
  // <S105>/add_SW_0
  // 
  // <S1>/Goto214
  // 
  // <S1>/From415
  always @(posedge g_clk)
    begin : DLY_022_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_17 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_17 <= add_SW_1_out1_26;
      end
    end



  // <S1>/Abs
  assign Abs_y = (Add_out1 < 33'sh000000000 ?  - ({Add_out1[32], Add_out1}) :
              {Add_out1[32], Add_out1});
  assign Abs_out1 = Abs_y[32:0];



  // <S1>/Bit Slice1
  assign Bit_Slice1_out1 = Abs_out1[32:20];



  // <S1>/DTC_b16_0
  assign DTC_b16_0_out1 = {3'b0, Bit_Slice1_out1};



  // <S136>/UM_0
  assign UM_0_in0 =  - ({DTC_b16_0_out1[15], DTC_b16_0_out1});
  assign UM_0_out1_2 = UM_0_in0[15:0];



  // <S136>/CT0_0
  assign CT0_0_out1_1 = Add_out1 >= 33'sh000000000;



  // <S136>/Switch28
  // 
  // <S136>/B37
  // 
  // <S1>/sign_handle_0
  // 
  // <S1>/Goto85
  // 
  // <S1>/From141
  // 
  // <S124>/Switch15
  // 
  // <S136>/B37
  // 
  // <S1>/sign_handle_0
  // 
  // <S1>/Goto85
  // 
  // <S1>/From445
  // 
  // <S123>/Switch15
  // 
  // <S136>/B37
  // 
  // <S1>/sign_handle_0
  // 
  // <S1>/Goto85
  // 
  // <S1>/From439
  // 
  // <S122>/Switch15
  // 
  // <S136>/B37
  // 
  // <S1>/sign_handle_0
  // 
  // <S1>/Goto85
  // 
  // <S1>/From432
  // 
  // <S121>/Switch15
  // 
  // <S136>/B37
  // 
  // <S1>/sign_handle_0
  // 
  // <S1>/Goto85
  // 
  // <S1>/From425
  // 
  // <S120>/Switch15
  // 
  // <S136>/B37
  // 
  // <S1>/sign_handle_0
  // 
  // <S1>/Goto85
  // 
  // <S1>/From281
  // 
  // <S134>/Switch15
  // 
  // <S136>/B37
  // 
  // <S1>/sign_handle_0
  // 
  // <S1>/Goto85
  // 
  // <S1>/From275
  // 
  // <S133>/Switch15
  // 
  // <S136>/B37
  // 
  // <S1>/sign_handle_0
  // 
  // <S1>/Goto85
  // 
  // <S1>/From242
  // 
  // <S132>/Switch15
  // 
  // <S136>/B37
  // 
  // <S1>/sign_handle_0
  // 
  // <S1>/Goto85
  // 
  // <S1>/From236
  // 
  // <S131>/Switch15
  assign Switch28_out1_2 = (CT0_0_out1_1 == 1'b0 ? UM_0_out1_2 :
              DTC_b16_0_out1);



  // <S122>/Switch15
  // 
  // <S122>/Switch15
  // 
  // <S122>/Switch15
  // 
  // <S122>/Demux2
  assign signal1_39 = (Or10_out1 == 1'b0 ? s1z4_out1_14 :
              Switch28_out1_2);



  assign signal1_40 = signal1_39;

  // <S122>/s1z4
  // 
  // <S1>/Goto232
  // 
  // <S1>/From409
  // 
  // <S1>/B49
  // 
  // <S106>/add_SW_0
  // 
  // <S122>/B10
  // 
  // <S1>/pro_sub_13
  // 
  // <S122>/Switch15
  always @(posedge g_clk)
    begin : s1z45_process
      if (Rst_n == 1'b0) begin
        s1z4_out1_14 <= 16'sb0000000000000000;
      end
      else begin
        s1z4_out1_14 <= signal1_40;
      end
    end



  // <S1>/RO3
  assign RO3_relop1 = Add1_out1 > 18'sb000111111111111111;



  // <S1>/Switch19
  assign Switch19_out1 = (RO3_relop1 == 1'b0 ? Add1_out1 :
              18'sb000111111111111111);



  // <S1>/RO2
  assign RO2_relop1 = Switch19_out1 < 18'sb111000000000000000;



  // <S1>/Switch20
  assign Switch20_out1 = (RO2_relop1 == 1'b0 ? Switch19_out1 :
              18'sb111000000000000000);



  // <S1>/DTC_0
  // 
  // <S1>/Goto29
  // 
  // <S1>/From1
  // 
  // <S1>/Goto29
  // 
  // <S1>/From94
  // 
  // <S1>/Goto29
  // 
  // <S1>/From93
  // 
  // <S1>/Goto29
  // 
  // <S1>/From85
  // 
  // <S1>/Goto29
  // 
  // <S1>/From460
  // 
  // <S1>/Goto29
  // 
  // <S1>/From406
  // 
  // <S1>/Goto29
  // 
  // <S1>/From405
  // 
  // <S1>/Goto29
  // 
  // <S1>/From403
  // 
  // <S1>/Goto29
  // 
  // <S1>/From394
  // 
  // <S1>/Goto29
  // 
  // <S1>/From393
  // 
  // <S1>/Goto29
  // 
  // <S1>/From391
  // 
  // <S1>/Goto29
  // 
  // <S1>/From366
  // 
  // <S1>/Goto29
  // 
  // <S1>/From319
  // 
  // <S1>/Goto29
  // 
  // <S1>/From293
  // 
  // <S1>/Goto29
  // 
  // <S1>/From258
  // 
  // <S1>/Goto29
  // 
  // <S1>/From257
  // 
  // <S1>/Goto29
  // 
  // <S1>/From255
  // 
  // <S1>/Goto29
  // 
  // <S1>/From244
  // 
  // <S1>/Goto29
  // 
  // <S1>/From243
  // 
  // <S1>/Goto29
  // 
  // <S1>/From232
  // 
  // <S1>/Goto29
  // 
  // <S1>/From180
  // 
  // <S1>/Goto29
  // 
  // <S1>/From158
  // 
  // <S1>/Goto29
  // 
  // <S1>/From153
  // 
  // <S1>/Goto29
  // 
  // <S1>/From146
  // 
  // <S1>/Goto29
  // 
  // <S1>/From103
  // 
  // <S1>/Goto29
  // 
  // <S1>/From102
  // 
  // <S1>/Goto29
  // 
  // <S1>/From101
  assign DTC_0_out1 = Switch20_out1[15:0];



  // <S106>/add_SW_1
  assign add_SW_1_out1_27 = (CT47_out1 == 1'b0 ? DLY_0_out1_31 :
              DTC_0_out1);



  // <S106>/DLY_0
  // 
  // <S1>/Goto218
  // 
  // <S1>/From412
  // 
  // <S1>/B50
  // 
  // <S107>/add_SW_0
  always @(posedge g_clk)
    begin : DLY_025_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_31 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_31 <= add_SW_1_out1_27;
      end
    end



  // <S107>/add_SW_0
  // 
  // <S107>/add_SW_0
  // 
  // <S1>/add_sub_32
  // 
  // <S107>/add_SW_0
  // 
  // <S1>/Goto221
  // 
  // <S1>/From414
  assign signal1_41 = (CT48_out1 == 1'b0 ? s_1 :
              DLY_0_out1_31);



  // <S106>/add_SW_0
  assign s_75 = signal1_41;

  // <S106>/add_SW_0
  // 
  // <S106>/add_SW_0
  // 
  // <S1>/add_sub_31
  // 
  // <S106>/add_SW_0
  // 
  // <S1>/Goto219
  // 
  // <S1>/From408
  assign signal1_42 = (CT47_out1 == 1'b0 ? s_75 :
              s1z4_out1_14);



  // <S105>/add_SW_0
  assign s_76 = signal1_42;

  // <S105>/add_SW_0
  // 
  // <S105>/add_SW_0
  // 
  // <S1>/add_sub_30
  // 
  // <S105>/add_SW_0
  // 
  // <S1>/Goto217
  // 
  // <S1>/From402
  assign signal1_43 = (CT45_out1 == 1'b0 ? s_76 :
              DLY_0_out1_17);



  // <S103>/add_SW_0
  assign s_77 = signal1_43;

  // <S103>/add_SW_0
  // 
  // <S103>/add_SW_0
  // 
  // <S1>/add_sub_29
  // 
  // <S103>/add_SW_0
  // 
  // <S1>/Goto215
  // 
  // <S1>/From396
  assign signal1_44 = (CT43_out1 == 1'b0 ? s_77 :
              DLY_0_out1_30);



  // <S102>/add_SW_0
  assign s_78 = signal1_44;

  // <S102>/add_SW_0
  // 
  // <S102>/add_SW_0
  // 
  // <S1>/add_sub_28
  // 
  // <S102>/add_SW_0
  // 
  // <S1>/Goto213
  // 
  // <S1>/From449
  assign signal1_45 = (CT42_out1 == 1'b0 ? s_78 :
              s1z4_out1_13);



  // <S101>/add_SW_0
  assign s_79 = signal1_45;

  // <S101>/add_SW_0
  // 
  // <S101>/add_SW_0
  // 
  // <S1>/add_sub_27
  // 
  // <S101>/add_SW_0
  // 
  // <S1>/Goto211
  // 
  // <S1>/From417
  assign signal1_46 = (CT44_out1 == 1'b0 ? s_79 :
              Q_ref_b16);



  // <S100>/add_SW_0
  assign s_80 = signal1_46;

  // <S100>/add_SW_0
  // 
  // <S100>/add_SW_0
  // 
  // <S1>/add_sub_26
  // 
  // <S100>/add_SW_0
  // 
  // <S1>/Goto204
  // 
  // <S1>/From371
  assign signal1_47 = (CT39_out1 == 1'b0 ? s_80 :
              Switch35_out1);



  // <S99>/add_SW_0
  assign s_81 = signal1_47;

  // <S99>/add_SW_0
  // 
  // <S99>/add_SW_0
  // 
  // <S1>/add_sub_25
  // 
  // <S99>/add_SW_0
  // 
  // <S1>/Goto199
  // 
  // <S1>/From337
  assign signal1_48 = (CT38_out1 == 1'b0 ? s_81 :
              dwdt_b16);



  // <S97>/add_SW_0
  assign s_82 = signal1_48;

  // <S97>/add_SW_0
  // 
  // <S97>/add_SW_0
  // 
  // <S1>/add_sub_23
  // 
  // <S97>/add_SW_0
  // 
  // <S1>/Goto139
  // 
  // <S1>/From266
  assign signal1_49 = (CT33_out1 == 1'b0 ? s_82 :
              DLY_0_out1_28);



  // <S96>/add_SW_0
  assign s_83 = signal1_49;

  // <S96>/add_SW_0
  // 
  // <S96>/add_SW_0
  // 
  // <S1>/add_sub_22
  // 
  // <S96>/add_SW_0
  // 
  // <S1>/Goto137
  // 
  // <S1>/From260
  assign signal1_50 = (CT32_out1 == 1'b0 ? s_83 :
              s1z4_out1_11);



  // <S95>/add_SW_0
  assign s_84 = signal1_50;

  // <S95>/add_SW_0
  // 
  // <S95>/add_SW_0
  // 
  // <S1>/add_sub_21
  // 
  // <S95>/add_SW_0
  // 
  // <S1>/Goto134
  // 
  // <S1>/From167
  assign signal1_51 = (CT25_out1 == 1'b0 ? s_84 :
              DLY_0_out1_14);



  // <S94>/add_SW_0
  assign s_85 = signal1_51;

  // <S94>/add_SW_0
  // 
  // <S94>/add_SW_0
  // 
  // <S1>/add_sub_20
  // 
  // <S94>/add_SW_0
  // 
  // <S1>/Goto131
  // 
  // <S1>/From252
  assign signal1_52 = (CT24_out1 == 1'b0 ? s_85 :
              DLY_0_out1_27);



  // <S92>/add_SW_0
  assign s_86 = signal1_52;

  // <S92>/add_SW_0
  // 
  // <S92>/add_SW_0
  // 
  // <S1>/add_sub_19
  // 
  // <S92>/add_SW_0
  // 
  // <S1>/Goto129
  // 
  // <S1>/From246
  assign signal1_53 = (CT22_out1 == 1'b0 ? s_86 :
              s1z4_out1_10);



  // <S91>/add_SW_0
  assign s_87 = signal1_53;

  // <S91>/add_SW_0
  // 
  // <S91>/add_SW_0
  // 
  // <S1>/add_sub_18
  // 
  // <S91>/add_SW_0
  // 
  // <S1>/Goto121
  // 
  // <S1>/From233
  assign signal1_54 = (CT15_out1 == 1'b0 ? s_87 :
              P_ref_b16);



  // <S90>/add_SW_0
  assign s_88 = signal1_54;

  // <S90>/add_SW_0
  // 
  // <S90>/add_SW_0
  // 
  // <S1>/add_sub_17
  // 
  // <S90>/add_SW_0
  // 
  // <S1>/Goto100
  // 
  // <S1>/From169
  assign signal1_55 = (CT14_out1 == 1'b0 ? s_88 :
              DLY_0_out1_26);



  // <S89>/add_SW_0
  assign s_89 = signal1_55;

  // <S89>/add_SW_0
  // 
  // <S89>/add_SW_0
  // 
  // <S1>/add_sub_16
  // 
  // <S89>/add_SW_0
  // 
  // <S1>/Goto99
  // 
  // <S1>/From168
  assign signal1_56 = (CT13_out1 == 1'b0 ? s_89 :
              DLY_0_out1_26);



  // <S88>/add_SW_0
  assign s_90 = signal1_56;

  // <S88>/add_SW_0
  // 
  // <S88>/add_SW_0
  // 
  // <S1>/add_sub_15
  // 
  // <S88>/add_SW_0
  // 
  // <S1>/Goto91
  // 
  // <S1>/From144
  assign signal1_57 = (CT6_out1 == 1'b0 ? s_90 :
              DTC_2_out1);



  // <S87>/add_SW_0
  assign s_91 = signal1_57;

  // <S87>/add_SW_0
  // 
  // <S87>/add_SW_0
  // 
  // <S1>/add_sub_14
  // 
  // <S87>/add_SW_0
  // 
  // <S1>/Goto36
  // 
  // <S1>/From38
  assign signal1_58 = (CT5_out1 == 1'b0 ? s_91 :
              DLY_0_out1_18);



  // <S86>/add_SW_0
  assign s_92 = signal1_58;

  // <S86>/add_SW_0
  // 
  // <S86>/add_SW_0
  // 
  // <S1>/add_sub_13
  // 
  // <S86>/add_SW_0
  // 
  // <S1>/Goto37
  // 
  // <S1>/From162
  assign signal1_59 = (CT28_out1 == 1'b0 ? s_92 :
              DLY_0_out1_23);



  // <S85>/add_SW_0
  assign s_93 = signal1_59;

  // <S85>/add_SW_0
  // 
  // <S85>/add_SW_0
  // 
  // <S1>/add_sub_12
  // 
  // <S85>/add_SW_0
  // 
  // <S1>/Goto96
  // 
  // <S1>/From29
  assign signal1_60 = (CT29_out1 == 1'b0 ? s_93 :
              s1z4_out1_9);



  // <S84>/add_SW_0
  assign s_94 = signal1_60;

  // <S84>/add_SW_0
  // 
  // <S84>/add_SW_0
  // 
  // <S1>/add_sub_11
  // 
  // <S84>/add_SW_0
  assign signal1_61 = (CT27_out1 == 1'b0 ? s_94 :
              DLY_0_out1_15);



  // <S1>/Bus Selector5
  assign signal1_62 = signal1_61;

  // <S1>/DTC_b18_1
  // 
  // <S1>/B4
  // 
  // <S1>/Goto35
  // 
  // <S1>/From111
  // 
  // <S83>/add_SW_0
  assign DTC_b18_1_out1 = {{2{signal1_62[15]}}, signal1_62};



  // <S83>/add_SW_0
  // 
  // <S83>/add_SW_0
  // 
  // <S1>/add_sub_10
  // 
  // <S83>/add_SW_0
  // 
  // <S1>/Goto31
  // 
  // <S1>/From63
  assign signal1_63 = (CT26_out1 == 1'b0 ? DTC_b18_1_out1 :
              DLY_0_out1_11);



  // <S114>/add_SW_0
  assign s_95 = signal1_63;

  // <S114>/add_SW_0
  // 
  // <S114>/add_SW_0
  // 
  // <S1>/add_sub_9
  // 
  // <S114>/add_SW_0
  // 
  // <S1>/Goto25
  // 
  // <S1>/From16
  assign signal1_64 = (CT23_out1 == 1'b0 ? s_95 :
              DLY_0_out1_11);



  // <S113>/add_SW_0
  assign s_96 = signal1_64;

  // <S113>/add_SW_0
  // 
  // <S113>/add_SW_0
  // 
  // <S1>/add_sub_8
  // 
  // <S113>/add_SW_0
  // 
  // <S1>/Goto60
  // 
  // <S1>/From110
  assign signal1_65 = (CT17_out1 == 1'b0 ? s_96 :
              Wref_b18);



  // <S112>/add_SW_0
  assign s_97 = signal1_65;

  // <S112>/add_SW_0
  // 
  // <S112>/add_SW_0
  // 
  // <S1>/add_sub_7
  // 
  // <S112>/add_SW_0
  assign signal1_66 = (CT12_out1 == 1'b0 ? s_97 :
              Switch2_out1);



  // <S1>/Bus Selector3
  // 
  // <S1>/B3
  // 
  // <S1>/Goto24
  // 
  // <S1>/From3
  assign signal1_67 = signal1_66;

  // <S111>/add_SW_0
  assign s_98 = signal1_67;

  // <S111>/add_SW_0
  // 
  // <S111>/add_SW_0
  // 
  // <S1>/add_sub_6
  // 
  // <S111>/add_SW_0
  // 
  // <S1>/Goto58
  // 
  // <S1>/From21
  assign signal1_68 = (CT0_out1 == 1'b0 ? s_98 :
              Switch98_out1_2);



  // <S1>/Switch28
  assign s_99 = signal1_68;

  // <S1>/Switch28
  // 
  // <S1>/Switch28
  assign signal1_69 = (CT34_out1 == 1'b0 ? s_99 :
              s_2);



  // <S1>/Switch7
  assign s_100 = signal1_69;

  // <S1>/Switch7
  // 
  // <S1>/Switch7
  // 
  // <S1>/Goto27
  // 
  // <S1>/From35
  assign signal1_70 = (SW_0_out1_1 == 1'b0 ? s_100 :
              DTC_b18_3_out1);



  // <S1>/Bus Selector1
  assign signal1_71 = signal1_70;

  // <S1>/Add1
  // 
  // <S1>/Goto49
  // 
  // <S1>/From100
  // 
  // <S1>/Goto49
  // 
  // <S1>/From99
  // 
  // <S1>/Goto49
  // 
  // <S1>/From98
  // 
  // <S1>/Goto49
  // 
  // <S1>/From104
  assign Add1_out1 = signal1_71 + signal2_96;



  // <S113>/add_SW_1
  assign add_SW_1_out1_28 = (CT17_out1 == 1'b0 ? DLY_0_out1_11 :
              Add1_out1);



  // <S113>/DLY_0
  // 
  // <S1>/Goto143
  // 
  // <S1>/From204
  // 
  // <S1>/Goto143
  // 
  // <S1>/From212
  // 
  // <S1>/B16
  // 
  // <S114>/add_SW_0
  // 
  // <S1>/Goto143
  // 
  // <S1>/From215
  // 
  // <S1>/B17
  // 
  // <S83>/add_SW_0
  // 
  // <S1>/Goto143
  // 
  // <S1>/From223
  // 
  // <S1>/Goto143
  // 
  // <S1>/From49
  // 
  // <S1>/Goto143
  // 
  // <S1>/From52
  always @(posedge g_clk)
    begin : DLY_032_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_11 <= 18'sb000000000000000000;
      end
      else begin
        DLY_0_out1_11 <= add_SW_1_out1_28;
      end
    end



  // <S1>/Add7
  // 
  // <S1>/Goto114
  // 
  // <S1>/From210
  // 
  // <S1>/Goto114
  // 
  // <S1>/From216
  assign Add7_1 = {DLY_0_out1_11[17], DLY_0_out1_11};
  assign Add7_2 = {{3{slow_Ffr_db_b16[15]}}, slow_Ffr_db_b16};
  assign Add7_add_temp = Add7_1 + Add7_2;
  assign Add7_out1_1 = Add7_add_temp[17:0];



  // <S1>/RO_6
  // 
  // <S1>/Goto282
  // 
  // <S1>/From205
  assign RO_6_relop1 = w_b18 > Add7_out1_1;



  // <S1>/Switch21
  assign Switch21_out1 = (RO_6_relop1 == 1'b0 ? Switch18_out1 :
              Add7_out1_1);



  // <S1>/Add11
  assign Add11_out1_2 = Switch21_out1 - w_b18;



  // <S1>/RO17
  assign RO17_relop1 = Add11_out1_2 > 18'sb000111111111111111;



  // <S1>/Switch22
  assign Switch22_out1 = (RO17_relop1 == 1'b0 ? Add11_out1_2 :
              18'sb000111111111111111);



  // <S1>/RO16
  assign RO16_relop1 = Switch22_out1 < 18'sb111000000000000000;



  // <S1>/Switch23
  assign Switch23_out1 = (RO16_relop1 == 1'b0 ? Switch22_out1 :
              18'sb111000000000000000);



  // <S1>/DTC_4
  // 
  // <S1>/Goto280
  // 
  // <S1>/From483
  // 
  // <S2>/Goto9
  // 
  // <S2>/From1
  // 
  // <S2>/B23
  // 
  // <S2>/Goto104
  // 
  // <S2>/From5
  assign DTC_4_out1 = Switch23_out1[15:0];



  // <S2>/Bus Selector6
  // 
  // <S2>/Goto103
  // 
  // <S2>/In13
  assign signal1_72 = DTC_4_out1;

  // <S2>/Switch84
  assign Switch84_out1_1 = (switch_compare_1_1 == 1'b0 ? Constant34_out1_dtc :
              signal1_72);



  // <S2>/Switch97
  assign Switch97_out1_1 = (Switch56_out1 == 1'b0 ? Constant35_out1_dtc :
              Switch84_out1_1);



  assign Add7_stage2_1 = {{11{Switch97_out1_1[15]}}, Switch97_out1_1};
  assign Add7_stage2_2 = {{11{Switch98_out1_1[15]}}, Switch98_out1_1};
  assign Add7_op_stage2_1 = Add7_stage2_1 - Add7_stage2_2;



  // <S2>/Add7
  assign Add7_stage3_1 = {signal2_60[25], signal2_60};
  assign Add7_stage3_add_temp = Add7_op_stage2_1 + Add7_stage3_1;
  assign Add7_out1_2 = Add7_stage3_add_temp[25:0];



  // <S2>/Switch79
  // 
  // <S2>/Goto95
  // 
  // <S2>/From167
  assign Switch79_out1_1 = (switch_compare_1 == 1'b0 ? Constant26_out1_dtc :
              Add7_out1_2);



  // <S2>/Unit Delay30
  // 
  // <S2>/Goto101
  // 
  // <S2>/From175
  // 
  // <S2>/Goto101
  // 
  // <S2>/From204
  always @(posedge g_clk)
    begin : Unit_Delay30_process
      if (Rst_n == 1'b0) begin
        Unit_Delay30_out1_1 <= 26'sb00000000000000000000000000;
      end
      else begin
        Unit_Delay30_out1_1 <= Switch79_out1_1;
      end
    end



  // <S2>/Bit Slice6
  assign Bit_Slice6_out1_1 = Unit_Delay30_out1_1[25:10];



  // <S2>/Data Type S11
  // 
  // <S2>/Goto109
  // 
  // <S2>/From
  // 
  // <S1>/Goto277
  // 
  // <S1>/From491
  // 
  // <S1>/B57
  // 
  // <S125>/Switch24
  // 
  // <S2>/Goto109
  // 
  // <S2>/From
  // 
  // <S1>/Goto277
  // 
  // <S1>/From521
  assign Data_Type_S11_out1_1 = Bit_Slice6_out1_1;



  // <S125>/Switch24
  // 
  // <S125>/Switch24
  // 
  // <S125>/Switch24
  // 
  // <S1>/Goto268
  // 
  // <S1>/From499
  assign signal1_73 = (CT27_out1 == 1'b0 ? s :
              Data_Type_S11_out1_1);



  // <S123>/Switch24
  assign s_101 = signal1_73;

  // <S123>/Switch24
  // 
  // <S123>/Switch24
  // 
  // <S123>/Switch24
  // 
  // <S1>/Goto229
  // 
  // <S1>/From446
  assign signal1_74 = (Or11_out1 == 1'b0 ? s_101 :
              Dly_7_out1);



  // <S122>/Switch24
  assign s_102 = signal1_74;

  // <S122>/Switch24
  // 
  // <S122>/Switch24
  // 
  // <S122>/Switch24
  // 
  // <S1>/Goto227
  // 
  // <S1>/From431
  assign signal1_75 = (Or10_out1 == 1'b0 ? s_102 :
              DLY_0_out1_10);



  // <S121>/Switch24
  assign s_103 = signal1_75;

  // <S121>/Switch24
  // 
  // <S121>/Switch24
  // 
  // <S121>/Switch24
  // 
  // <S1>/Goto224
  // 
  // <S1>/From390
  assign signal1_76 = (Or9_out1 == 1'b0 ? s_103 :
              Dly_6_out1_1);



  // <S120>/Switch24
  assign s_104 = signal1_76;

  // <S120>/Switch24
  // 
  // <S120>/Switch24
  // 
  // <S120>/Switch24
  // 
  // <S1>/Goto222
  // 
  // <S1>/From424
  assign signal1_77 = (Or8_out1 == 1'b0 ? s_104 :
              Switch45_out1);



  // <S119>/Switch24
  assign s_105 = signal1_77;

  // <S119>/Switch24
  // 
  // <S119>/Switch24
  // 
  // <S119>/Switch24
  // 
  // <S1>/Goto200
  // 
  // <S1>/From346
  assign signal1_78 = (CT26_out1 == 1'b0 ? s_105 :
              DLY_0_out1_8);



  // <S134>/Switch24
  assign s_106 = signal1_78;

  // <S134>/Switch24
  // 
  // <S134>/Switch24
  // 
  // <S134>/Switch24
  // 
  // <S1>/Goto168
  // 
  // <S1>/From280
  assign signal1_79 = (Or7_out1 == 1'b0 ? s_106 :
              Dly_4_out1_1);



  // <S133>/Switch24
  assign s_107 = signal1_79;

  // <S133>/Switch24
  // 
  // <S133>/Switch24
  // 
  // <S133>/Switch24
  // 
  // <S1>/Goto140
  // 
  // <S1>/From282
  assign signal1_80 = (Or6_out1 == 1'b0 ? s_107 :
              DLY_0_out1_7);



  // <S132>/Switch24
  assign s_108 = signal1_80;

  // <S132>/Switch24
  // 
  // <S132>/Switch24
  // 
  // <S132>/Switch24
  // 
  // <S1>/Goto124
  // 
  // <S1>/From241
  assign signal1_81 = (Or5_out1 == 1'b0 ? s_108 :
              Dly_2_out1);



  // <S131>/Switch24
  assign s_109 = signal1_81;

  // <S131>/Switch24
  // 
  // <S131>/Switch24
  // 
  // <S131>/Switch24
  // 
  // <S1>/Goto118
  // 
  // <S1>/From229
  assign signal1_82 = (Or4_out1 == 1'b0 ? s_109 :
              Switch44_out1);



  // <S117>/Switch24
  assign s_110 = signal1_82;

  // <S117>/Switch24
  // 
  // <S117>/Switch24
  // 
  // <S117>/Switch24
  // 
  // <S1>/Goto64
  // 
  // <S1>/From164
  assign signal1_83 = (CT0_out1 == 1'b0 ? s_110 :
              Kf_I_b16);



  // <S130>/Switch24
  assign s_111 = signal1_83;

  // <S130>/Switch24
  // 
  // <S130>/Switch24
  // 
  // <S130>/Switch24
  // 
  // <S1>/Goto80
  // 
  // <S1>/From116
  assign signal1_84 = (CT10_out1 == 1'b0 ? s_111 :
              Switch16_out1_2);



  // <S129>/Switch24
  assign s_112 = signal1_84;

  // <S129>/Switch24
  // 
  // <S129>/Switch24
  // 
  // <S129>/Switch24
  // 
  // <S1>/Goto79
  // 
  // <S1>/From115
  assign signal1_85 = (CT9_out1 == 1'b0 ? s_112 :
              DLY_0_out1_5);



  // <S128>/Switch24
  assign s_113 = signal1_85;

  // <S128>/Switch24
  // 
  // <S128>/Switch24
  // 
  // <S128>/Switch24
  // 
  // <S1>/Goto78
  // 
  // <S1>/From114
  assign signal1_86 = (CT8_out1 == 1'b0 ? s_113 :
              fast_Kv_Q_inv_b16);



  // <S127>/Switch24
  assign s_114 = signal1_86;

  // <S127>/Switch24
  // 
  // <S127>/Switch24
  // 
  // <S127>/Switch24
  // 
  // <S1>/Goto77
  // 
  // <S1>/From113
  assign signal1_87 = (CT3_out1 == 1'b0 ? s_114 :
              Data_Type_S11_out1);



  // <S118>/Switch24
  assign s_115 = signal1_87;

  // <S118>/Switch24
  // 
  // <S118>/Switch24
  // 
  // <S118>/Switch24
  // 
  // <S1>/Goto76
  // 
  // <S1>/From139
  assign signal1_88 = (Or3_out1 == 1'b0 ? s_115 :
              Resp_Ky_b16);



  // <S124>/Switch24
  assign s_116 = signal1_88;

  // <S124>/Switch24
  // 
  // <S124>/Switch24
  // 
  // <S124>/Switch24
  // 
  // <S1>/Goto249
  // 
  // <S1>/In12
  assign signal1_89 = (Or12_out1 == 1'b0 ? s_116 :
              Resp_Kx_b16);



  // <S1>/Bus Selector6
  assign signal1_90 = signal1_89;

  // <S1>/Product6
  assign Product6_out1 = signal1_90 * signal2_58;



  // <S1>/Add
  // 
  // <S1>/Goto19
  // 
  // <S1>/From154
  // 
  // <S1>/Goto19
  // 
  // <S1>/From156
  // 
  // <S1>/Goto19
  // 
  // <S1>/From155
  assign Add_1 = {Product6_out1[31], Product6_out1};
  assign Add_2 = {signal3_18[31], signal3_18};
  assign Add_out1 = Add_1 + Add_2;



  // <S137>/CT0_0
  assign CT0_0_out1_2 = Add_out1 >= 33'sh000000000;



  // <S137>/Switch28
  // 
  // <S137>/B37
  // 
  // <S1>/sign_handle_1
  // 
  // <S1>/Goto16
  // 
  // <S1>/From163
  // 
  // <S118>/Switch15
  // 
  // <S137>/B37
  // 
  // <S1>/sign_handle_1
  // 
  // <S1>/Goto16
  // 
  // <S1>/From376
  // 
  // <S119>/Switch15
  // 
  // <S137>/B37
  // 
  // <S1>/sign_handle_1
  // 
  // <S1>/Goto16
  // 
  // <S1>/From222
  // 
  // <S129>/Switch15
  assign Switch28_out1_1 = (CT0_0_out1_2 == 1'b0 ? UM_0_out1 :
              Switch29_out1);



  // <S129>/Switch15
  // 
  // <S129>/Switch15
  // 
  // <S129>/Switch15
  // 
  // <S129>/Demux2
  assign signal1_91 = (CT9_out1 == 1'b0 ? s1z4_out1_15 :
              Switch28_out1_1);



  assign signal1_92 = signal1_91;

  // <S129>/s1z4
  // 
  // <S1>/Goto178
  // 
  // <S1>/From127
  // 
  // <S1>/B12
  // 
  // <S129>/B10
  // 
  // <S1>/pro_sub_4
  // 
  // <S129>/Switch15
  // 
  // <S1>/Goto178
  // 
  // <S1>/From55
  // 
  // <S1>/Goto178
  // 
  // <S1>/From127
  // 
  // <S1>/B12
  always @(posedge g_clk)
    begin : s1z412_process
      if (Rst_n == 1'b0) begin
        s1z4_out1_15 <= 16'sb0000000000000000;
      end
      else begin
        s1z4_out1_15 <= signal1_92;
      end
    end



  // <S1>/Switch36
  // 
  // <S1>/Goto4
  // 
  // <S1>/From36
  assign s_117 = s1z4_out1_15;

  // <S1>/Switch36
  // 
  // <S1>/Goto4
  // 
  // <S1>/From27
  assign s_118 = s1z4_out1_15;

  // <S1>/Switch36
  assign signal3_19 = (CT0_out1 == 1'b0 ? Switch1_out1 :
              Switch1_out1);



  // <S1>/Goto46
  assign signal3_20 = signal3_19;

  // <S1>/In0
  assign signal3_21 = signal3_20;

  // <S1>/Switch36
  // 
  // <S1>/Switch36
  // 
  // <S1>/Goto6
  // 
  // <S1>/From84
  assign signal1_93 = (CT0_out1 == 1'b0 ? s_117 :
              s_118);



  // <S1>/Bus Selector4
  // 
  // <S1>/Goto7
  assign signal1_94 = signal1_93;

  // <S1>/In1
  assign signal1_95 = signal1_94;

  // <S1>/Add5
  assign Add5_1 = {{5{signal3_21[11]}}, signal3_21};
  assign Add5_2 = {signal1_95[15], signal1_95};
  assign Add5_out1 = Add5_1 + Add5_2;



  // <S1>/Switch36
  assign signal4 = (CT0_out1 == 1'b0 ? UmRefUp_b12 :
              UmRefUp_b12);



  // <S1>/Goto11
  assign signal4_1 = signal4;

  // <S1>/In2
  assign signal4_2 = signal4_1;

  // <S1>/RO1
  assign RO1_1_1 = {{5{signal4_2[11]}}, signal4_2};
  assign RO1_relop1 = Add5_out1 > RO1_1_1;



  assign signal4_dtc = {{5{signal4_2[11]}}, signal4_2};



  // <S1>/Switch39
  assign Switch39_out1 = (RO1_relop1 == 1'b0 ? Add5_out1 :
              signal4_dtc);



  // <S1>/Switch36
  assign signal5 = (CT0_out1 == 1'b0 ? UmRefLow_b12 :
              UmRefLow_b12);



  // <S1>/Goto12
  assign signal5_1 = signal5;

  // <S1>/In3
  assign signal5_2 = signal5_1;

  // <S1>/RO12
  assign RO12_1_1 = {{5{signal5_2[11]}}, signal5_2};
  assign RO12_relop1 = Switch39_out1 < RO12_1_1;



  assign Switch39_out1_dtc = Switch39_out1[11:0];



  // <S1>/Switch40
  assign Switch40_out1 = (RO12_relop1 == 1'b0 ? Switch39_out1_dtc :
              signal5_2);



  // <S1>/RO7
  assign RO7_relop1 = Add_out1 > 33'sh0007FFFFF;



  assign Constant10_out1_dtc = 33'sh0007FFFFF;



  // <S1>/Switch13
  assign Switch13_out1 = (RO7_relop1 == 1'b0 ? Add_out1 :
              Constant10_out1_dtc);



  // <S1>/RO4
  assign RO4_relop1 = Switch13_out1 < 33'sh1FF800000;



  assign Constant12_out1_dtc = 33'sh1FF800000;



  // <S1>/Switch14
  assign Switch14_out1 = (RO4_relop1 == 1'b0 ? Switch13_out1 :
              Constant12_out1_dtc);



  // <S1>/Data Type Conversion2
  // 
  // <S1>/B36
  // 
  // <S1>/Goto127
  // 
  // <S1>/From23
  // 
  // <S130>/Switch15
  assign Data_Type_Conversion2_out1 = Switch14_out1[23:0];



  // <S130>/Switch15
  // 
  // <S130>/Switch15
  // 
  // <S130>/Switch15
  // 
  // <S130>/Demux2
  assign signal1_96 = (CT10_out1 == 1'b0 ? s1z4_out1_16 :
              Data_Type_Conversion2_out1);



  assign signal1_97 = signal1_96;

  // <S130>/s1z4
  // 
  // <S1>/Goto179
  // 
  // <S1>/From56
  // 
  // <S130>/B10
  // 
  // <S1>/pro_sub_5
  // 
  // <S130>/Switch15
  // 
  // <S1>/Goto179
  // 
  // <S1>/From56
  always @(posedge g_clk)
    begin : s1z413_process
      if (Rst_n == 1'b0) begin
        s1z4_out1_16 <= 24'sb000000000000000000000000;
      end
      else begin
        s1z4_out1_16 <= signal1_97;
      end
    end



  assign s_119 = s1z4_out1_16;

  assign s_120 = s1z4_out1_16;

  // <S1>/OR4
  assign OR4_out1_2 = Switch177_out1 & CtlLoopOn;



  assign switch_compare_1_4 = OR4_out1_2 > 1'b0;



  // <S1>/Switch36
  assign signal2_97 = (CT0_out1 == 1'b0 ? s_119 :
              s_120);



  // <S1>/Goto45
  assign signal2_98 = signal2_97;

  // <S1>/In5
  assign signal2_99 = signal2_98;

  // <S1>/Switch43
  assign Switch43_out1 = (switch_compare_1_4 == 1'b0 ? 24'sb000000000000000000000000 :
              signal2_99);



  assign Constant25_out1_dtc = 30'sb000000000000000000000000000000;



  // <S1>/Add6
  assign Add6_1 = {signal4_2[11], signal4_2};
  assign Add6_2 = {Switch40_out1[11], Switch40_out1};
  assign Add6_out1 = Add6_1 - Add6_2;



  // <S1>/Bit Concat1
  assign Bit_Concat1_out1 = {Add6_out1, 8'b00000000};



  // <S1>/Data Type S19
  // 
  // <S1>/Goto53
  // 
  // <S1>/In7
  assign Data_Type_S19_out1 = Bit_Concat1_out1;



  assign In7_out1_dtc = {{9{Data_Type_S19_out1[20]}}, Data_Type_S19_out1};



  // <S1>/Add3
  assign Add3_1 = {signal5_2[11], signal5_2};
  assign Add3_2 = {Switch40_out1[11], Switch40_out1};
  assign Add3_out1 = Add3_1 - Add3_2;



  // <S1>/Bit Concat3
  assign Bit_Concat3_out1 = {Add3_out1, 8'b00000000};



  // <S1>/Data Type S1
  // 
  // <S1>/Goto56
  // 
  // <S1>/In8
  assign Data_Type_S1_out1 = Bit_Concat3_out1;



  assign In8_out1_dtc = {{9{Data_Type_S1_out1[20]}}, Data_Type_S1_out1};



  assign s_121 = Switch17_out1_8;

  // <S1>/Switch48
  // 
  // <S1>/Goto59
  // 
  // <S1>/From87
  assign Switch48_out1 = (CtlLoopOn == 1'b0 ? 30'sb000000000000000000000000000000 :
              Switch42_out1);



  // <S1>/Switch37
  assign Switch37_out1 = (CT0_out1 == 1'b0 ? Unit_Delay18_out1 :
              Switch48_out1);



  // <S1>/Unit Delay18
  // 
  // <S1>/Goto3
  // 
  // <S1>/In9
  always @(posedge g_clk)
    begin : Unit_Delay18_process
      if (Rst_n == 1'b0) begin
        Unit_Delay18_out1 <= 30'sb000000000000000000000000000000;
      end
      else begin
        Unit_Delay18_out1 <= Switch37_out1;
      end
    end



  // <S1>/Switch17
  assign Switch17_out1_8 = (VF0PQ1 == 1'b0 ? Constant25_out1_dtc :
              Unit_Delay18_out1);



  assign s_122 = Switch17_out1_8;

  // <S1>/Switch36
  assign signal6 = (CT0_out1 == 1'b0 ? s_122 :
              s_121);



  // <S1>/Goto17
  assign signal6_1 = signal6;

  // <S1>/In6
  assign signal6_2 = signal6_1;

  // <S1>/Add8
  assign Add8_1 = {{7{Switch43_out1[23]}}, Switch43_out1};
  assign Add8_2 = {signal6_2[29], signal6_2};
  assign Add8_add_temp = Add8_1 + Add8_2;
  assign Add8_out1 = Add8_add_temp[29:0];



  // <S1>/RO13
  assign RO13_1_1 = {{9{Data_Type_S19_out1[20]}}, Data_Type_S19_out1};
  assign RO13_relop1 = Add8_out1 > RO13_1_1;



  // <S1>/Switch41
  assign Switch41_out1 = (RO13_relop1 == 1'b0 ? Add8_out1 :
              In7_out1_dtc);



  // <S1>/RO14
  assign RO14_1_1 = {{9{Data_Type_S1_out1[20]}}, Data_Type_S1_out1};
  assign RO14_relop1 = Switch41_out1 < RO14_1_1;



  // <S1>/Switch42
  assign Switch42_out1 = (RO14_relop1 == 1'b0 ? Switch41_out1 :
              In8_out1_dtc);



  // <S1>/Bit Slice9
  assign Bit_Slice9_out1 = Switch42_out1[29:8];



  // <S1>/Data Type S9
  // 
  // <S1>/Goto206
  // 
  // <S1>/In4
  assign Data_Type_S9_out1 = Bit_Slice9_out1;



  // <S1>/Add9
  assign Add9_1 = {{11{Switch40_out1[11]}}, Switch40_out1};
  assign Add9_2 = {Data_Type_S9_out1[21], Data_Type_S9_out1};
  assign Add9_out1 = Add9_1 + Add9_2;



  // <S1>/Data Type S8
  // 
  // <S1>/Goto70
  // 
  // <S1>/From89
  assign Data_Type_S8_out1 = Add9_out1[11:0];



  // <S1>/Switch38
  assign Switch38_out1 = (CT0_out1 == 1'b0 ? Unit_Delay19_out1 :
              Data_Type_S8_out1);



  // <S1>/Unit Delay19
  // 
  // <S1>/Goto51
  // 
  // <S1>/From131
  always @(posedge g_clk)
    begin : Unit_Delay19_process
      if (Rst_n == 1'b0) begin
        Unit_Delay19_out1 <= 12'sb000000000000;
      end
      else begin
        Unit_Delay19_out1 <= Switch38_out1;
      end
    end



  assign Umref_vsg_b12 = Unit_Delay19_out1;

  // <S1>/From188
  assign y_1 = BS_0_out1;

  assign wt_vsg_b13 = y_1;

  assign Wref_add_b18 = DLY_0_out1_11;

  assign Freq_Droop_b16 = s1z4_out1;

  // <S100>/add_SW_1
  assign add_SW_1_out1_29 = (CT39_out1 == 1'b0 ? DLY_0_out1_32 :
              DTC_0_out1);



  // <S100>/DLY_0
  // 
  // <S1>/Goto203
  // 
  // <S1>/From372
  always @(posedge g_clk)
    begin : DLY_019_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_32 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_32 <= add_SW_1_out1_29;
      end
    end



  assign Pref_out_b16 = DLY_0_out1_32;

  // <S87>/add_SW_1
  assign add_SW_1_out1_30 = (CT5_out1 == 1'b0 ? DLY_0_out1_33 :
              DTC_0_out1);



  // <S87>/DLY_0
  always @(posedge g_clk)
    begin : DLY_06_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_33 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_33 <= add_SW_1_out1_30;
      end
    end



  // <S126>/Switch15
  // 
  // <S126>/Switch15
  // 
  // <S126>/Switch15
  // 
  // <S126>/Demux2
  assign signal1_98 = (CT29_out1 == 1'b0 ? s1z4_out1_17 :
              Data_Type_Conversion1_out1);



  assign signal1_99 = signal1_98;

  // <S126>/s1z4
  // 
  // <S126>/B10
  // 
  // <S1>/pro_sub_18
  // 
  // <S126>/Switch15
  always @(posedge g_clk)
    begin : s1z49_process
      if (Rst_n == 1'b0) begin
        s1z4_out1_17 <= 16'sb0000000000000000;
      end
      else begin
        s1z4_out1_17 <= signal1_99;
      end
    end



  // <S71>/RO16
  assign RO165_relop1 = slow_VSGQLimit_b16 > s1z4_out1_17;



  // <S71>/Switch16
  assign Switch16_out1_9 = (RO165_relop1 == 1'b0 ? slow_VSGQLimit_b16 :
              s1z4_out1_17);



  // <S1>/UM_21
  assign UM_21_in0 =  - ({slow_VSGQLimit_b16[15], slow_VSGQLimit_b16});
  assign UM_21_out1 = UM_21_in0[15:0];



  // <S71>/RO1
  // 
  // <S1>/Staturation15
  assign RO112_relop1 = Switch16_out1_9 > UM_21_out1;



  // <S71>/Switch17
  assign Switch17_out1_9 = (RO112_relop1 == 1'b0 ? UM_21_out1 :
              Switch16_out1_9);



  // <S1>/Switch50
  // 
  // <S1>/Goto273
  // 
  // <S1>/From492
  // 
  // <S1>/Goto273
  // 
  // <S1>/From502
  assign Switch50_out1 = (Fvr_En == 1'b0 ? 16'sb0000000000000000 :
              Switch17_out1_9);



  // <S1>/Subsystem1
  Subsystem1   u_Subsystem1   (.In1(DLY_0_out1_33),  // int16
                               .In2(Switch50_out1),  // int16
                               .Out1(Subsystem1_out1)  // int16
                               );

  // <S74>/RO16
  assign RO168_relop1 = ACDisQLimit_16 > Subsystem1_out1;



  // <S74>/Switch16
  assign Switch16_out1_10 = (RO168_relop1 == 1'b0 ? ACDisQLimit_16 :
              Subsystem1_out1);



  // <S74>/RO1
  // 
  // <S1>/Staturation3
  assign RO115_relop1 = Switch16_out1_10 > ACChgQLimit_16;



  // <S74>/Switch17
  // 
  // <S1>/Goto159
  // 
  // <S1>/From197
  assign Switch17_out1_10 = (RO115_relop1 == 1'b0 ? ACChgQLimit_16 :
              Switch16_out1_10);



  assign Qref_out_b16 = Switch17_out1_10;

  // <S1>/CT11
  assign CT11_out1 = DLY_0_out1_26 <= 16'sb1111000000000000;



  // <S1>/CT7
  assign CT7_out1 = DLY_0_out1_26 >= 16'sb0001000000000000;



  // <S89>/add_SW_1
  assign add_SW_1_out1_31 = (CT13_out1 == 1'b0 ? DLY_0_out1_34 :
              DTC_0_out1);



  // <S89>/DLY_0
  // 
  // <S1>/Goto93
  // 
  // <S1>/From182
  // 
  // <S1>/From171
  always @(posedge g_clk)
    begin : DLY_08_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_34 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_34 <= add_SW_1_out1_31;
      end
    end



  // <S1>/Switch9
  assign Switch9_out1 = (CT7_out1 == 1'b0 ? DLY_0_out1_26 :
              DLY_0_out1_34);



  // <S90>/add_SW_1
  assign add_SW_1_out1_32 = (CT14_out1 == 1'b0 ? DLY_0_out1_35 :
              DTC_0_out1);



  // <S90>/DLY_0
  // 
  // <S1>/Goto98
  // 
  // <S1>/From183
  // 
  // <S1>/From173
  always @(posedge g_clk)
    begin : DLY_09_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_35 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_35 <= add_SW_1_out1_32;
      end
    end



  // <S1>/Switch10
  assign Switch10_out1 = (CT11_out1 == 1'b0 ? Switch9_out1 :
              DLY_0_out1_35);



  // <S1>/Switch15
  assign Switch15_out1 = (CT15_out1 == 1'b0 ? Dly_11_out1 :
              Switch10_out1);



  // <S1>/Dly_11
  // 
  // <S1>/Goto101
  // 
  // <S1>/From176
  // 
  // <S1>/From184
  // 
  // <S1>/From175
  always @(posedge g_clk)
    begin : Dly_11_process
      if (Rst_n == 1'b0) begin
        Dly_11_out1 <= 16'sb0000000000000000;
      end
      else begin
        Dly_11_out1 <= Switch15_out1;
      end
    end



  assign wt_err_b16 = Dly_11_out1;

  assign W_err_b16 = DLY_0_out1_4;

  assign Werr_Flted_b16 = Data_Type_S11_out1;

  assign dW_b16 = DLY_0_out1_13;

  assign dU_b16 = s1z4_out1_15;

  assign Pref_addFfr_b16 = Switch17_out1_5;

  assign Pref_Soft_b16 = DLY_0_out1_15;

  assign Qref_Soft_b16 = DLY_0_out1_18;

  assign fast_dP_Ffr_b16 = Switch17_out1_2;

  assign fast_dQ_Fvr_b16 = Switch17_out1_3;

  assign fast_dP_Inertia_b16 = Switch17_out1_6;

  // <S98>/add_SW_1
  assign add_SW_1_out1_33 = (CT34_out1 == 1'b0 ? DLY_0_out1_36 :
              DTC_0_out1);



  // <S98>/DLY_0
  always @(posedge g_clk)
    begin : DLY_017_process
      if (Rst_n == 1'b0) begin
        DLY_0_out1_36 <= 16'sb0000000000000000;
      end
      else begin
        DLY_0_out1_36 <= add_SW_1_out1_33;
      end
    end



  // <S75>/RO16
  assign RO169_relop1 = 16'sb0000000000001111 > DLY_0_out1_36;



  // <S75>/Switch16
  assign Switch16_out1_11 = (RO169_relop1 == 1'b0 ? 16'sb0000000000001111 :
              DLY_0_out1_36);



  // <S75>/RO1
  // 
  // <S1>/Staturation4
  assign RO116_relop1 = Switch16_out1_11 > 16'sb1111111111110001;



  // <S75>/Switch17
  assign Switch17_out1_11 = (RO116_relop1 == 1'b0 ? 16'sb1111111111110001 :
              Switch16_out1_11);



  // <S1>/Gain1
  // 
  // <S1>/Goto189
  // 
  // <S1>/From307
  // 
  // <S1>/From296
  // 
  // <S4>/Goto9
  // 
  // <S4>/From1
  // 
  // <S4>/B23
  // 
  // <S4>/Goto104
  // 
  // <S4>/From5
  // 
  // <S4>/Switch1
  // 
  // <S1>/Goto189
  // 
  // <S1>/From307
  // 
  // <S1>/From380
  assign Gain1_cast = {{2{Switch17_out1_11[15]}}, {Switch17_out1_11, 14'b00000000000000}};
  assign Gain1_out1 = Gain1_cast[22:7];



  assign dWdt_b16_1 = Gain1_out1;

  // <S4>/Add2
  assign Add2_out1_1 = 2'b01 + Unit_Delay123_out1_1;



  // <S4>/Unit Delay123
  // 
  // <S4>/Goto169
  // 
  // <S4>/From11
  // 
  // <S4>/Goto169
  // 
  // <S4>/From25
  // 
  // <S4>/Goto169
  // 
  // <S4>/From24
  // 
  // <S4>/Goto169
  // 
  // <S4>/From18
  always @(posedge g_clk)
    begin : Unit_Delay123_process
      if (Rst_n == 1'b0) begin
        Unit_Delay123_out1_1 <= 2'b00;
      end
      else begin
        Unit_Delay123_out1_1 <= Add2_out1_1;
      end
    end



  // <S4>/CT3
  // 
  // <S4>/Goto42
  // 
  // <S4>/From3
  // 
  // <S4>/From26
  // 
  // <S4>/Goto42
  // 
  // <S4>/From3
  // 
  // <S4>/From37
  // 
  // <S4>/Goto42
  // 
  // <S4>/From3
  // 
  // <S4>/From32
  assign CT3_out1_1 = Unit_Delay123_out1_1 == 2'b00;



  // <S4>/Switch20
  assign Switch20_out1_1 = (CT34_out1 == 1'b0 ? Unit_Delay54_out1 :
              1'b1);



  // <S4>/Switch17
  assign Switch17_out1_12 = (CT3_out1_1 == 1'b0 ? Switch20_out1_1 :
              1'b0);



  // <S4>/Unit Delay54
  always @(posedge g_clk)
    begin : Unit_Delay54_process
      if (Rst_n == 1'b0) begin
        Unit_Delay54_out1 <= 1'b0;
      end
      else begin
        Unit_Delay54_out1 <= Switch17_out1_12;
      end
    end



  // <S4>/Or3
  assign Or3_out1_2 = CT34_out1 | Unit_Delay54_out1;



  // <S4>/Unit Delay55
  always @(posedge g_clk)
    begin : Unit_Delay55_process
      if (Rst_n == 1'b0) begin
        Unit_Delay55_out1 <= 1'b0;
      end
      else begin
        Unit_Delay55_out1 <= Switch208_out1;
      end
    end



  // <S4>/Switch208
  // 
  // <S4>/Goto191
  // 
  // <S4>/From2
  // 
  // <S4>/From170
  // 
  // <S4>/Goto191
  // 
  // <S4>/From2
  // 
  // <S4>/From170
  // 
  // <S4>/Goto191
  // 
  // <S4>/From2
  // 
  // <S4>/From431
  assign Switch208_out1 = (CT3_out1_1 == 1'b0 ? Unit_Delay55_out1 :
              Or3_out1_2);



  // <S4>/Switch83
  assign Switch83_out1_2 = (Switch208_out1 == 1'b0 ? 9'b000000000 :
              9'b000000001);



  // <S4>/Add11
  // 
  // <S1>/AverFilterP1024Ch4b16_V3
  assign Add113_add_temp = ({4'b0, Switch83_out1_2}) + ({1'b0, Unit_Delay32_out1_2});
  assign Add11_out1_3 = Add113_add_temp[11:0];



  // <S4>/Unit Delay32
  always @(posedge g_clk)
    begin : Unit_Delay322_process
      if (Rst_n == 1'b0) begin
        Unit_Delay32_out1_2 <= 12'b000000000000;
      end
      else begin
        Unit_Delay32_out1_2 <= Add11_out1_3;
      end
    end



  // <S4>/Ro10
  // 
  // <S4>/Goto197
  // 
  // <S4>/From435
  assign Ro102_relop1 = Unit_Delay32_out1_2 > Add11_out1_3;



  // <S4>/Switch49
  assign Switch49_out1_3 = (Ro102_relop1 == 1'b0 ? Unit_Delay57_out1_3 :
              1'b1);



  // <S4>/Unit Delay57
  // 
  // <S4>/Goto198
  // 
  // <S4>/From439
  always @(posedge g_clk)
    begin : Unit_Delay572_process
      if (Rst_n == 1'b0) begin
        Unit_Delay57_out1_3 <= 1'b0;
      end
      else begin
        Unit_Delay57_out1_3 <= Switch49_out1_3;
      end
    end



  // <S4>/Unit Delay1
  always @(posedge g_clk)
    begin : Unit_Delay12_process
      if (Rst_n == 1'b0) begin
        Unit_Delay1_out1_2 <= 1'b0;
      end
      else begin
        Unit_Delay1_out1_2 <= Switch105_out1_2;
      end
    end



  // <S4>/Switch105
  // 
  // <S4>/Goto
  // 
  // <S4>/From12
  // 
  // <S4>/Goto
  // 
  // <S4>/From169
  assign Switch105_out1_2 = (Switch208_out1 == 1'b0 ? Unit_Delay1_out1_2 :
              Unit_Delay57_out1_3);



  assign switch_compare_1_5 = Switch105_out1_2 > 1'b0;



  assign Constant26_out1_dtc_2 = 26'sb00000000000000000000000000;



  assign Constant35_out1_dtc_4 = 16'sb0000000000000000;



  assign switch_compare_1_6 = Switch105_out1_2 > 1'b0;



  assign Constant34_out1_dtc_2 = 16'sb0000000000000000;



  // <S4>/CT4
  // 
  // <S4>/Goto28
  // 
  // <S4>/From10
  // 
  // <S4>/Goto28
  // 
  // <S4>/From15
  assign CT4_out1_1 = Unit_Delay123_out1_1 == 2'b01;



  // <S4>/CT8
  // 
  // <S4>/Goto34
  // 
  // <S4>/From21
  // 
  // <S4>/Goto34
  // 
  // <S4>/From28
  assign CT8_out1_1 = Unit_Delay123_out1_1 == 2'b10;



  // <S4>/CT1
  // 
  // <S4>/Goto40
  // 
  // <S4>/From30
  // 
  // <S4>/Goto40
  // 
  // <S4>/From34
  assign CT1_out1_1 = Unit_Delay123_out1_1 == 2'b11;



  assign Constant35_out1_dtc_5 = 16'sb0000000000000000;



  // <S4>/Add12
  assign Add12_out1_2 = Add11_out1_3 + 12'b000000000001;



  // <S4>/Switch8
  assign Switch8_out1_1 = (CT1_out1_1 == 1'b0 ? Unit_Delay4_out1 :
              Switch79_out1_2);



  // <S4>/Unit Delay4
  // 
  // <S4>/Goto10
  // 
  // <S4>/From22
  // 
  // <S4>/Goto10
  // 
  // <S4>/From23
  // 
  // <S4>/Goto10
  // 
  // <S4>/From22
  always @(posedge g_clk)
    begin : Unit_Delay4_process
      if (Rst_n == 1'b0) begin
        Unit_Delay4_out1 <= 26'sb00000000000000000000000000;
      end
      else begin
        Unit_Delay4_out1 <= Switch8_out1_1;
      end
    end



  // <S4>/Switch4
  assign signal2_100 = (CT1_out1_1 == 1'b0 ? Unit_Delay4_out1 :
              Unit_Delay4_out1);



  assign s_123 = signal2_100;

  // <S4>/Switch3
  assign signal2_101 = (CT8_out1_1 == 1'b0 ? s_123 :
              Unit_Delay3_out1);



  assign s_124 = signal2_101;

  // <S4>/Switch2
  assign signal2_102 = (CT4_out1_1 == 1'b0 ? s_124 :
              Unit_Delay2_out1);



  assign s_125 = signal2_102;

  // <S4>/Switch1
  assign signal2_103 = (CT3_out1_1 == 1'b0 ? s_125 :
              Unit_Delay30_out1_2);



  // <S4>/Goto106
  assign signal2_104 = signal2_103;

  // <S4>/In12
  assign signal2_105 = signal2_104;

  // <S4>/Simple Dual Port RAM2
  SimpDualPortRAM_Wrapper_generic   #  (.AddrWidth(12),
                                        .DataWidth(16)
                                        )
                                    u_Simple_Dual_Port_RAM2_2   (.g_clk(g_clk),
                                                                 .wr_din(Switch84_out1_2),
                                                                 .wr_addr(Add11_out1_3),
                                                                 .wr_en(Switch208_out1),
                                                                 .rd_addr(Add12_out1_2),
                                                                 .rd_dout(Simple_Dual_Port_RAM2_out1_2)
                                                                 );

  // <S4>/Switch98
  assign Switch98_out1_3 = (Switch208_out1 == 1'b0 ? Constant35_out1_dtc_5 :
              Simple_Dual_Port_RAM2_out1_2);



  // <S4>/Switch6
  assign Switch6_out1_1 = (CT4_out1_1 == 1'b0 ? Unit_Delay2_out1 :
              Switch79_out1_2);



  // <S4>/Unit Delay2
  // 
  // <S4>/Goto6
  // 
  // <S4>/From8
  // 
  // <S4>/Goto6
  // 
  // <S4>/From9
  always @(posedge g_clk)
    begin : Unit_Delay2_process
      if (Rst_n == 1'b0) begin
        Unit_Delay2_out1 <= 26'sb00000000000000000000000000;
      end
      else begin
        Unit_Delay2_out1 <= Switch6_out1_1;
      end
    end



  // <S4>/Bit Slice1
  assign Bit_Slice1_out1_1 = Unit_Delay2_out1[25:10];



  // <S4>/Data Type S1
  // 
  // <S4>/Goto11
  // 
  // <S4>/From4
  // 
  // <S1>/Goto193
  // 
  // <S1>/From299
  // 
  // <S4>/Goto4
  // 
  // <S4>/From14
  // 
  // <S4>/B2
  // 
  // <S4>/Goto16
  // 
  // <S4>/From29
  // 
  // <S4>/Switch3
  assign Data_Type_S1_out1_1 = Bit_Slice1_out1_1;



  // <S4>/Switch7
  assign Switch7_out1 = (CT8_out1_1 == 1'b0 ? Unit_Delay3_out1 :
              Switch79_out1_2);



  // <S4>/Unit Delay3
  // 
  // <S4>/Goto7
  // 
  // <S4>/From16
  // 
  // <S4>/Goto7
  // 
  // <S4>/From17
  always @(posedge g_clk)
    begin : Unit_Delay3_process
      if (Rst_n == 1'b0) begin
        Unit_Delay3_out1 <= 26'sb00000000000000000000000000;
      end
      else begin
        Unit_Delay3_out1 <= Switch7_out1;
      end
    end



  // <S4>/Bit Slice2
  assign Bit_Slice2_out1_1 = Unit_Delay3_out1[25:10];



  // <S4>/Data Type S2
  // 
  // <S4>/Goto13
  // 
  // <S4>/From13
  // 
  // <S1>/Goto194
  // 
  // <S1>/From300
  // 
  // <S4>/Goto5
  // 
  // <S4>/From20
  // 
  // <S4>/B3
  // 
  // <S4>/Goto21
  // 
  // <S4>/From31
  // 
  // <S4>/Switch4
  // 
  // <S4>/Goto13
  // 
  // <S4>/From13
  // 
  // <S1>/Goto194
  // 
  // <S1>/From300
  // 
  // <S4>/Goto5
  // 
  // <S4>/From20
  // 
  // <S4>/B3
  // 
  // <S4>/Goto21
  // 
  // <S4>/From31
  // 
  // <S4>/Switch4
  assign Data_Type_S2_out1 = Bit_Slice2_out1_1;



  // <S4>/Switch4
  // 
  // <S4>/Switch4
  // 
  // <S4>/Switch4
  assign signal1_100 = (CT1_out1_1 == 1'b0 ? Data_Type_S2_out1 :
              Data_Type_S2_out1);



  // <S4>/Switch3
  assign s_126 = signal1_100;

  // <S4>/Switch3
  // 
  // <S4>/Switch3
  // 
  // <S4>/Switch3
  assign signal1_101 = (CT8_out1_1 == 1'b0 ? s_126 :
              Data_Type_S1_out1_1);



  // <S4>/Switch2
  assign s_127 = signal1_101;

  // <S4>/Switch2
  // 
  // <S4>/Switch2
  // 
  // <S4>/Switch2
  assign signal1_102 = (CT4_out1_1 == 1'b0 ? s_127 :
              Data_Type_S11_out1_2);



  // <S4>/Switch1
  assign s_128 = signal1_102;

  // <S4>/Switch1
  // 
  // <S4>/Switch1
  // 
  // <S4>/Switch1
  assign signal1_103 = (CT3_out1_1 == 1'b0 ? s_128 :
              Gain1_out1);



  // <S4>/Bus Selector6
  // 
  // <S4>/Goto103
  assign signal1_104 = signal1_103;

  // <S4>/In13
  assign signal1_105 = signal1_104;

  // <S4>/Switch84
  assign Switch84_out1_2 = (switch_compare_1_6 == 1'b0 ? Constant34_out1_dtc_2 :
              signal1_105);



  // <S4>/Switch97
  assign Switch97_out1_2 = (Switch208_out1 == 1'b0 ? Constant35_out1_dtc_4 :
              Switch84_out1_2);



  assign Add7_stage22_1 = {{11{Switch97_out1_2[15]}}, Switch97_out1_2};
  assign Add7_stage22_2 = {{11{Switch98_out1_3[15]}}, Switch98_out1_3};
  assign Add7_op_stage2_2 = Add7_stage22_1 - Add7_stage22_2;



  // <S4>/Add7
  assign Add7_stage32_1 = {signal2_105[25], signal2_105};
  assign Add7_stage32_add_temp = Add7_op_stage2_2 + Add7_stage32_1;
  assign Add7_out1_3 = Add7_stage32_add_temp[25:0];



  // <S4>/Switch79
  // 
  // <S4>/Goto95
  // 
  // <S4>/From167
  // 
  // <S4>/Goto95
  // 
  // <S4>/From7
  // 
  // <S4>/Goto95
  // 
  // <S4>/From35
  // 
  // <S4>/Goto95
  // 
  // <S4>/From33
  assign Switch79_out1_2 = (switch_compare_1_5 == 1'b0 ? Constant26_out1_dtc_2 :
              Add7_out1_3);



  // <S4>/Switch5
  assign Switch5_out1_1 = (CT3_out1_1 == 1'b0 ? Unit_Delay30_out1_2 :
              Switch79_out1_2);



  // <S4>/Unit Delay30
  // 
  // <S4>/Goto101
  // 
  // <S4>/From175
  // 
  // <S4>/Goto101
  // 
  // <S4>/From204
  always @(posedge g_clk)
    begin : Unit_Delay302_process
      if (Rst_n == 1'b0) begin
        Unit_Delay30_out1_2 <= 26'sb00000000000000000000000000;
      end
      else begin
        Unit_Delay30_out1_2 <= Switch5_out1_1;
      end
    end



  // <S4>/Bit Slice6
  assign Bit_Slice6_out1_2 = Unit_Delay30_out1_2[25:10];



  // <S4>/Data Type S11
  // 
  // <S4>/Goto109
  // 
  // <S4>/From
  // 
  // <S1>/Goto192
  // 
  // <S1>/From305
  // 
  // <S1>/From298
  // 
  // <S4>/Goto3
  // 
  // <S4>/From6
  // 
  // <S4>/B1
  // 
  // <S4>/Goto8
  // 
  // <S4>/From27
  // 
  // <S4>/Switch2
  // 
  // <S4>/Goto109
  // 
  // <S4>/From
  // 
  // <S1>/Goto192
  // 
  // <S1>/From305
  // 
  // <S1>/From382
  assign Data_Type_S11_out1_2 = Bit_Slice6_out1_2;



  assign dWdt_lpf1_b16 = Data_Type_S11_out1_2;

  // <S4>/Bit Slice3
  assign Bit_Slice3_out1_1 = Unit_Delay4_out1[25:10];



  // <S4>/Data Type S3
  // 
  // <S4>/Goto18
  // 
  // <S4>/From19
  // 
  // <S1>/Goto195
  // 
  // <S1>/From306
  // 
  // <S1>/From311
  // 
  // <S1>/From383
  assign Data_Type_S3_out1 = Bit_Slice3_out1_1;



  assign dWdt_lpf4_b16 = Data_Type_S3_out1;

  // <S1>/Or2
  assign Or2_out1_1 = RO_5_relop1 | (RO_6_relop1 | (RO_3_relop1 | RO_2_relop1));



  // <S1>/Or13
  // 
  // <S1>/Goto136
  // 
  // <S1>/From477
  assign Or13_out1 = Or2_out1_1 & Ffr_En;



  assign Ffr_Running = Or13_out1;

  // <S1>/Or14
  assign Or14_out1 = RO_1_relop1 | RO_4_relop1;



  // <S1>/Or15
  // 
  // <S1>/Goto256
  // 
  // <S1>/From476
  assign Or15_out1 = Or14_out1 & Fvr_En;



  assign Fvr_Running = Or15_out1;

  // <S1>/Or17
  assign Or17_out1 = RO10_relop1_1 | RO15_relop1;



  // <S1>/Or16
  // 
  // <S1>/Goto257
  // 
  // <S1>/From469
  assign Or16_out1 = Or17_out1 & OR5_out1_1;



  assign Inr_Running = Or16_out1;

  assign slow_dP_Ffr_b16 = Switch49_out1_2;

  assign slow_dQ_Fvr_b16 = Switch50_out1;

  assign slow_Werr_Flted_b16 = Data_Type_S11_out1_1;

  // <S1>/Add12
  assign Add12_1 = {Switch49_out1_2[15], Switch49_out1_2};
  assign Add12_2 = {Switch17_out1_2[15], Switch17_out1_2};
  assign Add12_add_temp = Add12_1 + Add12_2;
  assign Add12_out1_3 = {Add12_add_temp[16], Add12_add_temp};



  assign dP_Ffr_b16 = Add12_out1_3;

  // <S2>/Scope2

  // <S3>/Scope2

  // <S4>/Scope3

  // <S1>/Display3

  // <S1>/Display4

  // <S1>/Display5

  // <S1>/Scope1

  // <S1>/Scope2

  // <S1>/Scope3

  // <S1>/Scope4

  // <S1>/Scope5

  // <S1>/Scope6

  // <S1>/Scope8

endmodule  // VsgCtrlLoopV38Z

