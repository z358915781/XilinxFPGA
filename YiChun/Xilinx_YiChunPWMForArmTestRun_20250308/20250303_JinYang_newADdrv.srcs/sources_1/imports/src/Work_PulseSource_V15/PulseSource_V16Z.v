// -------------------------------------------------------------
// 
// File Name: I:\XMJ_JJ\ZJ_V1\PulseSource_V16Z\PulseSource_V16Z.v
// Created: 2021-11-07 21:35:39
// 
// Generated by MATLAB 9.1 and HDL Coder 3.9
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 4e-08
// Target subsystem base rate: 4e-08
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: PulseSource_V16Z
// Source Path: PulseSource_V16Z/PulseSource_V16Z
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module PulseSource_V16Z
          (
           g_clk,
           Rst_n,
           Pulse4096Hz,
           Pulse8192Hz,
           Pulse50x32Hz,
           Pulse44p7035Hz,
           SqWave100kHz,
           Start_1sOn,
           Start_2sOn,
           Start_5sOn,
           Start_10sOn,
           wt,
           Pulse4096x4Hz,
           Pulse98p3477Hz
          );



  input   g_clk;
  input   Rst_n;
  output  Pulse4096Hz;
  output  Pulse8192Hz;
  output  Pulse50x32Hz;
  output  Pulse44p7035Hz;
  output  SqWave100kHz;
  output  Start_1sOn;
  output  Start_2sOn;
  output  Start_5sOn;
  output  Start_10sOn;
  output  [12:0] wt;  // ufix13
  output  Pulse4096x4Hz;
  output  Pulse98p3477Hz;

  wire [22:0] Add7_out1;  // ufix23
  reg [22:0] Unit_Delay13_out1;  // ufix23
  wire Relational_Operator3_relop1;
  reg  Unit_Delay14_out1;
  wire [21:0] Bit_Slice_out1;  // ufix22
  reg [21:0] Unit_Delay15_out1;  // ufix22
  wire Relational_Operator4_relop1;
  reg  Unit_Delay16_out1;
  wire [22:0] Add2_out1;  // ufix23
  reg [22:0] Unit_Delay6_out1;  // ufix23
  wire Relational_Operator2_relop1;
  reg  Unit_Delay9_out1;
  wire [22:0] Add5_out1;  // ufix23
  reg [22:0] Unit_Delay11_out1;  // ufix23
  wire Relational_Operator5_relop1;
  reg  Unit_Delay12_out1;
  reg [22:0] Unit_Delay4_out1;  // ufix23
  wire [22:0] Add1_out1;  // ufix23
  wire Relational_Operator1_relop1;
  reg  Unit_Delay5_out1;
  wire switch_compare_1;
  wire signed [11:0] Constant5_out1_dtc;  // sfix12
  wire signed [11:0] Constant4_out1_dtc;  // sfix12
  wire signed [11:0] Switch12_out1;  // sfix12
  wire [22:0] Add4_out1;  // ufix23
  wire C0_out1;
  wire [22:0] Switch1_out1;  // ufix23
  reg [22:0] Unit_Delay7_out1;  // ufix23
  wire signed [24:0] Add4_add_temp;  // sfix25
  wire signed [24:0] Add4_1;  // sfix25
  wire signed [24:0] Add4_2;  // sfix25
  wire C3_out1;
  reg  Unit_Delay3_out1;
  wire C2_out1;
  reg  Unit_Delay2_out1;
  wire C1_out1;
  reg  Unit_Delay1_out1;
  reg  Unit_Delay8_out1;
  reg [28:0] Unit_Delay10_out1;  // ufix29
  wire [28:0] Add3_out1;  // ufix29
  wire [12:0] Bit_Slice1_out1;  // ufix13
  wire [20:0] Bit_Slice2_out1;  // ufix21
  reg [20:0] Unit_Delay17_out1;  // ufix21
  wire Relational_Operator6_relop1;
  reg  Unit_Delay18_out1;
  wire [22:0] Add6_out1;  // ufix23
  reg [22:0] Unit_Delay19_out1;  // ufix23
  wire Relational_Operator7_relop1;
  reg  Unit_Delay20_out1;

  // 25000000/(2^23/33)


  // <S1>/Unit Delay13
  always @(posedge g_clk)
    begin : Unit_Delay13_process
      if (Rst_n == 1'b0) begin
        Unit_Delay13_out1 <= 23'b00000000000000000000000;
      end
      else begin
        Unit_Delay13_out1 <= Add7_out1;
      end
    end



  // <S1>/Add7
  assign Add7_out1 = 23'b00000000000010101011110 + Unit_Delay13_out1;



  // <S1>/Relational Operator3
  assign Relational_Operator3_relop1 = Add7_out1 < Unit_Delay13_out1;



  // <S1>/Unit Delay14
  // 
  // <S1>/Goto
  // 
  // <S1>/From
  always @(posedge g_clk)
    begin : Unit_Delay14_process
      if (Rst_n == 1'b0) begin
        Unit_Delay14_out1 <= 1'b0;
      end
      else begin
        Unit_Delay14_out1 <= Relational_Operator3_relop1;
      end
    end



  assign Pulse4096Hz = Unit_Delay14_out1;

  // <S1>/Bit Slice
  assign Bit_Slice_out1 = Add7_out1[21:0];



  // <S1>/Unit Delay15
  always @(posedge g_clk)
    begin : Unit_Delay15_process
      if (Rst_n == 1'b0) begin
        Unit_Delay15_out1 <= 22'b0000000000000000000000;
      end
      else begin
        Unit_Delay15_out1 <= Bit_Slice_out1;
      end
    end



  // <S1>/Relational Operator4
  assign Relational_Operator4_relop1 = Bit_Slice_out1 < Unit_Delay15_out1;



  // <S1>/Unit Delay16
  always @(posedge g_clk)
    begin : Unit_Delay16_process
      if (Rst_n == 1'b0) begin
        Unit_Delay16_out1 <= 1'b0;
      end
      else begin
        Unit_Delay16_out1 <= Relational_Operator4_relop1;
      end
    end



  assign Pulse8192Hz = Unit_Delay16_out1;

  // <S1>/Unit Delay6
  always @(posedge g_clk)
    begin : Unit_Delay6_process
      if (Rst_n == 1'b0) begin
        Unit_Delay6_out1 <= 23'b00000000000000000000000;
      end
      else begin
        Unit_Delay6_out1 <= Add2_out1;
      end
    end



  // <S1>/Add2
  assign Add2_out1 = 23'b00000000000001000011001 + Unit_Delay6_out1;



  // <S1>/Relational Operator2
  assign Relational_Operator2_relop1 = Add2_out1 < Unit_Delay6_out1;



  // <S1>/Unit Delay9
  always @(posedge g_clk)
    begin : Unit_Delay9_process
      if (Rst_n == 1'b0) begin
        Unit_Delay9_out1 <= 1'b0;
      end
      else begin
        Unit_Delay9_out1 <= Relational_Operator2_relop1;
      end
    end



  assign Pulse50x32Hz = Unit_Delay9_out1;

  // <S1>/Unit Delay11
  always @(posedge g_clk)
    begin : Unit_Delay11_process
      if (Rst_n == 1'b0) begin
        Unit_Delay11_out1 <= 23'b00000000000000000000000;
      end
      else begin
        Unit_Delay11_out1 <= Add5_out1;
      end
    end



  // <S1>/Add5
  assign Add5_out1 = 23'b00000000000000000001111 + Unit_Delay11_out1;



  // <S1>/Relational Operator5
  assign Relational_Operator5_relop1 = Add5_out1 < Unit_Delay11_out1;



  // <S1>/Unit Delay12
  always @(posedge g_clk)
    begin : Unit_Delay12_process
      if (Rst_n == 1'b0) begin
        Unit_Delay12_out1 <= 1'b0;
      end
      else begin
        Unit_Delay12_out1 <= Relational_Operator5_relop1;
      end
    end



  assign Pulse44p7035Hz = Unit_Delay12_out1;

  // <S1>/Add1
  assign Add1_out1 = 23'b00000001000001100010010 + Unit_Delay4_out1;



  // <S1>/Unit Delay4
  always @(posedge g_clk)
    begin : Unit_Delay4_process
      if (Rst_n == 1'b0) begin
        Unit_Delay4_out1 <= 23'b00000000000000000000000;
      end
      else begin
        Unit_Delay4_out1 <= Add1_out1;
      end
    end



  // <S1>/Relational Operator1
  assign Relational_Operator1_relop1 = Unit_Delay4_out1 > 23'b10000000000000000000000;



  // <S1>/Unit Delay5
  always @(posedge g_clk)
    begin : Unit_Delay5_process
      if (Rst_n == 1'b0) begin
        Unit_Delay5_out1 <= 1'b0;
      end
      else begin
        Unit_Delay5_out1 <= Relational_Operator1_relop1;
      end
    end



  assign SqWave100kHz = Unit_Delay5_out1;

  assign switch_compare_1 = Unit_Delay14_out1 > 1'b0;



  assign Constant5_out1_dtc = 12'sb000000000000;



  assign Constant4_out1_dtc = 12'sb000000000001;



  // <S1>/Switch12
  assign Switch12_out1 = (switch_compare_1 == 1'b0 ? Constant5_out1_dtc :
              Constant4_out1_dtc);



  // <S1>/C0
  assign C0_out1 = Add4_out1 >= 23'b00000001010000000000000;



  // <S1>/Switch1
  assign Switch1_out1 = (C0_out1 == 1'b0 ? Add4_out1 :
              23'b00000001010000000000000);



  // <S1>/Unit Delay7
  always @(posedge g_clk)
    begin : Unit_Delay7_process
      if (Rst_n == 1'b0) begin
        Unit_Delay7_out1 <= 23'b00000000000000000000000;
      end
      else begin
        Unit_Delay7_out1 <= Switch1_out1;
      end
    end



  // <S1>/Add4
  assign Add4_1 = {{13{Switch12_out1[11]}}, Switch12_out1};
  assign Add4_2 = {2'b0, Unit_Delay7_out1};
  assign Add4_add_temp = Add4_1 + Add4_2;
  assign Add4_out1 = Add4_add_temp[22:0];



  // <S1>/C3
  assign C3_out1 = Add4_out1 >= 23'b00000000001000000000000;



  // <S1>/Unit Delay3
  always @(posedge g_clk)
    begin : Unit_Delay3_process
      if (Rst_n == 1'b0) begin
        Unit_Delay3_out1 <= 1'b0;
      end
      else begin
        Unit_Delay3_out1 <= C3_out1;
      end
    end



  assign Start_1sOn = Unit_Delay3_out1;

  // <S1>/C2
  assign C2_out1 = Add4_out1 >= 23'b00000000010000000000000;



  // <S1>/Unit Delay2
  always @(posedge g_clk)
    begin : Unit_Delay2_process
      if (Rst_n == 1'b0) begin
        Unit_Delay2_out1 <= 1'b0;
      end
      else begin
        Unit_Delay2_out1 <= C2_out1;
      end
    end



  assign Start_2sOn = Unit_Delay2_out1;

  // <S1>/C1
  assign C1_out1 = Add4_out1 >= 23'b00000000101000000000000;



  // <S1>/Unit Delay1
  always @(posedge g_clk)
    begin : Unit_Delay1_process
      if (Rst_n == 1'b0) begin
        Unit_Delay1_out1 <= 1'b0;
      end
      else begin
        Unit_Delay1_out1 <= C1_out1;
      end
    end



  assign Start_5sOn = Unit_Delay1_out1;

  // <S1>/Unit Delay8
  always @(posedge g_clk)
    begin : Unit_Delay8_process
      if (Rst_n == 1'b0) begin
        Unit_Delay8_out1 <= 1'b0;
      end
      else begin
        Unit_Delay8_out1 <= C0_out1;
      end
    end



  assign Start_10sOn = Unit_Delay8_out1;

  // <S1>/Add3
  assign Add3_out1 = 29'b00000000000000000010000110010 + Unit_Delay10_out1;



  // <S1>/Unit Delay10
  always @(posedge g_clk)
    begin : Unit_Delay10_process
      if (Rst_n == 1'b0) begin
        Unit_Delay10_out1 <= 29'b00000000000000000000000000000;
      end
      else begin
        Unit_Delay10_out1 <= Add3_out1;
      end
    end



  // <S1>/Bit Slice1
  assign Bit_Slice1_out1 = Unit_Delay10_out1[28:16];



  assign wt = Bit_Slice1_out1;

  // <S1>/Bit Slice2
  assign Bit_Slice2_out1 = Add7_out1[20:0];



  // <S1>/Unit Delay17
  always @(posedge g_clk)
    begin : Unit_Delay17_process
      if (Rst_n == 1'b0) begin
        Unit_Delay17_out1 <= 21'b000000000000000000000;
      end
      else begin
        Unit_Delay17_out1 <= Bit_Slice2_out1;
      end
    end



  // <S1>/Relational Operator6
  assign Relational_Operator6_relop1 = Bit_Slice2_out1 < Unit_Delay17_out1;



  // <S1>/Unit Delay18
  always @(posedge g_clk)
    begin : Unit_Delay18_process
      if (Rst_n == 1'b0) begin
        Unit_Delay18_out1 <= 1'b0;
      end
      else begin
        Unit_Delay18_out1 <= Relational_Operator6_relop1;
      end
    end



  assign Pulse4096x4Hz = Unit_Delay18_out1;

  // <S1>/Unit Delay19
  always @(posedge g_clk)
    begin : Unit_Delay19_process
      if (Rst_n == 1'b0) begin
        Unit_Delay19_out1 <= 23'b00000000000000000000000;
      end
      else begin
        Unit_Delay19_out1 <= Add6_out1;
      end
    end



  // <S1>/Add6
  assign Add6_out1 = 23'b00000000000000000100001 + Unit_Delay19_out1;



  // <S1>/Relational Operator7
  assign Relational_Operator7_relop1 = Add6_out1 < Unit_Delay19_out1;



  // <S1>/Unit Delay20
  always @(posedge g_clk)
    begin : Unit_Delay20_process
      if (Rst_n == 1'b0) begin
        Unit_Delay20_out1 <= 1'b0;
      end
      else begin
        Unit_Delay20_out1 <= Relational_Operator7_relop1;
      end
    end



  assign Pulse98p3477Hz = Unit_Delay20_out1;

  // <S1>/Scope2

endmodule  // PulseSource_V16Z

