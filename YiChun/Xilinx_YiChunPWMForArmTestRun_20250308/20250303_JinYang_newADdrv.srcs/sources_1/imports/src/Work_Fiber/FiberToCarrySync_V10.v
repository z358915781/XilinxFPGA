// -------------------------------------------------------------
// 
// File Name: Work_AD7607Drv_V10c\FiberToCarrySync_V11\FiberToCarrySync_V2.v
// Created: 2021-07-15 20:39:53
// 
// Generated by MATLAB 9.1 and HDL Coder 3.9
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 4e-08
// Target subsystem base rate: 4e-08
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: FiberToCarrySync_V2
// Source Path: FiberToCarrySync_V11/FiberToCarrySync_V2
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module FiberToCarrySync_V10
          (
           g_clk,
           Rst_n,
           Rx,
           SyncPulse,
           Tx,
           Sync_Out,
           FiberMaster
          );



  input   g_clk;
  input   Rst_n;
  input   Rx;
  input   SyncPulse;
  output  Tx;
  output  Sync_Out;
  output  FiberMaster;

  reg  Delay_5_out1;
  wire LO_7_out1;
  wire LO_8_out1;
  reg  Delay_10_out1;
  wire LO_10_out1;
  wire LO_9_out1;
  reg  Delay_9_out1;
  wire LO_15_out1;
  wire signed [31:0] SW_6_out1;  // int32
  wire CT_4_relop1;
  reg  Delay_11_out1;
  wire CT2_out1;
  wire signed [31:0] SW_5_out1;  // int32
  wire signed [31:0] SW_7_out1;  // int32
  reg signed [31:0] Delay_7_out1;  // int32
  wire signed [31:0] Add2_add_temp;  // sfix32
  wire signed [31:0] Add2_1;  // sfix32
  wire signed [31:0] Add2_out1;  // int32
  wire CT1_out1;
  reg  Delay_8_out1;
  wire SW_11_out1;
  wire SW_12_out1;
  wire [4:0] Constant25_out1_dtc;  // ufix5
  wire [4:0] Add1_out1;  // ufix5
  wire CT_1_out1;
  wire [4:0] SW_1_out1;  // ufix5
  wire LO_2_out1;
  reg  Delay_1_out1;
  wire LO_1_out1;
  reg  Delay_3_out1;
  wire LO_6_out1;
  reg [4:0] Delay_2_out1;  // ufix5
  wire CT37_out1;
  wire LO_3_out1;
  wire LO_4_out1;
  wire [4:0] SW_2_out1;  // ufix5
  wire CT_2_relop1;
  wire LO_5_out1;
  wire [4:0] SW_10_out1;  // ufix5
  wire CT_3_relop1;
  wire SW_9_out1;
  reg [3:0] Delay_4_out1;  // ufix4
  wire [31:0] Add7_add_temp;  // ufix32
  wire [3:0] Add7_out1;  // ufix4
  wire CT_5_out1;
  wire [3:0] SW_4_out1;  // ufix4
  wire [3:0] SW_3_out1;  // ufix4
  reg [3:0] Delay_12_out1;  // ufix4
  wire CT_7_out1;
  wire LO_11_out1;
  reg  Delay_6_out1;
  wire LO_12_out1;
  wire LO_13_out1;
  wire LO_14_out1;
  wire SW_8_out1;


  always @(posedge g_clk)
    begin : Delay_5_process
      if (Rst_n == 1'b0) begin
        Delay_5_out1 <= 1'b0;
      end
      else begin
        Delay_5_out1 <= Rx;
      end
    end



  assign LO_7_out1 =  ~ Delay_5_out1;



  assign LO_8_out1 = Rx & LO_7_out1;



  always @(posedge g_clk)
    begin : Delay_10_process
      if (Rst_n == 1'b0) begin
        Delay_10_out1 <= 1'b0;
      end
      else begin
        Delay_10_out1 <= LO_8_out1;
      end
    end



  assign LO_10_out1 =  ~ Rx;



  assign LO_9_out1 = Delay_5_out1 & LO_10_out1;



  always @(posedge g_clk)
    begin : Delay_9_process
      if (Rst_n == 1'b0) begin
        Delay_9_out1 <= 1'b0;
      end
      else begin
        Delay_9_out1 <= LO_9_out1;
      end
    end



  assign LO_15_out1 = Delay_10_out1 | Delay_9_out1;



  assign SW_6_out1 = (LO_15_out1 == 1'b0 ? 32'sb00000000000000000000000000000000 :
              32'sb11111111111111111111111111110000);



  assign CT_4_relop1 = Delay_5_out1 == Rx;



  always @(posedge g_clk)
    begin : Delay_11_process
      if (Rst_n == 1'b0) begin
        Delay_11_out1 <= 1'b0;
      end
      else begin
        Delay_11_out1 <= CT_4_relop1;
      end
    end



  assign SW_7_out1 = (CT2_out1 == 1'b0 ? SW_5_out1 :
              32'sb00000000000000000000000000000000);



  always @(posedge g_clk)
    begin : Delay_7_process
      if (Rst_n == 1'b0) begin
        Delay_7_out1 <= 32'sb00000000000000000000000000000000;
      end
      else begin
        Delay_7_out1 <= SW_7_out1;
      end
    end



  assign Add2_1 = {31'b0, Delay_11_out1};
  assign Add2_add_temp = SW_6_out1 + Add2_1;
  assign Add2_out1 = Add2_add_temp + Delay_7_out1;



  assign CT1_out1 = Add2_out1 >= 32'sb00000001011111010111100001000000;



  assign SW_5_out1 = (CT1_out1 == 1'b0 ? Add2_out1 :
              32'sb00000001011111010111100001000000);



  assign CT2_out1 = SW_5_out1 < 32'sb00000000000000000000000000000000;



  assign SW_11_out1 = (CT1_out1 == 1'b0 ? Delay_8_out1 :
              1'b1);



  assign SW_12_out1 = (CT2_out1 == 1'b0 ? SW_11_out1 :
              1'b0);



  always @(posedge g_clk)
    begin : Delay_8_process
      if (Rst_n == 1'b0) begin
        Delay_8_out1 <= 1'b1;
      end
      else begin
        Delay_8_out1 <= SW_12_out1;
      end
    end



  assign Constant25_out1_dtc = 5'b00000;



  assign CT_1_out1 = Add1_out1 >= 5'b01000;



  assign SW_1_out1 = (CT_1_out1 == 1'b0 ? Add1_out1 :
              Constant25_out1_dtc);



  always @(posedge g_clk)
    begin : Delay_1_process
      if (Rst_n == 1'b0) begin
        Delay_1_out1 <= 1'b0;
      end
      else begin
        Delay_1_out1 <= LO_2_out1;
      end
    end



  assign LO_1_out1 = SyncPulse | Delay_1_out1;



  assign LO_6_out1 =  ~ Delay_3_out1;



  assign LO_2_out1 = LO_6_out1 & LO_1_out1;



  assign Add1_out1 = 5'b00001 + Delay_2_out1;



  assign CT37_out1 = Add1_out1 < 5'b00100;



  assign LO_3_out1 = CT37_out1 & LO_2_out1;



  assign LO_4_out1 = LO_3_out1 | Delay_3_out1;



  assign CT_2_relop1 = SW_2_out1 > Delay_2_out1;



  assign LO_5_out1 = CT_2_relop1 & LO_4_out1;



  always @(posedge g_clk)
    begin : Delay_3_process
      if (Rst_n == 1'b0) begin
        Delay_3_out1 <= 1'b0;
      end
      else begin
        Delay_3_out1 <= LO_5_out1;
      end
    end



  assign SW_2_out1 = (Delay_3_out1 == 1'b0 ? SW_1_out1 :
              Add1_out1);



  always @(posedge g_clk)
    begin : Delay_2_process
      if (Rst_n == 1'b0) begin
        Delay_2_out1 <= 5'b00000;
      end
      else begin
        Delay_2_out1 <= SW_2_out1;
      end
    end



  assign SW_10_out1 = (Delay_3_out1 == 1'b0 ? 5'b00100 :
              5'b10000);



  assign CT_3_relop1 = Delay_2_out1 < SW_10_out1;



  assign SW_9_out1 = (Delay_8_out1 == 1'b0 ? Rx :
              CT_3_relop1);



  assign Tx = SW_9_out1;

  assign Add7_add_temp = ({31'b0, Rx}) + ({28'b0, Delay_4_out1});
  assign Add7_out1 = Add7_add_temp[3:0];



  assign CT_5_out1 = Add7_out1 >= 4'b1110;



  assign SW_4_out1 = (CT_5_out1 == 1'b0 ? Add7_out1 :
              4'b1110);



  assign SW_3_out1 = (LO_10_out1 == 1'b0 ? SW_4_out1 :
              4'b0000);



  always @(posedge g_clk)
    begin : Delay_4_process
      if (Rst_n == 1'b0) begin
        Delay_4_out1 <= 4'b0000;
      end
      else begin
        Delay_4_out1 <= SW_3_out1;
      end
    end



  always @(posedge g_clk)
    begin : Delay_12_process
      if (Rst_n == 1'b0) begin
        Delay_12_out1 <= 4'b0000;
      end
      else begin
        Delay_12_out1 <= Delay_4_out1;
      end
    end



  assign CT_7_out1 = Delay_12_out1 >= 4'b1100;



  assign LO_11_out1 = Delay_9_out1 & CT_7_out1;



  always @(posedge g_clk)
    begin : Delay_6_process
      if (Rst_n == 1'b0) begin
        Delay_6_out1 <= 1'b0;
      end
      else begin
        Delay_6_out1 <= CT_3_relop1;
      end
    end



  assign LO_12_out1 =  ~ CT_3_relop1;



  assign LO_13_out1 = Delay_6_out1 & LO_12_out1;



  assign LO_14_out1 = LO_13_out1 & Delay_3_out1;



  assign SW_8_out1 = (Delay_8_out1 == 1'b0 ? LO_11_out1 :
              LO_14_out1);



  assign Sync_Out = SW_8_out1;

  assign FiberMaster = Delay_8_out1;



endmodule  // FiberToCarrySync_V2

