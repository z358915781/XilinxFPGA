// -------------------------------------------------------------
// 
// File Name: IsLandDetect_V10\IsLandDetect_V10\IsLandDetect_V10_block.v
// Created: 2021-06-09 15:24:53
// 
// Generated by MATLAB 9.1 and HDL Coder 3.9
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: IsLandDetect_V10_block
// Source Path: IsLandDetect_V10/IsLandDetect_V10
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module IsLandDetect_V10_block
          (
           g_clk,
           Rst_n,
           wt,
           w_b18,
           Fre2PhaseAdd_Co_b16,
           Pulse,
           Iland_En,
           wt_Island_b13
          );



  input   g_clk;
  input   Rst_n;
  input   [12:0] wt;  // ufix13
  input   signed [17:0] w_b18;  // sfix18
  input   signed [15:0] Fre2PhaseAdd_Co_b16;  // int16
  input   Pulse;
  input   Iland_En;
  output  [12:0] wt_Island_b13;  // ufix13

  reg  Unit_Delay7_out1;  // ufix1
  wire [8:0] Add11_add_temp;  // ufix9
  wire Add1_out1;  // ufix1
  wire CT51_out1;
  wire CT12_out1;
  reg  Unit_Delay54_out1;
  wire Switch20_out1;
  wire Switch17_out1;
  wire Or3_out1;
  wire Switch208_out1;
  reg  Unit_Delay55_out1;
  wire CT70_out1;
  wire Or2_out1;
  wire [7:0] Switch83_out1;  // uint8
  reg [7:0] Unit_Delay32_out1;  // uint8
  wire [7:0] Add11_out1;  // uint8
  wire Ro10_relop1;
  reg  Unit_Delay57_out1;
  wire Switch49_out1;
  wire Switch105_out1;
  reg  Unit_Delay1_out1;
  wire CT55_out1;
  wire CT57_out1;
  wire signed [15:0] signal1;  // int16
  wire signed [15:0] s;  // int16
  wire [15:0] Bit_Slice_out1;  // uint16
  wire signed [15:0] Data_Type_S6_out1;  // int16
  wire switch_compare_1;
  wire signed [15:0] signal1_1;  // int16
  wire signed [15:0] signal1_2;  // int16
  wire signed [15:0] signal1_3;  // int16
  wire signed [15:0] Switch84_out1;  // int16
  wire signed [15:0] Switch97_out1;  // int16
  wire [7:0] Add12_out1;  // uint8
  wire signed [15:0] Simple_Dual_Port_RAM2_out1;  // int16
  wire switch_compare_1_1;
  wire signed [15:0] Switch98_out1;  // int16
  wire signed [23:0] Add7_stage2_1;  // sfix24
  wire signed [23:0] Add7_stage2_2;  // sfix24
  wire signed [23:0] Add7_op_stage2;  // sfix24
  wire CT56_out1;
  reg signed [22:0] Unit_Delay33_out1;  // sfix23
  wire signed [22:0] B24_out1_signal2;  // sfix23
  wire signed [22:0] Switch79_out1;  // sfix23
  wire signed [22:0] Switch87_out1;  // sfix23
  wire signed [22:0] B24_out1_signal2_1;  // sfix23
  wire signed [22:0] signal2;  // sfix23
  wire signed [22:0] s_1;  // sfix23
  reg signed [22:0] Unit_Delay30_out1;  // sfix23
  wire signed [22:0] signal2_1;  // sfix23
  wire signed [22:0] signal2_2;  // sfix23
  wire signed [22:0] signal2_3;  // sfix23
  wire signed [23:0] Add7_stage3_add_temp;  // sfix24
  wire signed [23:0] Add7_stage3_1;  // sfix24
  wire signed [22:0] Add7_out1;  // sfix23
  wire signed [22:0] Switch80_out1;  // sfix23
  wire [15:0] Bit_Slice6_out1;  // uint16
  wire signed [15:0] Data_Type_S11_out1;  // int16
  wire signed [16:0] Add1_1;  // sfix17
  wire signed [16:0] Add1_out1_1;  // sfix17
  wire signed [16:0] Saturation2_out1;  // sfix17
  wire signed [32:0] Product1_mul_temp;  // sfix33
  wire signed [31:0] Product1_out1;  // int32
  wire [20:0] Bit_Slice1_out1;  // ufix21
  wire signed [20:0] Data_Type_S7_out1;  // sfix21
  wire signed [20:0] Saturation3_out1;  // sfix21
  wire signed [13:0] Data_Type_S8_out1;  // sfix14
  wire signed [13:0] Switch80_out1_1;  // sfix14
  wire signed [14:0] Add2_add_temp;  // sfix15
  wire signed [14:0] Add2_1;  // sfix15
  wire signed [14:0] Add2_2;  // sfix15
  wire [12:0] Add2_out1;  // ufix13


  // <S2>/Add1
  // 
  // <S1>/AverFilterP128Ch2_b16_V10
  assign Add11_add_temp = 9'b000000001 + ({8'b0, Unit_Delay7_out1});
  assign Add1_out1 = Add11_add_temp[0];



  // <S2>/Unit Delay7
  // 
  // <S2>/Goto7
  // 
  // <S2>/From168
  // 
  // <S2>/Goto7
  // 
  // <S2>/From434
  // 
  // <S2>/Goto7
  // 
  // <S2>/From427
  // 
  // <S2>/Goto7
  // 
  // <S2>/From179
  // 
  // <S2>/Goto7
  // 
  // <S2>/From177
  // 
  // <S2>/Goto7
  // 
  // <S2>/From174
  always @(posedge g_clk)
    begin : Unit_Delay7_process
      if (Rst_n == 1'b0) begin
        Unit_Delay7_out1 <= 1'b0;
      end
      else begin
        Unit_Delay7_out1 <= Add1_out1;
      end
    end



  // <S2>/CT51
  assign CT51_out1 = Unit_Delay7_out1 == 1'b0;



  // <S2>/CT12
  assign CT12_out1 = Unit_Delay7_out1 == 1'b0;



  // <S2>/Switch20
  assign Switch20_out1 = (Pulse == 1'b0 ? Unit_Delay54_out1 :
              1'b1);



  // <S2>/Switch17
  assign Switch17_out1 = (CT12_out1 == 1'b0 ? Switch20_out1 :
              1'b0);



  // <S2>/Unit Delay54
  always @(posedge g_clk)
    begin : Unit_Delay54_process
      if (Rst_n == 1'b0) begin
        Unit_Delay54_out1 <= 1'b0;
      end
      else begin
        Unit_Delay54_out1 <= Switch17_out1;
      end
    end



  // <S2>/Or3
  assign Or3_out1 = Pulse | Unit_Delay54_out1;



  // <S2>/Unit Delay55
  always @(posedge g_clk)
    begin : Unit_Delay55_process
      if (Rst_n == 1'b0) begin
        Unit_Delay55_out1 <= 1'b0;
      end
      else begin
        Unit_Delay55_out1 <= Switch208_out1;
      end
    end



  // <S2>/Switch208
  // 
  // <S2>/Goto191
  // 
  // <S2>/From170
  // 
  // <S2>/Goto191
  // 
  // <S2>/From170
  // 
  // <S2>/Goto191
  // 
  // <S2>/From431
  assign Switch208_out1 = (CT12_out1 == 1'b0 ? Unit_Delay55_out1 :
              Or3_out1);



  // <S2>/CT70
  assign CT70_out1 = Unit_Delay7_out1 == 1'b0;



  // <S2>/Or2
  assign Or2_out1 = Switch208_out1 & CT70_out1;



  // <S2>/Switch83
  assign Switch83_out1 = (Switch208_out1 == 1'b0 ? 8'b00000000 :
              8'b00000001);



  // <S2>/Add11
  assign Add11_out1 = Switch83_out1 + Unit_Delay32_out1;



  // <S2>/Unit Delay32
  always @(posedge g_clk)
    begin : Unit_Delay32_process
      if (Rst_n == 1'b0) begin
        Unit_Delay32_out1 <= 8'b00000000;
      end
      else begin
        Unit_Delay32_out1 <= Add11_out1;
      end
    end



  // <S2>/Ro10
  // 
  // <S2>/Goto197
  // 
  // <S2>/From435
  assign Ro10_relop1 = Unit_Delay32_out1 > Add11_out1;



  // <S2>/Switch49
  assign Switch49_out1 = (Ro10_relop1 == 1'b0 ? Unit_Delay57_out1 :
              1'b1);



  // <S2>/Unit Delay57
  // 
  // <S2>/Goto198
  // 
  // <S2>/From439
  always @(posedge g_clk)
    begin : Unit_Delay57_process
      if (Rst_n == 1'b0) begin
        Unit_Delay57_out1 <= 1'b0;
      end
      else begin
        Unit_Delay57_out1 <= Switch49_out1;
      end
    end



  // <S2>/Unit Delay1
  always @(posedge g_clk)
    begin : Unit_Delay1_process
      if (Rst_n == 1'b0) begin
        Unit_Delay1_out1 <= 1'b0;
      end
      else begin
        Unit_Delay1_out1 <= Switch105_out1;
      end
    end



  // <S2>/Switch105
  // 
  // <S2>/Goto
  // 
  // <S2>/From12
  // 
  // <S2>/Goto
  // 
  // <S2>/From169
  assign Switch105_out1 = (Or2_out1 == 1'b0 ? Unit_Delay1_out1 :
              Unit_Delay57_out1);



  // <S2>/CT55
  assign CT55_out1 = Unit_Delay7_out1 == 1'b0;



  // <S2>/CT57
  assign CT57_out1 = Unit_Delay7_out1 == 1'b1;



  // <S2>/Switch88
  // 
  // <S2>/Switch88
  // 
  // <S2>/Switch88
  assign signal1 = (CT57_out1 == 1'b0 ? 16'sb0000000000000000 :
              16'sb0000000000000000);



  // <S2>/Switch86
  assign s = signal1;

  // <S1>/Bit Slice
  assign Bit_Slice_out1 = w_b18[17:2];



  // <S1>/Data Type S6
  // 
  // <S2>/Goto9
  // 
  // <S2>/From1
  // 
  // <S2>/B23
  // 
  // <S2>/Goto104
  // 
  // <S2>/From173
  // 
  // <S2>/Switch86
  assign Data_Type_S6_out1 = Bit_Slice_out1;



  assign switch_compare_1 = Switch105_out1 > 1'b0;



  // <S2>/Switch86
  // 
  // <S2>/Switch86
  // 
  // <S2>/Switch86
  assign signal1_1 = (CT55_out1 == 1'b0 ? s :
              Data_Type_S6_out1);



  // <S2>/Bus Selector6
  // 
  // <S2>/Goto103
  assign signal1_2 = signal1_1;

  // <S2>/In13
  assign signal1_3 = signal1_2;

  // <S2>/Switch84
  assign Switch84_out1 = (switch_compare_1 == 1'b0 ? 16'sb0000000000000000 :
              signal1_3);



  // <S2>/Switch97
  assign Switch97_out1 = (Switch208_out1 == 1'b0 ? 16'sb0000000000000000 :
              Switch84_out1);



  // <S2>/Add12
  assign Add12_out1 = Add11_out1 + 8'b00000001;



  // <S2>/Simple Dual Port RAM2
  // 
  // <S1>/Goto
  // 
  // <S1>/From1
  // 
  // <S1>/Goto1
  // 
  // <S1>/From
  // 
  // <S2>/Goto1
  // 
  // <S2>/From50
  SimpDualPortRAM_Wrapper_generic   #  (.AddrWidth(8),
                                        .DataWidth(16)
                                        )
                                    u_Simple_Dual_Port_RAM2   (.g_clk(g_clk),
                                                               .wr_din(Switch84_out1),
                                                               .wr_addr(Add11_out1),
                                                               .wr_en(Switch208_out1),
                                                               .rd_addr(Add12_out1),
                                                               .rd_dout(Simple_Dual_Port_RAM2_out1)
                                                               );

  assign switch_compare_1_1 = Switch105_out1 > 1'b0;



  // <S2>/Switch98
  assign Switch98_out1 = (Switch208_out1 == 1'b0 ? 16'sb0000000000000000 :
              Simple_Dual_Port_RAM2_out1);



  assign Add7_stage2_1 = {{8{Switch97_out1[15]}}, Switch97_out1};
  assign Add7_stage2_2 = {{8{Switch98_out1[15]}}, Switch98_out1};
  assign Add7_op_stage2 = Add7_stage2_1 - Add7_stage2_2;



  // <S2>/CT56
  assign CT56_out1 = Unit_Delay7_out1 == 1'b1;



  assign B24_out1_signal2 = Unit_Delay33_out1;

  // <S2>/Switch87
  assign Switch87_out1 = (CT56_out1 == 1'b0 ? Unit_Delay33_out1 :
              Switch79_out1);



  // <S2>/Unit Delay33
  // 
  // <S2>/Goto105
  // 
  // <S2>/From205
  // 
  // <S2>/Bit Slice1
  // 
  // <S2>/Data Type S1
  // 
  // <S2>/Goto4
  // 
  // <S2>/From7
  // 
  // <S2>/From180
  // 
  // <S2>/Goto105
  // 
  // <S2>/From205
  // 
  // <S2>/Bit Slice1
  // 
  // <S2>/Data Type S1
  // 
  // <S2>/Goto4
  // 
  // <S2>/From7
  // 
  // <S2>/From180
  always @(posedge g_clk)
    begin : Unit_Delay33_process
      if (Rst_n == 1'b0) begin
        Unit_Delay33_out1 <= 23'sb00000000000000000000000;
      end
      else begin
        Unit_Delay33_out1 <= Switch87_out1;
      end
    end



  assign B24_out1_signal2_1 = Unit_Delay33_out1;

  // <S2>/Switch88
  assign signal2 = (CT57_out1 == 1'b0 ? B24_out1_signal2_1 :
              B24_out1_signal2);



  assign s_1 = signal2;

  // <S2>/Switch86
  assign signal2_1 = (CT55_out1 == 1'b0 ? s_1 :
              Unit_Delay30_out1);



  // <S2>/Goto106
  assign signal2_2 = signal2_1;

  // <S2>/In12
  assign signal2_3 = signal2_2;

  // <S2>/Add7
  assign Add7_stage3_1 = {signal2_3[22], signal2_3};
  assign Add7_stage3_add_temp = Add7_op_stage2 + Add7_stage3_1;
  assign Add7_out1 = Add7_stage3_add_temp[22:0];



  // <S2>/Switch79
  // 
  // <S2>/Goto95
  // 
  // <S2>/From167
  // 
  // <S2>/Goto95
  // 
  // <S2>/From176
  assign Switch79_out1 = (switch_compare_1_1 == 1'b0 ? 23'sb00000000000000000000000 :
              Add7_out1);



  // <S2>/Switch80
  assign Switch80_out1 = (CT51_out1 == 1'b0 ? Unit_Delay30_out1 :
              Switch79_out1);



  // <S2>/Unit Delay30
  // 
  // <S2>/Goto101
  // 
  // <S2>/From175
  // 
  // <S2>/Goto101
  // 
  // <S2>/From204
  always @(posedge g_clk)
    begin : Unit_Delay30_process
      if (Rst_n == 1'b0) begin
        Unit_Delay30_out1 <= 23'sb00000000000000000000000;
      end
      else begin
        Unit_Delay30_out1 <= Switch80_out1;
      end
    end



  // <S2>/Bit Slice6
  assign Bit_Slice6_out1 = Unit_Delay30_out1[22:7];



  // <S2>/Data Type S11
  // 
  // <S2>/Goto109
  // 
  // <S2>/From
  assign Data_Type_S11_out1 = Bit_Slice6_out1;



  // <S1>/Add1
  assign Add1_1 = {Data_Type_S11_out1[15], Data_Type_S11_out1};
  assign Add1_out1_1 = Add1_1 - 17'sb00100001100011100;



  // <S1>/Saturation2
  assign Saturation2_out1 = (Add1_out1_1 > 17'sb00111111111111111 ? 17'sb00111111111111111 :
              (Add1_out1_1 < 17'sb11000000000000001 ? 17'sb11000000000000001 :
              Add1_out1_1));



  // <S1>/Product1
  assign Product1_mul_temp = Fre2PhaseAdd_Co_b16 * Saturation2_out1;
  assign Product1_out1 = Product1_mul_temp[31:0];



  // <S1>/Bit Slice1
  assign Bit_Slice1_out1 = Product1_out1[31:11];



  // <S1>/Data Type S7
  assign Data_Type_S7_out1 = Bit_Slice1_out1;



  // <S1>/Saturation3
  assign Saturation3_out1 = (Data_Type_S7_out1 > 21'sb000000001111111111111 ? 21'sb000000001111111111111 :
              (Data_Type_S7_out1 < 21'sb111111110000000000001 ? 21'sb111111110000000000001 :
              Data_Type_S7_out1));



  // <S1>/Data Type S8
  assign Data_Type_S8_out1 = Saturation3_out1[13:0];



  // <S1>/Switch80
  assign Switch80_out1_1 = (Iland_En == 1'b0 ? 14'sb00000000000000 :
              Data_Type_S8_out1);



  // <S1>/Add2
  // 
  // <S1>/Saturation4
  assign Add2_1 = {2'b0, wt};
  assign Add2_2 = {Switch80_out1_1[13], Switch80_out1_1};
  assign Add2_add_temp = Add2_1 + Add2_2;
  assign Add2_out1 = Add2_add_temp[12:0];



  assign wt_Island_b13 = Add2_out1;

  // <S1>/Scope2

  // <S1>/Scope4

endmodule  // IsLandDetect_V10_block

