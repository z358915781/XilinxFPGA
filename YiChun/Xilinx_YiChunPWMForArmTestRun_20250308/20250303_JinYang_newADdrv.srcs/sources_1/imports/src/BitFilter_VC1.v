// -------------------------------------------------------------
// 
// File Name: D:\BitFilter_VC1\BitFilter_VC1.v
// Created: 2023-04-27 14:24:49
// 
// Generated by MATLAB 9.1 and HDL Coder 3.9
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 4e-08
// Target subsystem base rate: 4e-08
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: BitFilter_VC1
// Source Path: BitFilter_VC1/BitFilter_VC1
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module BitFilter_VC1
          (
           g_clk,
           Rst_n,
           Pulse_4096Hz,
           Filter_Reset,
           In0,
           In1,
           CNT,
           BitFltedOut0,
           BitFltedOut1
          );



  input   g_clk;
  input   Rst_n;
  input   Pulse_4096Hz;
  input   Filter_Reset;
  input   In0;
  input   In1;
  input   signed [15:0] CNT;  // int16
  output  BitFltedOut0;
  output  BitFltedOut1;

  reg [3:0] Unit_Delay43_out1;  // ufix4
  wire [3:0] Add1_out1;  // ufix4
  wire CT41_out1;
  wire CT1_out1;
  reg  Unit_Delay4_out1;
  wire Switch4_out1;
  wire Switch1_out1;
  wire Or2_out1;
  wire Switch5_out1;
  reg  Unit_Delay6_out1;
  wire CT207_out1;
  reg  Unit_Delay121_out1;
  wire Switch308_out1;
  wire Switch307_out1;
  wire Or1_out1;
  wire Switch309_out1;
  reg  Unit_Delay122_out1;
  wire CT2_out1;
  wire signal1;
  wire s;
  wire signal1_1;
  wire signal1_2;
  wire signal1_3;
  wire signed [15:0] Switch58_out1;  // int16
  wire signed [15:0] Switch3_out1;  // int16
  reg signed [15:0] Unit_Delay22_out1;  // int16
  wire signed [15:0] Switch27_out1;  // int16
  wire signed [15:0] Switch46_out1;  // int16
  wire signed [15:0] Bus_Creator12_out1_signal2;  // int16
  reg signed [15:0] Unit_Delay1_out1;  // int16
  wire signed [15:0] Bus_Creator1_out1_signal2;  // int16
  wire CT10_out1;
  wire signed [15:0] Switch2_out1;  // int16
  wire signed [15:0] Switch28_out1;  // int16
  wire Dy2_relop1;
  wire signed [15:0] Switch7_out1;  // int16
  wire signed [15:0] Bus_Creator1_out1_signal2_1;  // int16
  wire signed [15:0] signal2;  // int16
  wire signed [15:0] s_1;  // int16
  wire signed [15:0] signal2_1;  // int16
  wire signed [15:0] signal2_2;  // int16
  wire signed [15:0] signal2_3;  // int16
  wire signed [15:0] Add3_out1;  // int16
  reg  Unit_Delay23_out1;
  wire Bus_Creator12_out1_signal3;
  reg  Unit_Delay2_out1;
  wire Bus_Creator1_out1_signal3;
  wire Data_Type_Conversion_out1;
  wire Switch8_out1;
  wire Bus_Creator1_out1_signal3_1;
  wire signal3;
  wire s_2;
  wire signal3_1;
  wire signal3_2;
  wire signal3_3;
  wire Switch29_out1;
  wire Switch30_out1;
  wire Switch47_out1;


  // <S1>/Add1
  assign Add1_out1 = 4'b0001 + Unit_Delay43_out1;



  // <S1>/Unit Delay43
  // 
  // <S1>/Goto57
  // 
  // <S1>/From123
  // 
  // <S1>/Goto57
  // 
  // <S1>/From756
  // 
  // <S1>/Goto57
  // 
  // <S1>/From7
  // 
  // <S1>/Goto57
  // 
  // <S1>/From5
  always @(posedge g_clk)
    begin : Unit_Delay43_process
      if (Rst_n == 1'b0) begin
        Unit_Delay43_out1 <= 4'b0000;
      end
      else begin
        Unit_Delay43_out1 <= Add1_out1;
      end
    end



  // <S1>/CT41
  assign CT41_out1 = Unit_Delay43_out1 == 4'b0000;



  // <S1>/CT1
  assign CT1_out1 = Unit_Delay43_out1 == 4'b0000;



  // <S1>/Switch4
  assign Switch4_out1 = (Filter_Reset == 1'b0 ? Unit_Delay4_out1 :
              1'b1);



  // <S1>/Switch1
  assign Switch1_out1 = (CT1_out1 == 1'b0 ? Switch4_out1 :
              1'b0);



  // <S1>/Unit Delay4
  always @(posedge g_clk)
    begin : Unit_Delay4_process
      if (Rst_n == 1'b0) begin
        Unit_Delay4_out1 <= 1'b0;
      end
      else begin
        Unit_Delay4_out1 <= Switch1_out1;
      end
    end



  // <S1>/Or2
  assign Or2_out1 = Filter_Reset | Unit_Delay4_out1;



  // <S1>/Unit Delay6
  // 
  // <S1>/Goto10
  // 
  // <S1>/From755
  // 
  // <S1>/Goto7
  // 
  // <S1>/From6
  // 
  // <S1>/Bus Creator1
  // 
  // <S1>/Bus Creator12
  // 
  // <S1>/Switch44
  // 
  // <S1>/Switch6
  // 
  // <S1>/Bus Creator1
  // 
  // <S1>/Switch6
  always @(posedge g_clk)
    begin : Unit_Delay6_process
      if (Rst_n == 1'b0) begin
        Unit_Delay6_out1 <= 1'b0;
      end
      else begin
        Unit_Delay6_out1 <= Switch5_out1;
      end
    end



  // <S1>/Switch5
  // 
  // <S1>/Goto1
  // 
  // <S1>/From3
  assign Switch5_out1 = (CT1_out1 == 1'b0 ? Unit_Delay6_out1 :
              Or2_out1);



  // <S1>/CT207
  assign CT207_out1 = Unit_Delay43_out1 == 4'b0000;



  // <S1>/Switch308
  assign Switch308_out1 = (Pulse_4096Hz == 1'b0 ? Unit_Delay121_out1 :
              1'b1);



  // <S1>/Switch307
  assign Switch307_out1 = (CT207_out1 == 1'b0 ? Switch308_out1 :
              1'b0);



  // <S1>/Unit Delay121
  always @(posedge g_clk)
    begin : Unit_Delay121_process
      if (Rst_n == 1'b0) begin
        Unit_Delay121_out1 <= 1'b0;
      end
      else begin
        Unit_Delay121_out1 <= Switch307_out1;
      end
    end



  // <S1>/Or1
  assign Or1_out1 = Pulse_4096Hz | Unit_Delay121_out1;



  // <S1>/Unit Delay122
  always @(posedge g_clk)
    begin : Unit_Delay122_process
      if (Rst_n == 1'b0) begin
        Unit_Delay122_out1 <= 1'b0;
      end
      else begin
        Unit_Delay122_out1 <= Switch309_out1;
      end
    end



  // <S1>/Switch309
  // 
  // <S1>/Goto264
  // 
  // <S1>/From4
  assign Switch309_out1 = (CT207_out1 == 1'b0 ? Unit_Delay122_out1 :
              Or1_out1);



  // <S1>/CT2
  assign CT2_out1 = Unit_Delay43_out1 == 4'b0001;



  // <S1>/Switch6
  // 
  // <S1>/Switch6
  // 
  // <S1>/Switch6
  assign signal1 = (CT2_out1 == 1'b0 ? In1 :
              In1);



  // <S1>/Switch44
  assign s = signal1;

  // <S1>/Switch44
  // 
  // <S1>/Switch44
  // 
  // <S1>/Switch44
  // 
  // <S1>/Goto2
  // 
  // <S1>/Fro
  assign signal1_1 = (CT41_out1 == 1'b0 ? s :
              In0);



  // <S1>/Bus Selector2
  // 
  // <S1>/Goto3
  assign signal1_2 = signal1_1;

  // <S1>/From1
  assign signal1_3 = signal1_2;

  // <S1>/Switch58
  assign Switch58_out1 = (signal1_3 == 1'b0 ? 16'sb1111111111111111 :
              16'sb0000000000000001);



  // <S1>/Switch3
  assign Switch3_out1 = (Switch309_out1 == 1'b0 ? 16'sb0000000000000000 :
              Switch58_out1);



  // <S1>/Switch46
  assign Switch46_out1 = (CT41_out1 == 1'b0 ? Unit_Delay22_out1 :
              Switch27_out1);



  // <S1>/Unit Delay22
  always @(posedge g_clk)
    begin : Unit_Delay22_process
      if (Rst_n == 1'b0) begin
        Unit_Delay22_out1 <= 16'sb0000000000000000;
      end
      else begin
        Unit_Delay22_out1 <= Switch46_out1;
      end
    end



  assign Bus_Creator12_out1_signal2 = Unit_Delay22_out1;

  assign Bus_Creator1_out1_signal2 = Unit_Delay1_out1;

  // <S1>/Switch28
  assign Switch28_out1 = (CT10_out1 == 1'b0 ? Switch2_out1 :
              16'sb0000000000000000);



  // <S1>/Dy2
  assign Dy2_relop1 = Switch28_out1 >= CNT;



  // <S1>/Switch27
  // 
  // <S1>/Goto25
  // 
  // <S1>/From122
  // 
  // <S1>/Goto25
  // 
  // <S1>/From2
  assign Switch27_out1 = (Dy2_relop1 == 1'b0 ? Switch28_out1 :
              CNT);



  // <S1>/Switch7
  assign Switch7_out1 = (CT2_out1 == 1'b0 ? Unit_Delay1_out1 :
              Switch27_out1);



  // <S1>/Unit Delay1
  always @(posedge g_clk)
    begin : Unit_Delay1_process
      if (Rst_n == 1'b0) begin
        Unit_Delay1_out1 <= 16'sb0000000000000000;
      end
      else begin
        Unit_Delay1_out1 <= Switch7_out1;
      end
    end



  assign Bus_Creator1_out1_signal2_1 = Unit_Delay1_out1;

  // <S1>/Switch6
  assign signal2 = (CT2_out1 == 1'b0 ? Bus_Creator1_out1_signal2_1 :
              Bus_Creator1_out1_signal2);



  assign s_1 = signal2;

  // <S1>/Switch44
  assign signal2_1 = (CT41_out1 == 1'b0 ? s_1 :
              Bus_Creator12_out1_signal2);



  // <S1>/Goto4
  assign signal2_2 = signal2_1;

  // <S1>/From109
  assign signal2_3 = signal2_2;

  // <S1>/Add3
  assign Add3_out1 = Switch3_out1 + signal2_3;



  // <S1>/Switch2
  assign Switch2_out1 = (Switch5_out1 == 1'b0 ? Add3_out1 :
              16'sb1111111111111111);



  // <S1>/CT10
  assign CT10_out1 = Switch2_out1 <= 16'sb0000000000000000;



  assign Bus_Creator12_out1_signal3 = Unit_Delay23_out1;

  assign Bus_Creator1_out1_signal3 = Unit_Delay2_out1;

  // <S1>/Switch8
  assign Switch8_out1 = (CT2_out1 == 1'b0 ? Unit_Delay2_out1 :
              Data_Type_Conversion_out1);



  // <S1>/Unit Delay2
  always @(posedge g_clk)
    begin : Unit_Delay2_process
      if (Rst_n == 1'b0) begin
        Unit_Delay2_out1 <= 1'b0;
      end
      else begin
        Unit_Delay2_out1 <= Switch8_out1;
      end
    end



  assign Bus_Creator1_out1_signal3_1 = Unit_Delay2_out1;

  // <S1>/Switch6
  assign signal3 = (CT2_out1 == 1'b0 ? Bus_Creator1_out1_signal3_1 :
              Bus_Creator1_out1_signal3);



  assign s_2 = signal3;

  // <S1>/Switch44
  assign signal3_1 = (CT41_out1 == 1'b0 ? s_2 :
              Bus_Creator12_out1_signal3);



  // <S1>/Goto5
  assign signal3_2 = signal3_1;

  // <S1>/From133
  assign signal3_3 = signal3_2;

  // <S1>/Switch29
  assign Switch29_out1 = (Dy2_relop1 == 1'b0 ? signal3_3 :
              1'b1);



  // <S1>/Switch30
  assign Switch30_out1 = (CT10_out1 == 1'b0 ? Switch29_out1 :
              1'b0);



  // <S1>/Data Type Conversion
  // 
  // <S1>/Goto40
  // 
  // <S1>/From124
  // 
  // <S1>/Goto40
  // 
  // <S1>/From8
  assign Data_Type_Conversion_out1 = (Switch30_out1 != 1'b0 ? 1'b1 :
              1'b0);



  // <S1>/Switch47
  assign Switch47_out1 = (CT41_out1 == 1'b0 ? Unit_Delay23_out1 :
              Data_Type_Conversion_out1);



  // <S1>/Unit Delay23
  always @(posedge g_clk)
    begin : Unit_Delay23_process
      if (Rst_n == 1'b0) begin
        Unit_Delay23_out1 <= 1'b0;
      end
      else begin
        Unit_Delay23_out1 <= Switch47_out1;
      end
    end



  assign BitFltedOut0 = Unit_Delay23_out1;

  assign BitFltedOut1 = Unit_Delay2_out1;

endmodule  // BitFilter_VC1

