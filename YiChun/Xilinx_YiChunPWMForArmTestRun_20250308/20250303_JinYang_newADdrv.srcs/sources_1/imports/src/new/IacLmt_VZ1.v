// -------------------------------------------------------------
// 
// File Name: D:\FPGA_MZ\IacLmt_VZ1\IacLmt_VZ1.v
// Created: 2025-01-08 10:55:17
// 
// Generated by MATLAB 9.1 and HDL Coder 3.9
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 4e-08
// Target subsystem base rate: 4e-08
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: IacLmt_VZ1
// Source Path: IacLmt_VZ1/IacLmt_VZ1
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module IacLmt_VZ1
          (
           PdisLmt_b16,
           PchgLmt_b16,
           OneDivUpnm_b24,
           Idpref_b12,
           ILimit_b12,
           IdpUpLmt_b16,
           IdprefLmt_b12,
           IdpLowLmt_b16
          );



  input   signed [15:0] PdisLmt_b16;  // int16
  input   signed [15:0] PchgLmt_b16;  // int16
  input   [23:0] OneDivUpnm_b24;  // ufix24
  input   signed [11:0] Idpref_b12;  // sfix12
  input   signed [11:0] ILimit_b12;  // sfix12
  output  signed [11:0] IdpUpLmt_b16;  // sfix12
  output  signed [11:0] IdprefLmt_b12;  // sfix12
  output  signed [11:0] IdpLowLmt_b16;  // sfix12

  wire signed [23:0] Data_Type_Conversion16_out1;  // sfix24
  wire signed [39:0] Product6_out1;  // sfix40
  wire [24:0] Bit_Slice3_out1;  // ufix25
  wire signed [24:0] Data_Type_S17_out1;  // sfix25
  wire RO8_relop1;
  wire signed [24:0] Switch67_out1;  // sfix25
  wire RO7_relop1;
  wire signed [24:0] Switch68_out1;  // sfix25
  wire signed [11:0] Data_Type_Conversion2_out1;  // sfix12
  wire RO13_relop1;
  wire signed [11:0] Switch38_out1;  // sfix12
  wire signed [12:0] Unary_Minus1_in0;  // sfix13
  wire signed [11:0] Unary_Minus1_out1;  // sfix12
  wire RO12_relop1;
  wire signed [11:0] Switch39_out1;  // sfix12
  wire RO4_relop1;
  wire signed [11:0] Switch2_out1;  // sfix12
  wire signed [23:0] Data_Type_Conversion17_out1;  // sfix24
  wire signed [39:0] Product1_out1;  // sfix40
  wire [24:0] Bit_Slice1_out1;  // ufix25
  wire signed [24:0] Data_Type_S1_out1;  // sfix25
  wire RO2_relop1;
  wire signed [24:0] Switch1_out1;  // sfix25
  wire RO1_relop1;
  wire signed [24:0] Switch3_out1;  // sfix25
  wire signed [11:0] Data_Type_Conversion1_out1;  // sfix12
  wire RO15_relop1;
  wire signed [11:0] Switch42_out1;  // sfix12
  wire signed [12:0] Unary_Minus2_in0;  // sfix13
  wire signed [11:0] Unary_Minus2_out1;  // sfix12
  wire RO14_relop1;
  wire signed [11:0] Switch43_out1;  // sfix12
  wire RO3_relop1;
  wire signed [11:0] Switch4_out1;  // sfix12


  assign Data_Type_Conversion16_out1 = OneDivUpnm_b24;



  assign Product6_out1 = PdisLmt_b16 * Data_Type_Conversion16_out1;



  assign Bit_Slice3_out1 = Product6_out1[39:15];



  assign Data_Type_S17_out1 = Bit_Slice3_out1;



  assign RO8_relop1 = Data_Type_S17_out1 > 25'sb0000000000000011111111111;



  assign Switch67_out1 = (RO8_relop1 == 1'b0 ? Data_Type_S17_out1 :
              25'sb0000000000000011111111111);



  assign RO7_relop1 = Switch67_out1 < 25'sb1111111111111100000000001;



  assign Switch68_out1 = (RO7_relop1 == 1'b0 ? Switch67_out1 :
              25'sb1111111111111100000000001);



  assign Data_Type_Conversion2_out1 = Switch68_out1[11:0];



  assign RO13_relop1 = Data_Type_Conversion2_out1 > ILimit_b12;



  assign Switch38_out1 = (RO13_relop1 == 1'b0 ? Data_Type_Conversion2_out1 :
              ILimit_b12);



  assign Unary_Minus1_in0 =  - ({ILimit_b12[11], ILimit_b12});
  assign Unary_Minus1_out1 = Unary_Minus1_in0[11:0];



  assign RO12_relop1 = Switch38_out1 < Unary_Minus1_out1;



  assign Switch39_out1 = (RO12_relop1 == 1'b0 ? Switch38_out1 :
              Unary_Minus1_out1);



  assign IdpUpLmt_b16 = Switch39_out1;

  assign RO4_relop1 = Idpref_b12 > Switch39_out1;



  assign Switch2_out1 = (RO4_relop1 == 1'b0 ? Idpref_b12 :
              Switch39_out1);



  assign Data_Type_Conversion17_out1 = OneDivUpnm_b24;



  assign Product1_out1 = PchgLmt_b16 * Data_Type_Conversion17_out1;



  assign Bit_Slice1_out1 = Product1_out1[39:15];



  assign Data_Type_S1_out1 = Bit_Slice1_out1;



  assign RO2_relop1 = Data_Type_S1_out1 > 25'sb0000000000000011111111111;



  assign Switch1_out1 = (RO2_relop1 == 1'b0 ? Data_Type_S1_out1 :
              25'sb0000000000000011111111111);



  assign RO1_relop1 = Switch1_out1 < 25'sb1111111111111100000000001;



  assign Switch3_out1 = (RO1_relop1 == 1'b0 ? Switch1_out1 :
              25'sb1111111111111100000000001);



  assign Data_Type_Conversion1_out1 = Switch3_out1[11:0];



  assign RO15_relop1 = Data_Type_Conversion1_out1 > ILimit_b12;



  assign Switch42_out1 = (RO15_relop1 == 1'b0 ? Data_Type_Conversion1_out1 :
              ILimit_b12);



  assign Unary_Minus2_in0 =  - ({ILimit_b12[11], ILimit_b12});
  assign Unary_Minus2_out1 = Unary_Minus2_in0[11:0];



  assign RO14_relop1 = Switch42_out1 < Unary_Minus2_out1;



  assign Switch43_out1 = (RO14_relop1 == 1'b0 ? Switch42_out1 :
              Unary_Minus2_out1);



  assign RO3_relop1 = Switch2_out1 < Switch43_out1;



  assign Switch4_out1 = (RO3_relop1 == 1'b0 ? Switch2_out1 :
              Switch43_out1);



  assign IdprefLmt_b12 = Switch4_out1;

  assign IdpLowLmt_b16 = Switch43_out1;

endmodule  // IacLmt_VZ1

