// -------------------------------------------------------------
// 
// File Name: D:\FPGA_MZ\L3_UnB_Z13\L3_UnB_Z13.v
// Created: 2024-08-16 16:49:38
// 
// Generated by MATLAB 9.1 and HDL Coder 3.9
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 1.95313e-06
// Target subsystem base rate: 1.95313e-06
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: L3_UnB_Z13
// Source Path: L3_UnB_Z13/L3_UnB_Z13
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module L3_UnB_Z13
          (
           g_clk,
           Rst_n,
           Ma_b12,
           Mb_b12,
           Mc_b12,
           Ia_b12,
           Ib_b12,
           Ic_b12,
           Upos_b12,
           Uneg_b12,
           UdcCo_b16,
           M0Lmt_b12,
           PFull_b12,
           Carryx128Hz,
           MaM0_b12,
           MbM0_b12,
           McM0_b12,
           M0_b12
          );



  input   g_clk;
  input   Rst_n;
  input   signed [11:0] Ma_b12;  // sfix12
  input   signed [11:0] Mb_b12;  // sfix12
  input   signed [11:0] Mc_b12;  // sfix12
  input   signed [11:0] Ia_b12;  // sfix12
  input   signed [11:0] Ib_b12;  // sfix12
  input   signed [11:0] Ic_b12;  // sfix12
  input   signed [11:0] Upos_b12;  // sfix12
  input   signed [11:0] Uneg_b12;  // sfix12
  input   signed [15:0] UdcCo_b16;  // int16
  input   signed [11:0] M0Lmt_b12;  // sfix12
  input   signed [11:0] PFull_b12;  // sfix12
  input   Carryx128Hz;
  output  signed [11:0] MaM0_b12;  // sfix12
  output  signed [11:0] MbM0_b12;  // sfix12
  output  signed [11:0] McM0_b12;  // sfix12
  output  signed [11:0] M0_b12;  // sfix12

  wire Bit_Slice4_out1;  // ufix1
  wire Bit_Slice11_out1;  // ufix1
  wire Bit_Slice12_out1;  // ufix1
  wire [2:0] Bit_Concat1_out1;  // ufix3
  wire CT2_out1;
  wire CT1_out1;
  wire Log_11_out1;
  wire CT15_out1;
  reg [1:0] Unit_Delay7_out1;  // ufix2
  wire [1:0] Add1_out1;  // ufix2
  wire CT56_out1;
  wire CT12_out1;
  reg  Unit_Delay54_out1;
  wire Switch20_out1;
  wire Switch17_out1;
  wire Or3_out1;
  wire Switch208_out1;
  reg  Unit_Delay55_out1;
  wire CT70_out1;
  wire Or2_out1;
  wire [8:0] Switch83_out1;  // ufix9
  reg [8:0] Unit_Delay32_out1;  // ufix9
  wire [8:0] Add11_out1;  // ufix9
  wire Ro10_relop1;
  reg  Unit_Delay57_out1;
  wire Switch49_out1;
  wire Switch105_out1;
  reg  Unit_Delay1_out1;
  wire CT55_out1;
  wire CT57_out1;
  wire CT59_out1;
  wire CT61_out1;
  wire signed [11:0] signal1;  // sfix12
  wire signed [11:0] s;  // sfix12
  wire signed [11:0] signal1_1;  // sfix12
  wire signed [11:0] s_1;  // sfix12
  wire signed [11:0] signal1_2;  // sfix12
  wire signed [11:0] s_2;  // sfix12
  wire switch_compare_1;
  wire signed [11:0] signal1_3;  // sfix12
  wire signed [11:0] signal1_4;  // sfix12
  wire signed [11:0] signal1_5;  // sfix12
  wire signed [11:0] Switch84_out1;  // sfix12
  wire signed [11:0] Switch97_out1;  // sfix12
  wire [8:0] Add12_out1;  // ufix9
  wire signed [11:0] Simple_Dual_Port_RAM2_out1;  // sfix12
  wire switch_compare_1_1;
  wire signed [11:0] Switch98_out1;  // sfix12
  wire signed [19:0] Add7_stage2_1;  // sfix20
  wire signed [19:0] Add7_stage2_2;  // sfix20
  wire signed [19:0] Add7_op_stage2;  // sfix20
  wire CT60_out1;
  wire CT58_out1;
  wire CT51_out1;
  reg signed [18:0] Unit_Delay30_out1;  // sfix19
  wire signed [18:0] Switch79_out1;  // sfix19
  wire signed [18:0] Switch80_out1;  // sfix19
  wire signed [18:0] B23_out1_signal2;  // sfix19
  reg signed [18:0] Unit_Delay33_out1;  // sfix19
  wire signed [18:0] B24_out1_signal2;  // sfix19
  reg signed [18:0] Unit_Delay34_out1;  // sfix19
  wire signed [18:0] Switch89_out1;  // sfix19
  wire signed [18:0] B25_out1_signal2;  // sfix19
  reg signed [18:0] Unit_Delay35_out1;  // sfix19
  wire signed [18:0] B26_out1_signal2;  // sfix19
  wire signed [18:0] Switch91_out1;  // sfix19
  wire signed [18:0] B26_out1_signal2_1;  // sfix19
  wire signed [18:0] signal2;  // sfix19
  wire signed [18:0] s_3;  // sfix19
  wire signed [18:0] signal2_1;  // sfix19
  wire signed [18:0] s_4;  // sfix19
  wire signed [18:0] signal2_2;  // sfix19
  wire signed [18:0] s_5;  // sfix19
  wire signed [18:0] signal2_3;  // sfix19
  wire signed [18:0] signal2_4;  // sfix19
  wire signed [18:0] signal2_5;  // sfix19
  wire signed [19:0] Add7_stage3_add_temp;  // sfix20
  wire signed [19:0] Add7_stage3_1;  // sfix20
  wire signed [18:0] Add7_out1;  // sfix19
  wire signed [18:0] Switch87_out1;  // sfix19
  wire [11:0] Bit_Slice1_out1;  // ufix12
  wire signed [11:0] Data_Type_S12_out1;  // sfix12
  wire Bit_Slice14_out1;  // ufix1
  wire [11:0] Bit_Slice2_out1;  // ufix12
  wire signed [11:0] Data_Type_S13_out1;  // sfix12
  wire Bit_Slice7_out1;  // ufix1
  wire CT14_out1;
  wire y;  // ufix1
  wire y_1;  // ufix1
  wire Log_8_out1;
  wire Switch2_out1;
  wire [11:0] Bit_Slice6_out1;  // ufix12
  wire signed [11:0] Data_Type_S11_out1;  // sfix12
  wire Bit_Slice13_out1;  // ufix1
  wire CT4_out1;
  wire CT13_out1;
  wire y_2;  // ufix1
  wire Switch1_out1;
  wire y_3;  // ufix1
  wire Log_9_out1;
  wire Switch16_out1;
  wire CT3_out1;
  wire y_4;  // ufix1
  wire Switch7_out1;
  wire y_5;  // ufix1
  wire Log_10_out1;
  wire Switch15_out1;
  wire signed [12:0] AddS13_0_1;  // sfix13
  wire signed [12:0] AddS13_0_2;  // sfix13
  wire signed [12:0] AddS13_0_out1;  // sfix13
  wire signed [28:0] Product10_out1;  // sfix29
  wire signed [28:0] Bit_2_out1;  // sfix29
  wire signed [11:0] S12_1_out1;  // sfix12
  wire RO63_relop1;
  wire signed [11:0] Switch41_out1;  // sfix12
  wire signed [12:0] Unary_Minus13_in0;  // sfix13
  wire signed [11:0] Unary_Minus1_out1;  // sfix12
  wire RO13_relop1;
  wire signed [11:0] Switch1_out1_1;  // sfix12
  wire RO_relop1;
  wire signed [11:0] Switch31_out1;  // sfix12
  wire RO17_relop1;
  wire signed [11:0] max1_out1;  // sfix12
  wire signed [11:0] Switch32_out1;  // sfix12
  wire RO2_relop1;
  wire signed [11:0] mid_out1;  // sfix12
  wire CT65_out1;
  wire signed [12:0] Unary_Minus111_in0;  // sfix13
  wire signed [11:0] Unary_Minus11_out1;  // sfix12
  wire signed [11:0] max_out1;  // sfix12
  wire signed [12:0] Add1_1;  // sfix13
  wire signed [12:0] Add1_out1_1;  // sfix13
  wire RO6_relop1;
  wire signed [12:0] Constant3_out1_dtc;  // sfix13
  wire signed [12:0] Switch41_out1_1;  // sfix13
  wire signed [11:0] Unary_Minus1_out1_1;  // sfix12
  wire signed [12:0] RO1_1_1;  // sfix13
  wire RO1_relop1;
  wire signed [12:0] Unary_Minus1_out1_dtc;  // sfix13
  wire signed [12:0] Switch1_out1_2;  // sfix13
  wire signed [11:0] S12_8_out1;  // sfix12
  wire RO7_relop1;
  wire signed [11:0] mid12_out1;  // sfix12
  wire signed [11:0] mid11_out1;  // sfix12
  wire RO65_relop1;
  wire signed [11:0] Switch41_out1_2;  // sfix12
  wire CT66_out1;
  wire signed [11:0] min_out1;  // sfix12
  wire signed [13:0] Add2_sub_temp;  // sfix14
  wire signed [13:0] Add2_1;  // sfix14
  wire signed [12:0] Add2_out1;  // sfix13
  wire RO66_relop1;
  wire signed [12:0] Constant4_out1_dtc;  // sfix13
  wire signed [12:0] Switch41_out1_3;  // sfix13
  wire signed [11:0] Unary_Minus1_out1_2;  // sfix12
  wire signed [12:0] RO16_1_1;  // sfix13
  wire RO16_relop1;
  wire signed [12:0] Unary_Minus1_out1_dtc_1;  // sfix13
  wire signed [12:0] Switch1_out1_3;  // sfix13
  wire signed [11:0] S12_4_out1;  // sfix12
  wire signed [12:0] Unary_Minus131_in0;  // sfix13
  wire signed [11:0] Unary_Minus13_out1;  // sfix12
  wire RO9_relop1;
  wire signed [11:0] mid15_out1;  // sfix12
  wire signed [11:0] mid14_out1;  // sfix12
  wire RO15_relop1;
  wire signed [11:0] Switch1_out1_4;  // sfix12
  wire signed [12:0] UM1_in0;  // sfix13
  wire signed [11:0] UM1_out1;  // sfix12
  wire signed [11:0] Switch4_out1;  // sfix12
  wire signed [11:0] Switch5_out1;  // sfix12
  wire signed [12:0] AddS13_4_1;  // sfix13
  wire signed [12:0] AddS13_4_2;  // sfix13
  wire signed [12:0] AddS13_4_out1;  // sfix13
  wire RO64_relop1;
  wire signed [12:0] Constant5_out1_dtc;  // sfix13
  wire signed [12:0] Switch41_out1_4;  // sfix13
  wire signed [11:0] Unary_Minus1_out1_3;  // sfix12
  wire signed [12:0] RO14_1_1;  // sfix13
  wire RO14_relop1;
  wire signed [12:0] Unary_Minus1_out1_dtc_2;  // sfix13
  wire signed [12:0] Switch1_out1_5;  // sfix13
  wire signed [11:0] S12_5_out1;  // sfix12
  reg signed [11:0] Unit_Delay5_out1;  // sfix12
  wire signed [12:0] AddS13_5_1;  // sfix13
  wire signed [12:0] AddS13_5_2;  // sfix13
  wire signed [12:0] AddS13_5_out1;  // sfix13
  wire RO61_relop1;
  wire signed [12:0] Constant6_out1_dtc;  // sfix13
  wire signed [12:0] Switch41_out1_5;  // sfix13
  wire signed [11:0] Unary_Minus1_out1_4;  // sfix12
  wire signed [12:0] RO11_1_1;  // sfix13
  wire RO11_relop1;
  wire signed [12:0] Unary_Minus1_out1_dtc_3;  // sfix13
  wire signed [12:0] Switch1_out1_6;  // sfix13
  wire signed [11:0] S12_2_out1;  // sfix12
  reg signed [11:0] Unit_Delay3_out1;  // sfix12
  wire signed [12:0] AddS13_6_1;  // sfix13
  wire signed [12:0] AddS13_6_2;  // sfix13
  wire signed [12:0] AddS13_6_out1;  // sfix13
  wire RO62_relop1;
  wire signed [12:0] Constant7_out1_dtc;  // sfix13
  wire signed [12:0] Switch41_out1_6;  // sfix13
  wire signed [11:0] Unary_Minus1_out1_5;  // sfix12
  wire signed [12:0] RO12_1_1;  // sfix13
  wire RO12_relop1;
  wire signed [12:0] Unary_Minus1_out1_dtc_4;  // sfix13
  wire signed [12:0] Switch1_out1_7;  // sfix13
  wire signed [11:0] S12_3_out1;  // sfix12
  reg signed [11:0] Unit_Delay4_out1;  // sfix12

  // SEL:0
  // 
  // 5
  // 
  // -5
  // 
  // -3
  // 
  // 电流小控制小，最大为1
  // Iav[0,PFull]
  // LimitCo=Iav[0,PFull] / PFull
  // 
  // 001
  // 
  // 011


  // <S1>/Bit Slice4
  assign Bit_Slice4_out1 = Ma_b12[11];



  // <S1>/Bit Slice11
  assign Bit_Slice11_out1 = Mb_b12[11];



  // <S1>/Bit Slice12
  assign Bit_Slice12_out1 = Mc_b12[11];



  // <S1>/Bit Concat1
  assign Bit_Concat1_out1 = {Bit_Slice4_out1, Bit_Slice11_out1, Bit_Slice12_out1};



  // <S1>/CT2
  assign CT2_out1 = Bit_Concat1_out1 == 3'b111;



  // <S1>/CT1
  assign CT1_out1 = Bit_Concat1_out1 == 3'b000;



  // <S1>/Log 11
  assign Log_11_out1 = CT2_out1 | CT1_out1;



  // <S1>/CT15
  assign CT15_out1 = Bit_Concat1_out1 == 3'b110;



  // <S23>/Add1
  // 
  // <S1>/Flt
  assign Add1_out1 = 2'b01 + Unit_Delay7_out1;



  // <S23>/Unit Delay7
  // 
  // <S23>/Goto7
  // 
  // <S23>/From168
  // 
  // <S23>/Goto7
  // 
  // <S23>/From434
  // 
  // <S23>/Goto7
  // 
  // <S23>/From427
  // 
  // <S23>/Goto7
  // 
  // <S23>/From189
  // 
  // <S23>/Goto7
  // 
  // <S23>/From187
  // 
  // <S23>/Goto7
  // 
  // <S23>/From184
  // 
  // <S23>/Goto7
  // 
  // <S23>/From182
  // 
  // <S23>/Goto7
  // 
  // <S23>/From179
  // 
  // <S23>/Goto7
  // 
  // <S23>/From177
  // 
  // <S23>/Goto7
  // 
  // <S23>/From174
  always @(posedge g_clk)
    begin : Unit_Delay7_process
      if (Rst_n == 1'b0) begin
        Unit_Delay7_out1 <= 2'b00;
      end
      else begin
        Unit_Delay7_out1 <= Add1_out1;
      end
    end



  // <S23>/CT56
  assign CT56_out1 = Unit_Delay7_out1 == 2'b01;



  // <S23>/CT12
  assign CT12_out1 = Unit_Delay7_out1 == 2'b00;



  // <S23>/Switch20
  assign Switch20_out1 = (Carryx128Hz == 1'b0 ? Unit_Delay54_out1 :
              1'b1);



  // <S23>/Switch17
  assign Switch17_out1 = (CT12_out1 == 1'b0 ? Switch20_out1 :
              1'b0);



  // <S23>/Unit Delay54
  always @(posedge g_clk)
    begin : Unit_Delay54_process
      if (Rst_n == 1'b0) begin
        Unit_Delay54_out1 <= 1'b0;
      end
      else begin
        Unit_Delay54_out1 <= Switch17_out1;
      end
    end



  // <S23>/Or3
  assign Or3_out1 = Carryx128Hz | Unit_Delay54_out1;



  // <S23>/Unit Delay55
  always @(posedge g_clk)
    begin : Unit_Delay55_process
      if (Rst_n == 1'b0) begin
        Unit_Delay55_out1 <= 1'b0;
      end
      else begin
        Unit_Delay55_out1 <= Switch208_out1;
      end
    end



  // <S23>/Switch208
  // 
  // <S23>/Goto191
  // 
  // <S23>/From170
  // 
  // <S23>/Goto191
  // 
  // <S23>/From170
  // 
  // <S23>/Goto191
  // 
  // <S23>/From431
  assign Switch208_out1 = (CT12_out1 == 1'b0 ? Unit_Delay55_out1 :
              Or3_out1);



  // <S23>/CT70
  assign CT70_out1 = Unit_Delay7_out1 == 2'b00;



  // <S23>/Or2
  assign Or2_out1 = Switch208_out1 & CT70_out1;



  // <S23>/Switch83
  assign Switch83_out1 = (Switch208_out1 == 1'b0 ? 9'b000000000 :
              9'b000000001);



  // <S23>/Add11
  assign Add11_out1 = Switch83_out1 + Unit_Delay32_out1;



  // <S23>/Unit Delay32
  always @(posedge g_clk)
    begin : Unit_Delay32_process
      if (Rst_n == 1'b0) begin
        Unit_Delay32_out1 <= 9'b000000000;
      end
      else begin
        Unit_Delay32_out1 <= Add11_out1;
      end
    end



  // <S23>/Ro10
  // 
  // <S23>/Goto197
  // 
  // <S23>/From435
  assign Ro10_relop1 = Unit_Delay32_out1 > Add11_out1;



  // <S23>/Switch49
  assign Switch49_out1 = (Ro10_relop1 == 1'b0 ? Unit_Delay57_out1 :
              1'b1);



  // <S23>/Unit Delay57
  // 
  // <S23>/Goto198
  // 
  // <S23>/From439
  always @(posedge g_clk)
    begin : Unit_Delay57_process
      if (Rst_n == 1'b0) begin
        Unit_Delay57_out1 <= 1'b0;
      end
      else begin
        Unit_Delay57_out1 <= Switch49_out1;
      end
    end



  // <S23>/Unit Delay1
  always @(posedge g_clk)
    begin : Unit_Delay1_process
      if (Rst_n == 1'b0) begin
        Unit_Delay1_out1 <= 1'b0;
      end
      else begin
        Unit_Delay1_out1 <= Switch105_out1;
      end
    end



  // <S23>/Switch105
  // 
  // <S23>/Goto
  // 
  // <S23>/From12
  // 
  // <S23>/Goto
  // 
  // <S23>/From169
  assign Switch105_out1 = (Or2_out1 == 1'b0 ? Unit_Delay1_out1 :
              Unit_Delay57_out1);



  // <S23>/CT55
  assign CT55_out1 = Unit_Delay7_out1 == 2'b00;



  // <S23>/CT57
  assign CT57_out1 = Unit_Delay7_out1 == 2'b01;



  // <S23>/CT59
  assign CT59_out1 = Unit_Delay7_out1 == 2'b10;



  // <S23>/CT61
  assign CT61_out1 = Unit_Delay7_out1 == 2'b11;



  // <S23>/Switch92
  // 
  // <S23>/Switch92
  // 
  // <S23>/Switch92
  assign signal1 = (CT61_out1 == 1'b0 ? 12'sb000000000000 :
              12'sb000000000000);



  // <S23>/Switch90
  assign s = signal1;

  // <S23>/Switch90
  // 
  // <S23>/Switch90
  // 
  // <S23>/Switch90
  assign signal1_1 = (CT59_out1 == 1'b0 ? s :
              Ic_b12);



  // <S23>/Switch88
  assign s_1 = signal1_1;

  // <S23>/Switch88
  // 
  // <S23>/Switch88
  // 
  // <S23>/Switch88
  assign signal1_2 = (CT57_out1 == 1'b0 ? s_1 :
              Ib_b12);



  // <S23>/Switch86
  assign s_2 = signal1_2;

  assign switch_compare_1 = Switch105_out1 > 1'b0;



  // <S23>/Switch86
  // 
  // <S23>/Switch86
  // 
  // <S23>/Switch86
  assign signal1_3 = (CT55_out1 == 1'b0 ? s_2 :
              Ia_b12);



  // <S23>/Bus Selector6
  // 
  // <S23>/Goto103
  assign signal1_4 = signal1_3;

  // <S23>/In13
  assign signal1_5 = signal1_4;

  // <S23>/Switch84
  assign Switch84_out1 = (switch_compare_1 == 1'b0 ? 12'sb000000000000 :
              signal1_5);



  // <S23>/Switch97
  assign Switch97_out1 = (Switch208_out1 == 1'b0 ? 12'sb000000000000 :
              Switch84_out1);



  // <S23>/Add12
  assign Add12_out1 = Add11_out1 + 9'b000000001;



  // <S23>/Simple Dual Port RAM2
  // 
  // <S23>/Goto1
  // 
  // <S23>/From50
  // 
  // <S23>/Goto10
  // 
  // <S23>/From2
  // 
  // <S23>/Goto12
  // 
  // <S23>/From3
  // 
  // <S23>/Goto9
  // 
  // <S23>/From1
  // 
  // <S1>/ 13
  // 
  // <S1>/ 14
  // 
  // <S1>/ 15
  // 
  // <S1>/From1
  // 
  // <S1>/From2
  // 
  // <S1>/From37
  // 
  // <S1>/Goto13
  // 
  // <S1>/From16
  // 
  // <S1>/Goto16
  // 
  // <S1>/From10
  // 
  // <S1>/Goto19
  // 
  // <S1>/From5
  // 
  // <S23>/B23
  // 
  // <S23>/Goto104
  // 
  // <S23>/From173
  // 
  // <S23>/B24
  // 
  // <S23>/Goto107
  // 
  // <S23>/From178
  // 
  // <S23>/B25
  // 
  // <S23>/Goto110
  // 
  // <S23>/From183
  // 
  // <S23>/Switch86
  // 
  // <S23>/Switch88
  // 
  // <S23>/Switch90
  // 
  // <S1>/ 13
  // 
  // <S1>/From92
  // 
  // <S1>/ 13
  // 
  // <S1>/From43
  // 
  // <S1>/ 14
  // 
  // <S1>/From93
  // 
  // <S1>/ 14
  // 
  // <S1>/From38
  // 
  // <S1>/ 15
  // 
  // <S1>/From91
  // 
  // <S1>/ 15
  // 
  // <S1>/From28
  SimpDualPortRAM_Wrapper_generic   #  (.AddrWidth(9),
                                        .DataWidth(12)
                                        )
                                    u_Simple_Dual_Port_RAM2   (.g_clk(g_clk),
                                                               .wr_din(Switch84_out1),
                                                               .wr_addr(Add11_out1),
                                                               .wr_en(Switch208_out1),
                                                               .rd_addr(Add12_out1),
                                                               .rd_dout(Simple_Dual_Port_RAM2_out1)
                                                               );

  assign switch_compare_1_1 = Switch105_out1 > 1'b0;



  // <S23>/Switch98
  assign Switch98_out1 = (Switch208_out1 == 1'b0 ? 12'sb000000000000 :
              Simple_Dual_Port_RAM2_out1);



  assign Add7_stage2_1 = {{8{Switch97_out1[11]}}, Switch97_out1};
  assign Add7_stage2_2 = {{8{Switch98_out1[11]}}, Switch98_out1};
  assign Add7_op_stage2 = Add7_stage2_1 - Add7_stage2_2;



  // <S23>/CT60
  assign CT60_out1 = Unit_Delay7_out1 == 2'b11;



  // <S23>/CT58
  assign CT58_out1 = Unit_Delay7_out1 == 2'b10;



  // <S23>/CT51
  assign CT51_out1 = Unit_Delay7_out1 == 2'b00;



  // <S23>/Switch80
  assign Switch80_out1 = (CT51_out1 == 1'b0 ? Unit_Delay30_out1 :
              Switch79_out1);



  // <S23>/Unit Delay30
  // 
  // <S23>/Goto101
  // 
  // <S23>/From175
  // 
  // <S23>/Goto101
  // 
  // <S23>/From204
  always @(posedge g_clk)
    begin : Unit_Delay30_process
      if (Rst_n == 1'b0) begin
        Unit_Delay30_out1 <= 19'sb0000000000000000000;
      end
      else begin
        Unit_Delay30_out1 <= Switch80_out1;
      end
    end



  assign B23_out1_signal2 = Unit_Delay30_out1;

  assign B24_out1_signal2 = Unit_Delay33_out1;

  // <S23>/Switch89
  assign Switch89_out1 = (CT58_out1 == 1'b0 ? Unit_Delay34_out1 :
              Switch79_out1);



  // <S23>/Unit Delay34
  // 
  // <S23>/Goto108
  // 
  // <S23>/From185
  // 
  // <S23>/Goto108
  // 
  // <S23>/From212
  always @(posedge g_clk)
    begin : Unit_Delay34_process
      if (Rst_n == 1'b0) begin
        Unit_Delay34_out1 <= 19'sb0000000000000000000;
      end
      else begin
        Unit_Delay34_out1 <= Switch89_out1;
      end
    end



  assign B25_out1_signal2 = Unit_Delay34_out1;

  assign B26_out1_signal2 = Unit_Delay35_out1;

  // <S23>/Switch91
  assign Switch91_out1 = (CT60_out1 == 1'b0 ? Unit_Delay35_out1 :
              Switch79_out1);



  // <S23>/Unit Delay35
  // 
  // <S23>/Goto111
  // 
  // <S23>/From213
  // 
  // <S23>/Bit Slice3
  // 
  // <S23>/Data Type S15
  // 
  // <S23>/Goto6
  // 
  // <S23>/From9
  // 
  // <S23>/From190
  // 
  // <S23>/Goto111
  // 
  // <S23>/From213
  // 
  // <S23>/Bit Slice3
  // 
  // <S23>/Data Type S15
  // 
  // <S23>/Goto6
  // 
  // <S23>/From9
  // 
  // <S23>/From190
  always @(posedge g_clk)
    begin : Unit_Delay35_process
      if (Rst_n == 1'b0) begin
        Unit_Delay35_out1 <= 19'sb0000000000000000000;
      end
      else begin
        Unit_Delay35_out1 <= Switch91_out1;
      end
    end



  assign B26_out1_signal2_1 = Unit_Delay35_out1;

  // <S23>/Switch92
  assign signal2 = (CT61_out1 == 1'b0 ? B26_out1_signal2_1 :
              B26_out1_signal2);



  assign s_3 = signal2;

  // <S23>/Switch90
  assign signal2_1 = (CT59_out1 == 1'b0 ? s_3 :
              B25_out1_signal2);



  assign s_4 = signal2_1;

  // <S23>/Switch88
  assign signal2_2 = (CT57_out1 == 1'b0 ? s_4 :
              B24_out1_signal2);



  assign s_5 = signal2_2;

  // <S23>/Switch86
  assign signal2_3 = (CT55_out1 == 1'b0 ? s_5 :
              B23_out1_signal2);



  // <S23>/Goto106
  assign signal2_4 = signal2_3;

  // <S23>/In12
  assign signal2_5 = signal2_4;

  // <S23>/Add7
  assign Add7_stage3_1 = {signal2_5[18], signal2_5};
  assign Add7_stage3_add_temp = Add7_op_stage2 + Add7_stage3_1;
  assign Add7_out1 = Add7_stage3_add_temp[18:0];



  // <S23>/Switch79
  // 
  // <S23>/Goto95
  // 
  // <S23>/From167
  // 
  // <S23>/Goto95
  // 
  // <S23>/From186
  // 
  // <S23>/Goto95
  // 
  // <S23>/From181
  // 
  // <S23>/Goto95
  // 
  // <S23>/From176
  assign Switch79_out1 = (switch_compare_1_1 == 1'b0 ? 19'sb0000000000000000000 :
              Add7_out1);



  // <S23>/Switch87
  assign Switch87_out1 = (CT56_out1 == 1'b0 ? Unit_Delay33_out1 :
              Switch79_out1);



  // <S23>/Unit Delay33
  // 
  // <S23>/Goto105
  // 
  // <S23>/From180
  // 
  // <S23>/Goto105
  // 
  // <S23>/From205
  always @(posedge g_clk)
    begin : Unit_Delay33_process
      if (Rst_n == 1'b0) begin
        Unit_Delay33_out1 <= 19'sb0000000000000000000;
      end
      else begin
        Unit_Delay33_out1 <= Switch87_out1;
      end
    end



  // <S23>/Bit Slice1
  assign Bit_Slice1_out1 = Unit_Delay33_out1[18:7];



  // <S23>/Data Type S12
  // 
  // <S23>/Goto4
  // 
  // <S23>/From7
  // 
  // <S1>/Goto48
  // 
  // <S1>/From17
  // 
  // <S1>/Abs3
  // 
  // <S1>/From21
  assign Data_Type_S12_out1 = Bit_Slice1_out1;



  // <S1>/Bit Slice14
  // 
  // <S1>/Goto10
  // 
  // <S1>/Goto10
  assign Bit_Slice14_out1 = Data_Type_S12_out1[11];



  // <S23>/Bit Slice2
  assign Bit_Slice2_out1 = Unit_Delay34_out1[18:7];



  // <S23>/Data Type S13
  // 
  // <S23>/Goto5
  // 
  // <S23>/From8
  // 
  // <S1>/Goto49
  // 
  // <S1>/From15
  // 
  // <S1>/Abs1
  // 
  // <S1>/From12
  assign Data_Type_S13_out1 = Bit_Slice2_out1;



  // <S1>/Bit Slice7
  // 
  // <S1>/Goto11
  // 
  // <S1>/Goto11
  assign Bit_Slice7_out1 = Data_Type_S13_out1[11];



  // <S1>/CT14
  assign CT14_out1 = Bit_Concat1_out1 == 3'b100;



  // <S1>/From26
  assign y = Bit_Slice14_out1;

  // <S1>/From25
  assign y_1 = Bit_Slice7_out1;

  // <S1>/Log 8
  assign Log_8_out1 =  ~ y_1;



  // <S1>/Switch2
  assign Switch2_out1 = (CT15_out1 == 1'b0 ? y :
              Log_8_out1);



  // <S23>/Bit Slice6
  assign Bit_Slice6_out1 = Unit_Delay30_out1[18:7];



  // <S23>/Data Type S11
  // 
  // <S23>/Goto109
  // 
  // <S23>/From
  // 
  // <S1>/Goto47
  // 
  // <S1>/From14
  // 
  // <S1>/Abs2
  // 
  // <S1>/From7
  assign Data_Type_S11_out1 = Bit_Slice6_out1;



  // <S1>/Bit Slice13
  // 
  // <S1>/Goto9
  // 
  // <S1>/Goto9
  assign Bit_Slice13_out1 = Data_Type_S11_out1[11];



  // <S1>/CT4
  assign CT4_out1 = Bit_Concat1_out1 == 3'b001;



  // <S1>/CT13
  assign CT13_out1 = Bit_Concat1_out1 == 3'b101;



  // <S1>/From24
  assign y_2 = Bit_Slice13_out1;

  // <S1>/Switch1
  assign Switch1_out1 = (CT14_out1 == 1'b0 ? Switch2_out1 :
              y_2);



  // <S1>/From13
  assign y_3 = Bit_Slice14_out1;

  // <S1>/Log 9
  assign Log_9_out1 =  ~ y_3;



  // <S1>/Switch16
  assign Switch16_out1 = (CT13_out1 == 1'b0 ? Switch1_out1 :
              Log_9_out1);



  // <S1>/CT3
  assign CT3_out1 = Bit_Concat1_out1 == 3'b011;



  // <S1>/From11
  assign y_4 = Bit_Slice7_out1;

  // <S1>/Switch7
  assign Switch7_out1 = (CT4_out1 == 1'b0 ? Switch16_out1 :
              y_4);



  // <S1>/From9
  assign y_5 = Bit_Slice13_out1;

  // <S1>/Log 10
  assign Log_10_out1 =  ~ y_5;



  // <S1>/Switch15
  assign Switch15_out1 = (CT3_out1 == 1'b0 ? Switch7_out1 :
              Log_10_out1);



  // <S1>/AddS13_0
  assign AddS13_0_1 = {Upos_b12[11], Upos_b12};
  assign AddS13_0_2 = {Uneg_b12[11], Uneg_b12};
  assign AddS13_0_out1 = AddS13_0_1 - AddS13_0_2;



  // <S1>/Product10
  assign Product10_out1 = UdcCo_b16 * AddS13_0_out1;



  // <S1>/Bit<<_2
  // 
  // <S1>/S29_1
  assign Bit_2_out1 = Product10_out1 >>> 8'd7;



  // <S1>/S12_1
  assign S12_1_out1 = Bit_2_out1[11:0];



  // <S27>/RO6
  assign RO63_relop1 = S12_1_out1 > M0Lmt_b12;



  // <S27>/Switch41
  assign Switch41_out1 = (RO63_relop1 == 1'b0 ? S12_1_out1 :
              M0Lmt_b12);



  // <S27>/Unary Minus1
  assign Unary_Minus13_in0 =  - ({M0Lmt_b12[11], M0Lmt_b12});
  assign Unary_Minus1_out1 = Unary_Minus13_in0[11:0];



  // <S27>/RO1
  // 
  // <S1>/LmtAV1_2
  assign RO13_relop1 = Switch41_out1 < Unary_Minus1_out1;



  // <S27>/Switch1
  assign Switch1_out1_1 = (RO13_relop1 == 1'b0 ? Switch41_out1 :
              Unary_Minus1_out1);



  // <S32>/RO
  // 
  // <S1>/MaxMin
  assign RO_relop1 = Ma_b12 > Mb_b12;



  // <S32>/Switch31
  assign Switch31_out1 = (RO_relop1 == 1'b0 ? Mb_b12 :
              Ma_b12);



  // <S32>/RO1
  assign RO17_relop1 = Switch31_out1 > Mc_b12;



  // <S32>/max1
  assign max1_out1 = (RO17_relop1 == 1'b0 ? Switch31_out1 :
              Mc_b12);



  // <S32>/Switch32
  assign Switch32_out1 = (RO_relop1 == 1'b0 ? Ma_b12 :
              Mb_b12);



  // <S32>/RO2
  assign RO2_relop1 = max1_out1 > Switch32_out1;



  // <S32>/mid
  // 
  // <S1>/Goto25
  // 
  // <S1>/From236
  // 
  // <S1>/Goto25
  // 
  // <S1>/From239
  assign mid_out1 = (RO2_relop1 == 1'b0 ? Switch32_out1 :
              max1_out1);



  // <S1>/CT65
  assign CT65_out1 = mid_out1 >= 12'sb000000000000;



  // <S1>/Unary Minus11
  assign Unary_Minus111_in0 =  - ({mid_out1[11], mid_out1});
  assign Unary_Minus11_out1 = Unary_Minus111_in0[11:0];



  // <S32>/max
  // 
  // <S1>/Goto24
  // 
  // <S1>/From131
  assign max_out1 = (RO17_relop1 == 1'b0 ? Mc_b12 :
              Switch31_out1);



  // <S1>/Add1
  assign Add1_1 = {max_out1[11], max_out1};
  assign Add1_out1_1 = 13'sb0011111111111 - Add1_1;



  // <S24>/RO6
  assign RO6_relop1 = Add1_out1_1 > 13'sb0011111111111;



  assign Constant3_out1_dtc = 13'sb0011111111111;



  // <S24>/Switch41
  assign Switch41_out1_1 = (RO6_relop1 == 1'b0 ? Add1_out1_1 :
              Constant3_out1_dtc);



  // <S24>/Unary Minus1
  assign Unary_Minus1_out1_1 = 12'sb100000000001;



  // <S24>/RO1
  // 
  // <S1>/LmtAV1_10
  assign RO1_1_1 = {Unary_Minus1_out1_1[11], Unary_Minus1_out1_1};
  assign RO1_relop1 = Switch41_out1_1 < RO1_1_1;



  assign Unary_Minus1_out1_dtc = {Unary_Minus1_out1_1[11], Unary_Minus1_out1_1};



  // <S24>/Switch1
  assign Switch1_out1_2 = (RO1_relop1 == 1'b0 ? Switch41_out1_1 :
              Unary_Minus1_out1_dtc);



  // <S1>/S12_8
  assign S12_8_out1 = Switch1_out1_2[11:0];



  // <S1>/RO7
  assign RO7_relop1 = Unary_Minus11_out1 < S12_8_out1;



  // <S1>/mid12
  assign mid12_out1 = (RO7_relop1 == 1'b0 ? S12_8_out1 :
              Unary_Minus11_out1);



  // <S1>/mid11
  // 
  // <S1>/Goto83
  // 
  // <S1>/From18
  // 
  // <S1>/Product2
  // 
  // <S1>/Bit Slice15
  // 
  // <S1>/From20
  assign mid11_out1 = (CT65_out1 == 1'b0 ? mid12_out1 :
              S12_8_out1);



  // <S29>/RO6
  assign RO65_relop1 = Switch1_out1_1 > mid11_out1;



  // <S29>/Switch41
  assign Switch41_out1_2 = (RO65_relop1 == 1'b0 ? Switch1_out1_1 :
              mid11_out1);



  // <S1>/CT66
  assign CT66_out1 = mid_out1 >= 12'sb000000000000;



  // <S32>/min
  // 
  // <S1>/Goto26
  // 
  // <S1>/From3
  assign min_out1 = (RO2_relop1 == 1'b0 ? max1_out1 :
              Switch32_out1);



  // <S1>/Add2
  assign Add2_1 = {{2{min_out1[11]}}, min_out1};
  assign Add2_sub_temp = 14'sb11100000000001 - Add2_1;
  assign Add2_out1 = Add2_sub_temp[12:0];



  // <S31>/RO6
  assign RO66_relop1 = Add2_out1 > 13'sb0011111111111;



  assign Constant4_out1_dtc = 13'sb0011111111111;



  // <S31>/Switch41
  assign Switch41_out1_3 = (RO66_relop1 == 1'b0 ? Add2_out1 :
              Constant4_out1_dtc);



  // <S31>/Unary Minus1
  assign Unary_Minus1_out1_2 = 12'sb100000000001;



  // <S31>/RO1
  // 
  // <S1>/LmtAV1_9
  assign RO16_1_1 = {Unary_Minus1_out1_2[11], Unary_Minus1_out1_2};
  assign RO16_relop1 = Switch41_out1_3 < RO16_1_1;



  assign Unary_Minus1_out1_dtc_1 = {Unary_Minus1_out1_2[11], Unary_Minus1_out1_2};



  // <S31>/Switch1
  assign Switch1_out1_3 = (RO16_relop1 == 1'b0 ? Switch41_out1_3 :
              Unary_Minus1_out1_dtc_1);



  // <S1>/S12_4
  assign S12_4_out1 = Switch1_out1_3[11:0];



  // <S1>/Unary Minus13
  assign Unary_Minus131_in0 =  - ({mid_out1[11], mid_out1});
  assign Unary_Minus13_out1 = Unary_Minus131_in0[11:0];



  // <S1>/RO9
  assign RO9_relop1 = Unary_Minus13_out1 > S12_4_out1;



  // <S1>/mid15
  assign mid15_out1 = (RO9_relop1 == 1'b0 ? S12_4_out1 :
              Unary_Minus13_out1);



  // <S1>/mid14
  // 
  // <S1>/Goto84
  // 
  // <S1>/From19
  // 
  // <S1>/From23
  assign mid14_out1 = (CT66_out1 == 1'b0 ? S12_4_out1 :
              mid15_out1);



  // <S29>/RO1
  // 
  // <S1>/LmtAV1_4
  assign RO15_relop1 = Switch41_out1_2 < mid14_out1;



  // <S29>/Switch1
  // 
  // <S1>/Goto12
  // 
  // <S1>/From42
  assign Switch1_out1_4 = (RO15_relop1 == 1'b0 ? Switch41_out1_2 :
              mid14_out1);



  // <S1>/UM1
  assign UM1_in0 =  - ({Switch1_out1_4[11], Switch1_out1_4});
  assign UM1_out1 = UM1_in0[11:0];



  // <S1>/Switch4
  assign Switch4_out1 = (Switch15_out1 == 1'b0 ? UM1_out1 :
              Switch1_out1_4);



  // <S1>/Switch5
  // 
  // <S1>/Goto8
  // 
  // <S1>/From27
  // 
  // <S1>/Goto8
  // 
  // <S1>/From31
  // 
  // <S1>/Goto8
  // 
  // <S1>/From29
  assign Switch5_out1 = (Log_11_out1 == 1'b0 ? Switch4_out1 :
              12'sb000000000000);



  // <S1>/AddS13_4
  assign AddS13_4_1 = {Switch5_out1[11], Switch5_out1};
  assign AddS13_4_2 = {Ma_b12[11], Ma_b12};
  assign AddS13_4_out1 = AddS13_4_1 + AddS13_4_2;



  // <S28>/RO6
  assign RO64_relop1 = AddS13_4_out1 > 13'sb0011111111111;



  assign Constant5_out1_dtc = 13'sb0011111111111;



  // <S28>/Switch41
  assign Switch41_out1_4 = (RO64_relop1 == 1'b0 ? AddS13_4_out1 :
              Constant5_out1_dtc);



  // <S28>/Unary Minus1
  assign Unary_Minus1_out1_3 = 12'sb100000000001;



  // <S28>/RO1
  // 
  // <S1>/LmtAV1_3
  assign RO14_1_1 = {Unary_Minus1_out1_3[11], Unary_Minus1_out1_3};
  assign RO14_relop1 = Switch41_out1_4 < RO14_1_1;



  assign Unary_Minus1_out1_dtc_2 = {Unary_Minus1_out1_3[11], Unary_Minus1_out1_3};



  // <S28>/Switch1
  // 
  // <S1>/S13_2
  assign Switch1_out1_5 = (RO14_relop1 == 1'b0 ? Switch41_out1_4 :
              Unary_Minus1_out1_dtc_2);



  // <S1>/S12_5
  assign S12_5_out1 = Switch1_out1_5[11:0];



  // <S1>/Unit Delay5
  always @(posedge g_clk)
    begin : Unit_Delay5_process
      if (Rst_n == 1'b0) begin
        Unit_Delay5_out1 <= 12'sb000000000000;
      end
      else begin
        Unit_Delay5_out1 <= S12_5_out1;
      end
    end



  assign MaM0_b12 = Unit_Delay5_out1;

  // <S1>/AddS13_5
  assign AddS13_5_1 = {Switch5_out1[11], Switch5_out1};
  assign AddS13_5_2 = {Mb_b12[11], Mb_b12};
  assign AddS13_5_out1 = AddS13_5_1 + AddS13_5_2;



  // <S25>/RO6
  assign RO61_relop1 = AddS13_5_out1 > 13'sb0011111111111;



  assign Constant6_out1_dtc = 13'sb0011111111111;



  // <S25>/Switch41
  assign Switch41_out1_5 = (RO61_relop1 == 1'b0 ? AddS13_5_out1 :
              Constant6_out1_dtc);



  // <S25>/Unary Minus1
  assign Unary_Minus1_out1_4 = 12'sb100000000001;



  // <S25>/RO1
  // 
  // <S1>/LmtAV1_11
  assign RO11_1_1 = {Unary_Minus1_out1_4[11], Unary_Minus1_out1_4};
  assign RO11_relop1 = Switch41_out1_5 < RO11_1_1;



  assign Unary_Minus1_out1_dtc_3 = {Unary_Minus1_out1_4[11], Unary_Minus1_out1_4};



  // <S25>/Switch1
  // 
  // <S1>/S13_5
  assign Switch1_out1_6 = (RO11_relop1 == 1'b0 ? Switch41_out1_5 :
              Unary_Minus1_out1_dtc_3);



  // <S1>/S12_2
  assign S12_2_out1 = Switch1_out1_6[11:0];



  // <S1>/Unit Delay3
  always @(posedge g_clk)
    begin : Unit_Delay3_process
      if (Rst_n == 1'b0) begin
        Unit_Delay3_out1 <= 12'sb000000000000;
      end
      else begin
        Unit_Delay3_out1 <= S12_2_out1;
      end
    end



  assign MbM0_b12 = Unit_Delay3_out1;

  // <S1>/AddS13_6
  assign AddS13_6_1 = {Switch5_out1[11], Switch5_out1};
  assign AddS13_6_2 = {Mc_b12[11], Mc_b12};
  assign AddS13_6_out1 = AddS13_6_1 + AddS13_6_2;



  // <S26>/RO6
  assign RO62_relop1 = AddS13_6_out1 > 13'sb0011111111111;



  assign Constant7_out1_dtc = 13'sb0011111111111;



  // <S26>/Switch41
  assign Switch41_out1_6 = (RO62_relop1 == 1'b0 ? AddS13_6_out1 :
              Constant7_out1_dtc);



  // <S26>/Unary Minus1
  assign Unary_Minus1_out1_5 = 12'sb100000000001;



  // <S26>/RO1
  // 
  // <S1>/LmtAV1_12
  assign RO12_1_1 = {Unary_Minus1_out1_5[11], Unary_Minus1_out1_5};
  assign RO12_relop1 = Switch41_out1_6 < RO12_1_1;



  assign Unary_Minus1_out1_dtc_4 = {Unary_Minus1_out1_5[11], Unary_Minus1_out1_5};



  // <S26>/Switch1
  // 
  // <S1>/S13_6
  assign Switch1_out1_7 = (RO12_relop1 == 1'b0 ? Switch41_out1_6 :
              Unary_Minus1_out1_dtc_4);



  // <S1>/S12_3
  assign S12_3_out1 = Switch1_out1_7[11:0];



  // <S1>/Unit Delay4
  always @(posedge g_clk)
    begin : Unit_Delay4_process
      if (Rst_n == 1'b0) begin
        Unit_Delay4_out1 <= 12'sb000000000000;
      end
      else begin
        Unit_Delay4_out1 <= S12_3_out1;
      end
    end



  assign McM0_b12 = Unit_Delay4_out1;

  assign M0_b12 = Switch1_out1_4;

endmodule  // L3_UnB_Z13

