// -------------------------------------------------------------
// 
// File Name: D:\FPGA_MZ\AverFilter1024P_b18_V1\AverFilter1024P_b18_V1.v
// Created: 2024-09-12 17:03:15
// 
// Generated by MATLAB 9.1 and HDL Coder 3.9
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 1.95313e-06
// Target subsystem base rate: 1.95313e-06
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: AverFilter1024P_b18_V1
// Source Path: AverFilter1024P_b18_V1/AverFilter1024P_b18_V1
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module AverFilter1024P_b18_V1
          (
           g_clk,
           Rst_n,
           Filter_In0_b18,
           Pulse,
           Filter_Out0_b18
          );



  input   g_clk;
  input   Rst_n;
  input   signed [17:0] Filter_In0_b18;  // sfix18
  input   Pulse;
  output  signed [17:0] Filter_Out0_b18;  // sfix18

  wire CT51_out1;
  wire CT12_out1;
  reg  Unit_Delay54_out1;
  wire Switch20_out1;
  wire Switch17_out1;
  wire Or3_out1;
  wire Switch208_out1;
  reg  Unit_Delay55_out1;
  wire CT70_out1;
  wire Or2_out1;
  wire [9:0] Switch83_out1;  // ufix10
  reg [9:0] Unit_Delay32_out1;  // ufix10
  wire [9:0] Add11_out1;  // ufix10
  wire Ro10_relop1;
  reg  Unit_Delay57_out1;
  wire Switch49_out1;
  wire Switch105_out1;
  reg  Unit_Delay1_out1;
  wire switch_compare_1;
  wire signed [31:0] Constant4_out1_dtc;  // int32
  wire switch_compare_1_1;
  wire signed [17:0] Switch84_out1;  // sfix18
  wire signed [17:0] Switch97_out1;  // sfix18
  wire [9:0] Add12_out1;  // ufix10
  wire signed [17:0] Simple_Dual_Port_RAM2_out1;  // sfix18
  wire signed [17:0] Switch98_out1;  // sfix18
  wire signed [32:0] Add7_stage2_1;  // sfix33
  wire signed [32:0] Add7_stage2_2;  // sfix33
  wire signed [32:0] Add7_op_stage2;  // sfix33
  reg signed [31:0] Unit_Delay30_out1;  // int32
  wire signed [32:0] Add7_stage3_add_temp;  // sfix33
  wire signed [32:0] Add7_stage3_1;  // sfix33
  wire signed [31:0] Add7_out1;  // int32
  wire signed [31:0] Switch79_out1;  // int32
  wire signed [31:0] Filter_Out;  // int32
  wire signed [31:0] Switch80_out1;  // int32
  wire [21:0] Bit_Slice6_out1;  // ufix22
  wire signed [21:0] Data_Type_S1_out1;  // sfix22
  wire signed [17:0] Data_Type_S11_out1;  // sfix18


  assign CT51_out1 = 1'b1;



  assign CT12_out1 = 1'b1;



  assign Switch20_out1 = (Pulse == 1'b0 ? Unit_Delay54_out1 :
              1'b1);



  assign Switch17_out1 = (CT12_out1 == 1'b0 ? Switch20_out1 :
              1'b0);



  always @(posedge g_clk)
    begin : Unit_Delay54_process
      if (Rst_n == 1'b0) begin
        Unit_Delay54_out1 <= 1'b0;
      end
      else begin
        Unit_Delay54_out1 <= Switch17_out1;
      end
    end



  assign Or3_out1 = Pulse | Unit_Delay54_out1;



  always @(posedge g_clk)
    begin : Unit_Delay55_process
      if (Rst_n == 1'b0) begin
        Unit_Delay55_out1 <= 1'b0;
      end
      else begin
        Unit_Delay55_out1 <= Switch208_out1;
      end
    end



  assign Switch208_out1 = (CT12_out1 == 1'b0 ? Unit_Delay55_out1 :
              Or3_out1);



  assign CT70_out1 = 1'b1;



  assign Or2_out1 = Switch208_out1 & CT70_out1;



  assign Switch83_out1 = (Switch208_out1 == 1'b0 ? 10'b0000000000 :
              10'b0000000001);



  assign Add11_out1 = Switch83_out1 + Unit_Delay32_out1;



  always @(posedge g_clk)
    begin : Unit_Delay32_process
      if (Rst_n == 1'b0) begin
        Unit_Delay32_out1 <= 10'b0000000000;
      end
      else begin
        Unit_Delay32_out1 <= Add11_out1;
      end
    end



  assign Ro10_relop1 = Unit_Delay32_out1 > Add11_out1;



  assign Switch49_out1 = (Ro10_relop1 == 1'b0 ? Unit_Delay57_out1 :
              1'b1);



  always @(posedge g_clk)
    begin : Unit_Delay57_process
      if (Rst_n == 1'b0) begin
        Unit_Delay57_out1 <= 1'b0;
      end
      else begin
        Unit_Delay57_out1 <= Switch49_out1;
      end
    end



  always @(posedge g_clk)
    begin : Unit_Delay1_process
      if (Rst_n == 1'b0) begin
        Unit_Delay1_out1 <= 1'b0;
      end
      else begin
        Unit_Delay1_out1 <= Switch105_out1;
      end
    end



  assign Switch105_out1 = (Or2_out1 == 1'b0 ? Unit_Delay1_out1 :
              Unit_Delay57_out1);



  assign switch_compare_1 = Switch105_out1 > 1'b0;



  assign Constant4_out1_dtc = 32'sb00000000000000000000000000000000;



  assign switch_compare_1_1 = Switch105_out1 > 1'b0;



  assign Switch84_out1 = (switch_compare_1_1 == 1'b0 ? 18'sb000000000000000000 :
              Filter_In0_b18);



  assign Switch97_out1 = (Switch208_out1 == 1'b0 ? 18'sb000000000000000000 :
              Switch84_out1);



  assign Add12_out1 = Add11_out1 + 10'b0000000001;



  SimpDualPortRAM_Wrapper_generic   #  (.AddrWidth(10),
                                        .DataWidth(18)
                                        )
                                    u_Simple_Dual_Port_RAM2   (.g_clk(g_clk),
                                                               .wr_din(Switch84_out1),
                                                               .wr_addr(Add11_out1),
                                                               .wr_en(Switch208_out1),
                                                               .rd_addr(Add12_out1),
                                                               .rd_dout(Simple_Dual_Port_RAM2_out1)
                                                               );

  assign Switch98_out1 = (Switch208_out1 == 1'b0 ? 18'sb000000000000000000 :
              Simple_Dual_Port_RAM2_out1);



  assign Add7_stage2_1 = {{15{Switch97_out1[17]}}, Switch97_out1};
  assign Add7_stage2_2 = {{15{Switch98_out1[17]}}, Switch98_out1};
  assign Add7_op_stage2 = Add7_stage2_1 - Add7_stage2_2;



  assign Add7_stage3_1 = {Unit_Delay30_out1[31], Unit_Delay30_out1};
  assign Add7_stage3_add_temp = Add7_op_stage2 + Add7_stage3_1;
  assign Add7_out1 = Add7_stage3_add_temp[31:0];



  assign Switch79_out1 = (switch_compare_1 == 1'b0 ? Constant4_out1_dtc :
              Add7_out1);



  assign Filter_Out = Switch79_out1;

  assign Switch80_out1 = (CT51_out1 == 1'b0 ? Unit_Delay30_out1 :
              Filter_Out);



  always @(posedge g_clk)
    begin : Unit_Delay30_process
      if (Rst_n == 1'b0) begin
        Unit_Delay30_out1 <= 32'sb00000000000000000000000000000000;
      end
      else begin
        Unit_Delay30_out1 <= Switch80_out1;
      end
    end



  assign Bit_Slice6_out1 = Unit_Delay30_out1[31:10];



  assign Data_Type_S1_out1 = Bit_Slice6_out1;



  assign Data_Type_S11_out1 = Data_Type_S1_out1[17:0];



  assign Filter_Out0_b18 = Data_Type_S11_out1;

endmodule  // AverFilter1024P_b18_V1

