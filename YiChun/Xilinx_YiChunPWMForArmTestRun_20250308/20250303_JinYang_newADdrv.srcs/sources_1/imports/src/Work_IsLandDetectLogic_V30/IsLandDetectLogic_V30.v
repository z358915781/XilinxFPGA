// -------------------------------------------------------------
// 
// File Name: Work_IsLandDetectLogic_V30\IsLandDetectLogic_V30\IsLandDetectLogic_V30.v
// Created: 2021-10-11 20:47:16
// 
// Generated by MATLAB 9.1 and HDL Coder 3.9
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 4e-08
// Target subsystem base rate: 4e-08
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: IsLandDetectLogic_V30
// Source Path: IsLandDetectLogic_V30/IsLandDetectLogic_V30
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module IsLandDetectLogic_V30
          (
           g_clk,
           Rst_n,
           Uabc_abs_max,
           Delta_w_b16,
           Island_UacUV_b12,
           Island_FreqDlta_b16,
           Gridon_Force,
           PQVF_SW_En,
           PQ_En,
           CtlLoopOn,
           Uac_Ins_OV,
           Pulse_4096Hz,
           VF0PQ1
          );



  input   g_clk;
  input   Rst_n;
  input   signed [11:0] Uabc_abs_max;  // sfix12
  input   signed [15:0] Delta_w_b16;  // int16
  input   signed [11:0] Island_UacUV_b12;  // sfix12
  input   signed [15:0] Island_FreqDlta_b16;  // int16
  input   Gridon_Force;
  input   PQVF_SW_En;
  input   PQ_En;
  input   CtlLoopOn;
  input   Uac_Ins_OV;
  input   Pulse_4096Hz;
  output  VF0PQ1;

  wire ro3_relop1;
  reg  Dly_3_out1;
  wire SW_1_out1;
  reg  Dly_5_out1;
  wire SW_7_out1;
  reg  Dly_2_out1;
  wire SW_4_out1;
  reg  Dly_1_out1;
  wire SW_2_out1;
  wire or9_out1;
  wire signed [16:0] Abs4_y;  // sfix17
  wire signed [15:0] Abs4_out1;  // int16
  wire ro4_relop1;
  wire or6_out1;
  wire or8_out1;
  wire or1_out1;
  wire or3_out1;
  wire or7_out1;
  reg  Unit_Delay1_out1;
  wire or5_out1;
  wire or4_out1;
  wire or2_out1;
  reg  Unit_Delay2_out1;
  wire Switch16_out1;
  wire Switch17_out1;
  wire Switch14_out1;

  // max 4 pulse,min 3 pulse


  assign ro3_relop1 = Island_UacUV_b12 > Uabc_abs_max;



  assign SW_1_out1 = (Pulse_4096Hz == 1'b0 ? Dly_3_out1 :
              ro3_relop1);



  always @(posedge g_clk)
    begin : Dly_3_process
      if (Rst_n == 1'b0) begin
        Dly_3_out1 <= 1'b0;
      end
      else begin
        Dly_3_out1 <= SW_1_out1;
      end
    end



  assign SW_7_out1 = (Pulse_4096Hz == 1'b0 ? Dly_5_out1 :
              Dly_3_out1);



  always @(posedge g_clk)
    begin : Dly_5_process
      if (Rst_n == 1'b0) begin
        Dly_5_out1 <= 1'b0;
      end
      else begin
        Dly_5_out1 <= SW_7_out1;
      end
    end



  assign SW_4_out1 = (Pulse_4096Hz == 1'b0 ? Dly_2_out1 :
              Dly_5_out1);



  always @(posedge g_clk)
    begin : Dly_2_process
      if (Rst_n == 1'b0) begin
        Dly_2_out1 <= 1'b0;
      end
      else begin
        Dly_2_out1 <= SW_4_out1;
      end
    end



  assign SW_2_out1 = (Pulse_4096Hz == 1'b0 ? Dly_1_out1 :
              Dly_2_out1);



  always @(posedge g_clk)
    begin : Dly_1_process
      if (Rst_n == 1'b0) begin
        Dly_1_out1 <= 1'b0;
      end
      else begin
        Dly_1_out1 <= SW_2_out1;
      end
    end



  assign or9_out1 = Dly_1_out1 & (Dly_2_out1 & (Dly_3_out1 & Dly_5_out1));



  assign Abs4_y = (Delta_w_b16 < 16'sb0000000000000000 ?  - ({Delta_w_b16[15], Delta_w_b16}) :
              {Delta_w_b16[15], Delta_w_b16});
  assign Abs4_out1 = Abs4_y[15:0];



  assign ro4_relop1 = Abs4_out1 > Island_FreqDlta_b16;



  assign or6_out1 = or9_out1 | ro4_relop1;



  assign or8_out1 = Uac_Ins_OV | or6_out1;



  assign or1_out1 =  ~ or6_out1;



  assign or3_out1 =  ~ CtlLoopOn;



  assign or7_out1 = or1_out1 & or3_out1;



  always @(posedge g_clk)
    begin : Unit_Delay1_process
      if (Rst_n == 1'b0) begin
        Unit_Delay1_out1 <= 1'b0;
      end
      else begin
        Unit_Delay1_out1 <= Gridon_Force;
      end
    end



  assign or5_out1 =  ~ Unit_Delay1_out1;



  assign or4_out1 = Gridon_Force & or5_out1;



  assign or2_out1 = or7_out1 | or4_out1;



  assign Switch16_out1 = (or2_out1 == 1'b0 ? Unit_Delay2_out1 :
              1'b1);



  assign Switch17_out1 = (or8_out1 == 1'b0 ? Switch16_out1 :
              1'b0);



  assign Switch14_out1 = (PQVF_SW_En == 1'b0 ? PQ_En :
              Switch17_out1);



  always @(posedge g_clk)
    begin : Unit_Delay2_process
      if (Rst_n == 1'b0) begin
        Unit_Delay2_out1 <= 1'b0;
      end
      else begin
        Unit_Delay2_out1 <= Switch14_out1;
      end
    end



  assign VF0PQ1 = Unit_Delay2_out1;


endmodule  // IsLandDetectLogic_V30

