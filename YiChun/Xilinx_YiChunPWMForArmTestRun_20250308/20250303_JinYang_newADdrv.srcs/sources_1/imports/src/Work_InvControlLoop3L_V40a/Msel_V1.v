// -------------------------------------------------------------
// 
// File Name: D:\Msel_V1\Msel_V1.v
// Created: 2023-04-04 20:49:16
// 
// Generated by MATLAB 9.1 and HDL Coder 3.9
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 4e-08
// Target subsystem base rate: 4e-08
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Msel_V1
// Source Path: Msel_V1/Msel_V1
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Msel_V1
          (
           PWM1_in1,
           PWM2_in1,
           PWM3_in1,
           PWM4_in1,
           PWM1_in2,
           PWM2_in2,
           PWM3_in2,
           PWM4_in2,
           PWM5_in2,
           PWM6_in2,
           mod_sel,
           PWM1_out,
           PWM2_out,
           PWM3_out,
           PWM4_out,
           PWM5_out,
           PWM6_out
          );



  input   PWM1_in1;
  input   PWM2_in1;
  input   PWM3_in1;
  input   PWM4_in1;
  input   PWM1_in2;
  input   PWM2_in2;
  input   PWM3_in2;
  input   PWM4_in2;
  input   PWM5_in2;
  input   PWM6_in2;
  input   mod_sel;
  output  PWM1_out;
  output  PWM2_out;
  output  PWM3_out;
  output  PWM4_out;
  output  PWM5_out;
  output  PWM6_out;

  wire Cmp5_out1;
  wire Switch4_out1;
  wire Switch1_out1;
  wire Switch2_out1;
  wire Switch3_out1;
  wire Cmp1_out1;
  wire Not1_out1;
  wire Logical_Operator3_out1;
  wire Switch5_out1;
  wire Logical_Operator4_out1;
  wire Switch6_out1;


  assign Cmp5_out1 = mod_sel == 1'b0;



  assign Switch4_out1 = (Cmp5_out1 == 1'b0 ? PWM1_in2 :
              PWM1_in1);



  assign PWM1_out = Switch4_out1;

  assign Switch1_out1 = (Cmp5_out1 == 1'b0 ? PWM2_in2 :
              PWM2_in1);



  assign PWM2_out = Switch1_out1;

  assign Switch2_out1 = (Cmp5_out1 == 1'b0 ? PWM3_in2 :
              PWM3_in1);



  assign PWM3_out = Switch2_out1;

  assign Switch3_out1 = (Cmp5_out1 == 1'b0 ? PWM4_in2 :
              PWM4_in1);



  assign PWM4_out = Switch3_out1;

  assign Cmp1_out1 = mod_sel == 1'b0;



  assign Not1_out1 =  ~ Cmp1_out1;



  assign Logical_Operator3_out1 = PWM3_in1 & Not1_out1;



  assign Switch5_out1 = (Cmp5_out1 == 1'b0 ? PWM5_in2 :
              Logical_Operator3_out1);



  assign PWM5_out = Switch5_out1;

  assign Logical_Operator4_out1 = PWM2_in1 & Not1_out1;



  assign Switch6_out1 = (Cmp5_out1 == 1'b0 ? PWM6_in2 :
              Logical_Operator4_out1);



  assign PWM6_out = Switch6_out1;

endmodule  // Msel_V1

