// -------------------------------------------------------------
// 
// File Name: D:\OffDlyV1_0\OffDly_V1.v
// Created: 2022-02-23 00:25:20
// 
// Generated by MATLAB 9.1 and HDL Coder 3.9
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 6.10352e-06
// Target subsystem base rate: 6.10352e-06
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: OffDly_V1
// Source Path: OffDlyV1_0/OffDly_V1
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module OffDly_V1
          (
           g_clk,
           Rst_n,
           IN,
           BlockTime,
           OUT
          );



  input   g_clk;
  input   Rst_n;
  input   IN;
  input   [7:0] BlockTime;  // uint8
  output  OUT;

  reg  Unit_Delay2_out1;
  wire Logical_Operator3_out1;
  wire Logical_Operator1_out1;
  wire Dy1_relop1;
  wire [7:0] Switch6_out1;  // uint8
  wire [7:0] Switch4_out1;  // uint8
  wire [7:0] Add1_out1;  // uint8
  reg [7:0] Unit_Delay3_out1;  // uint8
  wire Logical_Operator4_out1;
  wire Logical_Operator5_out1;
  wire Switch33_out1;
  reg  Unit_Delay4_out1;
  wire Logical_Operator2_out1;

  // INIT LOCK
  // 
  // ÏÂ½µ´¥·¢


  // <S1>/Unit Delay2
  always @(posedge g_clk)
    begin : Unit_Delay2_process
      if (Rst_n == 1'b0) begin
        Unit_Delay2_out1 <= 1'b0;
      end
      else begin
        Unit_Delay2_out1 <= IN;
      end
    end



  // <S1>/Logical Operator3
  assign Logical_Operator3_out1 =  ~ IN;



  // <S1>/Logical Operator1
  assign Logical_Operator1_out1 = Unit_Delay2_out1 & Logical_Operator3_out1;



  // <S1>/Switch6
  assign Switch6_out1 = (Dy1_relop1 == 1'b0 ? 8'b00000000 :
              8'b00000001);



  // <S1>/Add1
  assign Add1_out1 = Switch6_out1 + Switch4_out1;



  // <S1>/Unit Delay3
  always @(posedge g_clk)
    begin : Unit_Delay3_process
      if (Rst_n == 1'b0) begin
        Unit_Delay3_out1 <= 8'b00000000;
      end
      else begin
        Unit_Delay3_out1 <= Add1_out1;
      end
    end



  // <S1>/Switch4
  assign Switch4_out1 = (Logical_Operator1_out1 == 1'b0 ? Unit_Delay3_out1 :
              8'b00000000);



  // <S1>/Dy1
  assign Dy1_relop1 = BlockTime > Switch4_out1;



  // <S1>/Logical Operator4
  assign Logical_Operator4_out1 = IN | Dy1_relop1;



  // <S1>/Logical Operator5
  assign Logical_Operator5_out1 =  ~ Dy1_relop1;



  // <S1>/Unit Delay4
  always @(posedge g_clk)
    begin : Unit_Delay4_process
      if (Rst_n == 1'b0) begin
        Unit_Delay4_out1 <= 1'b0;
      end
      else begin
        Unit_Delay4_out1 <= Switch33_out1;
      end
    end



  // <S1>/Switch33
  assign Switch33_out1 = (Logical_Operator5_out1 == 1'b0 ? Unit_Delay4_out1 :
              1'b1);



  // <S1>/Logical Operator2
  assign Logical_Operator2_out1 = Logical_Operator4_out1 & Switch33_out1;



  assign OUT = Logical_Operator2_out1;

endmodule  // OffDly_V1

